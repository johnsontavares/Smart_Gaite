{"ast":null,"code":"var RandomGenerator =\n/** @class */\nfunction () {\n  function RandomGenerator() {}\n  /**\n   *  discuss at: http://locutus.io/php/sha1/\n   * original by: Webtoolkit.info (http://www.webtoolkit.info/)\n   * improved by: Michael White (http://getsprink.com)\n   * improved by: Kevin van Zonneveld (http://kvz.io)\n   *    input by: Brett Zamir (http://brett-zamir.me)\n   *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n   *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n   *      note 1: in a steaming fashion for faster and more efficient hashing\n   *   example 1: sha1('Kevin van Zonneveld')\n   *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n   */\n\n\n  RandomGenerator.sha1 = function (str) {\n    var _rotLeft = function (n, s) {\n      var t4 = n << s | n >>> 32 - s;\n      return t4;\n    };\n\n    var _cvtHex = function (val) {\n      var str = \"\";\n      var i;\n      var v;\n\n      for (i = 7; i >= 0; i--) {\n        v = val >>> i * 4 & 0x0f;\n        str += v.toString(16);\n      }\n\n      return str;\n    };\n\n    var blockstart;\n    var i, j;\n    var W = new Array(80);\n    var H0 = 0x67452301;\n    var H1 = 0xEFCDAB89;\n    var H2 = 0x98BADCFE;\n    var H3 = 0x10325476;\n    var H4 = 0xC3D2E1F0;\n    var A, B, C, D, E;\n    var temp; // utf8_encode\n\n    str =\n    /*unescape*/\n    encodeURIComponent(str);\n    var strLen = str.length;\n    var wordArray = [];\n\n    for (i = 0; i < strLen - 3; i += 4) {\n      j = str.charCodeAt(i) << 24 | str.charCodeAt(i + 1) << 16 | str.charCodeAt(i + 2) << 8 | str.charCodeAt(i + 3);\n      wordArray.push(j);\n    }\n\n    switch (strLen % 4) {\n      case 0:\n        i = 0x080000000;\n        break;\n\n      case 1:\n        i = str.charCodeAt(strLen - 1) << 24 | 0x0800000;\n        break;\n\n      case 2:\n        i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000;\n        break;\n\n      case 3:\n        i = str.charCodeAt(strLen - 3) << 24 | str.charCodeAt(strLen - 2) << 16 | str.charCodeAt(strLen - 1) << 8 | 0x80;\n        break;\n    }\n\n    wordArray.push(i);\n\n    while (wordArray.length % 16 !== 14) {\n      wordArray.push(0);\n    }\n\n    wordArray.push(strLen >>> 29);\n    wordArray.push(strLen << 3 & 0x0ffffffff);\n\n    for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n      for (i = 0; i < 16; i++) {\n        W[i] = wordArray[blockstart + i];\n      }\n\n      for (i = 16; i <= 79; i++) {\n        W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n      }\n\n      A = H0;\n      B = H1;\n      C = H2;\n      D = H3;\n      E = H4;\n\n      for (i = 0; i <= 19; i++) {\n        temp = _rotLeft(A, 5) + (B & C | ~B & D) + E + W[i] + 0x5A827999 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n\n      for (i = 20; i <= 39; i++) {\n        temp = _rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n\n      for (i = 40; i <= 59; i++) {\n        temp = _rotLeft(A, 5) + (B & C | B & D | C & D) + E + W[i] + 0x8F1BBCDC & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n\n      for (i = 60; i <= 79; i++) {\n        temp = _rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6 & 0x0ffffffff;\n        E = D;\n        D = C;\n        C = _rotLeft(B, 30);\n        B = A;\n        A = temp;\n      }\n\n      H0 = H0 + A & 0x0ffffffff;\n      H1 = H1 + B & 0x0ffffffff;\n      H2 = H2 + C & 0x0ffffffff;\n      H3 = H3 + D & 0x0ffffffff;\n      H4 = H4 + E & 0x0ffffffff;\n    }\n\n    temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4);\n    return temp.toLowerCase();\n  };\n  /**\n   * RFC4122 compliant UUID v4 generator.\n   */\n\n\n  RandomGenerator.uuid4 = function () {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c === \"x\" ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  };\n\n  return RandomGenerator;\n}();\n\nexport { RandomGenerator };","map":{"version":3,"sources":["../browser/src/util/RandomGenerator.ts"],"names":[],"mappings":"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","sourcesContent":["export class RandomGenerator {\n\n    /**\n     *  discuss at: http://locutus.io/php/sha1/\n     * original by: Webtoolkit.info (http://www.webtoolkit.info/)\n     * improved by: Michael White (http://getsprink.com)\n     * improved by: Kevin van Zonneveld (http://kvz.io)\n     *    input by: Brett Zamir (http://brett-zamir.me)\n     *      note 1: Keep in mind that in accordance with PHP, the whole string is buffered and then\n     *      note 1: hashed. If available, we'd recommend using Node's native crypto modules directly\n     *      note 1: in a steaming fashion for faster and more efficient hashing\n     *   example 1: sha1('Kevin van Zonneveld')\n     *   returns 1: '54916d2e62f65b3afa6e192e6a601cdbe5cb5897'\n     */\n    static sha1(str: string) {\n\n        let _rotLeft = function(n: any, s: any) {\n            let t4 = (n << s) | (n >>> (32 - s));\n            return t4;\n        };\n\n        let _cvtHex = function(val: any) {\n            let str = \"\";\n            let i;\n            let v;\n\n            for (i = 7; i >= 0; i--) {\n                v = (val >>> (i * 4)) & 0x0f;\n                str += v.toString(16);\n            }\n            return str;\n        };\n\n        let blockstart;\n        let i, j;\n        let W = new Array(80);\n        let H0 = 0x67452301;\n        let H1 = 0xEFCDAB89;\n        let H2 = 0x98BADCFE;\n        let H3 = 0x10325476;\n        let H4 = 0xC3D2E1F0;\n        let A, B, C, D, E;\n        let temp;\n\n        // utf8_encode\n        str = /*unescape*/(encodeURIComponent(str));\n        let strLen = str.length;\n\n        let wordArray = [];\n        for (i = 0; i < strLen - 3; i += 4) {\n            j = str.charCodeAt(i) << 24 |\n                str.charCodeAt(i + 1) << 16 |\n                str.charCodeAt(i + 2) << 8 |\n                str.charCodeAt(i + 3);\n            wordArray.push(j);\n        }\n\n        switch (strLen % 4) {\n            case 0:\n                i = 0x080000000;\n                break;\n            case 1:\n                i = str.charCodeAt(strLen - 1) << 24 | 0x0800000;\n                break;\n            case 2:\n                i = str.charCodeAt(strLen - 2) << 24 | str.charCodeAt(strLen - 1) << 16 | 0x08000;\n                break;\n            case 3:\n                i = str.charCodeAt(strLen - 3) << 24 |\n                    str.charCodeAt(strLen - 2) << 16 |\n                    str.charCodeAt(strLen - 1) <<\n                    8 | 0x80;\n                break;\n        }\n\n        wordArray.push(i);\n\n        while ((wordArray.length % 16) !== 14) {\n            wordArray.push(0);\n        }\n\n        wordArray.push(strLen >>> 29);\n        wordArray.push((strLen << 3) & 0x0ffffffff);\n\n        for (blockstart = 0; blockstart < wordArray.length; blockstart += 16) {\n            for (i = 0; i < 16; i++) {\n                W[i] = wordArray[blockstart + i];\n            }\n            for (i = 16; i <= 79; i++) {\n                W[i] = _rotLeft(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n            }\n\n            A = H0;\n            B = H1;\n            C = H2;\n            D = H3;\n            E = H4;\n\n            for (i = 0; i <= 19; i++) {\n                temp = (_rotLeft(A, 5) + ((B & C) | (~B & D)) + E + W[i] + 0x5A827999) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n\n            for (i = 20; i <= 39; i++) {\n                temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0x6ED9EBA1) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n\n            for (i = 40; i <= 59; i++) {\n                temp = (_rotLeft(A, 5) + ((B & C) | (B & D) | (C & D)) + E + W[i] + 0x8F1BBCDC) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n\n            for (i = 60; i <= 79; i++) {\n                temp = (_rotLeft(A, 5) + (B ^ C ^ D) + E + W[i] + 0xCA62C1D6) & 0x0ffffffff;\n                E = D;\n                D = C;\n                C = _rotLeft(B, 30);\n                B = A;\n                A = temp;\n            }\n\n            H0 = (H0 + A) & 0x0ffffffff;\n            H1 = (H1 + B) & 0x0ffffffff;\n            H2 = (H2 + C) & 0x0ffffffff;\n            H3 = (H3 + D) & 0x0ffffffff;\n            H4 = (H4 + E) & 0x0ffffffff;\n        }\n\n        temp = _cvtHex(H0) + _cvtHex(H1) + _cvtHex(H2) + _cvtHex(H3) + _cvtHex(H4);\n        return temp.toLowerCase();\n    }\n\n    /**\n     * RFC4122 compliant UUID v4 generator.\n     */\n    static uuid4(): string {\n        return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, (c) =>  {\n            const r = Math.random() * 16 | 0, v = c === \"x\" ? r : (r & 0x3 | 0x8);\n            return v.toString(16);\n        });\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}