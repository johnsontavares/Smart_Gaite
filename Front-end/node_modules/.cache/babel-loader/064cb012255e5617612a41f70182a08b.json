{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * Thrown when relations specified in the find options were not found in the entities.\n*/\n\nvar FindRelationsNotFoundError =\n/** @class */\nfunction (_super) {\n  __extends(FindRelationsNotFoundError, _super);\n\n  function FindRelationsNotFoundError(notFoundRelations) {\n    var _this = _super.call(this) || this;\n\n    Object.setPrototypeOf(_this, FindRelationsNotFoundError.prototype);\n\n    if (notFoundRelations.length === 1) {\n      _this.message = \"Relation \\\"\" + notFoundRelations[0] + \"\\\" was not found; please check if it is correct and really exists in your entity.\";\n    } else {\n      _this.message = \"Relations \" + notFoundRelations.map(function (relation) {\n        return \"\\\"\" + relation + \"\\\"\";\n      }).join(\", \") + \" were not found; please check if relations are correct and they exist in your entities.\";\n    }\n\n    return _this;\n  }\n\n  return FindRelationsNotFoundError;\n}(Error);\n\nexport { FindRelationsNotFoundError };","map":{"version":3,"sources":["../browser/src/error/FindRelationsNotFoundError.ts"],"names":[],"mappings":";AAAA;;AAEE;;AACF,IAAA,0BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgD,EAAA,SAAA,CAAA,0BAAA,EAAA,MAAA,CAAA;;AAE5C,WAAA,0BAAA,CAAY,iBAAZ,EAAuC;AAAvC,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAEI,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,0BAA0B,CAAC,SAAvD;;AACA,QAAI,iBAAiB,CAAC,MAAlB,KAA6B,CAAjC,EAAoC;AAChC,MAAA,KAAI,CAAC,OAAL,GAAe,gBAAa,iBAAiB,CAAC,CAAD,CAA9B,GAAiC,mFAAhD;AACH,KAFD,MAEO;AACH,MAAA,KAAI,CAAC,OAAL,GAAe,eAAa,iBAAiB,CAAC,GAAlB,CAAsB,UAAA,QAAA,EAAQ;AAAI,eAAA,OAAI,QAAJ,GAAA,IAAA;AAAe,OAAjD,EAAmD,IAAnD,CAAwD,IAAxD,CAAb,GAA0E,yFAAzF;AACH;;;AACJ;;AAEL,SAAA,0BAAA;AAAC,CAZD,CAAgD,KAAhD,CAAA","sourcesContent":["/**\n * Thrown when relations specified in the find options were not found in the entities.\n*/\nexport class FindRelationsNotFoundError extends Error {\n\n    constructor(notFoundRelations: string[]) {\n        super();\n        Object.setPrototypeOf(this, FindRelationsNotFoundError.prototype);\n        if (notFoundRelations.length === 1) {\n            this.message = `Relation \"${notFoundRelations[0]}\" was not found; please check if it is correct and really exists in your entity.`;\n        } else {\n            this.message = `Relations ${notFoundRelations.map(relation => `\"${relation}\"`).join(\", \")} were not found; please check if relations are correct and they exist in your entities.`;\n        }\n    }\n\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}