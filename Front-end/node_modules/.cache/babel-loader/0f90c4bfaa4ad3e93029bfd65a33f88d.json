{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\n/**\n * Database's table check constraint stored in this class.\n */\n\nvar TableCheck =\n/** @class */\nfunction () {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  function TableCheck(options) {\n    /**\n     * Column that contains this constraint.\n     */\n    this.columnNames = [];\n    this.name = options.name;\n    this.columnNames = options.columnNames;\n    this.expression = options.expression;\n  } // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Creates a new copy of this constraint with exactly same properties.\n   */\n\n\n  TableCheck.prototype.clone = function () {\n    return new TableCheck({\n      name: this.name,\n      columnNames: this.columnNames ? __spreadArray([], __read(this.columnNames)) : [],\n      expression: this.expression\n    });\n  }; // -------------------------------------------------------------------------\n  // Static Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Creates checks from the check metadata object.\n   */\n\n\n  TableCheck.create = function (checkMetadata) {\n    return new TableCheck({\n      name: checkMetadata.name,\n      expression: checkMetadata.expression\n    });\n  };\n\n  return TableCheck;\n}();\n\nexport { TableCheck };","map":{"version":3,"sources":["../browser/src/schema-builder/table/TableCheck.ts"],"names":[],"mappings":";AAGA;;AAEG;;AACH,IAAA,UAAA;AAAA;AAAA,YAAA;AAqBI;AACA;AACA;AAEA,WAAA,UAAA,CAAY,OAAZ,EAAsC;AAdtC;;AAEG;AACH,SAAA,WAAA,GAAyB,EAAzB;AAYI,SAAK,IAAL,GAAY,OAAO,CAAC,IAApB;AACA,SAAK,WAAL,GAAmB,OAAO,CAAC,WAA3B;AACA,SAAK,UAAL,GAAkB,OAAO,CAAC,UAA1B;AACH,GA7BL,CA+BI;AACA;AACA;;AAEA;;AAEG;;;AACH,EAAA,UAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,WAAO,IAAI,UAAJ,CAAkC;AACrC,MAAA,IAAI,EAAE,KAAK,IAD0B;AAErC,MAAA,WAAW,EAAE,KAAK,WAAL,GAAkB,aAAA,CAAA,EAAA,EAAA,MAAA,CAAK,KAAK,WAAV,CAAA,CAAlB,GAA2C,EAFnB;AAGrC,MAAA,UAAU,EAAE,KAAK;AAHoB,KAAlC,CAAP;AAKH,GAND,CAtCJ,CA8CI;AACA;AACA;;AAEA;;AAEG;;;AACI,EAAA,UAAA,CAAA,MAAA,GAAP,UAAc,aAAd,EAA0C;AACtC,WAAO,IAAI,UAAJ,CAAkC;AACrC,MAAA,IAAI,EAAE,aAAa,CAAC,IADiB;AAErC,MAAA,UAAU,EAAE,aAAa,CAAC;AAFW,KAAlC,CAAP;AAIH,GALM;;AAOX,SAAA,UAAA;AAAC,CA5DD,EAAA","sourcesContent":["import {TableCheckOptions} from \"../options/TableCheckOptions\";\nimport {CheckMetadata} from \"../../metadata/CheckMetadata\";\n\n/**\n * Database's table check constraint stored in this class.\n */\nexport class TableCheck {\n\n    // -------------------------------------------------------------------------\n    // Public Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Constraint name.\n     */\n    name?: string;\n\n    /**\n     * Column that contains this constraint.\n     */\n    columnNames?: string[] = [];\n\n    /**\n     * Check expression.\n     */\n    expression?: string;\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(options: TableCheckOptions) {\n        this.name = options.name;\n        this.columnNames = options.columnNames;\n        this.expression = options.expression;\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates a new copy of this constraint with exactly same properties.\n     */\n    clone(): TableCheck {\n        return new TableCheck(<TableCheckOptions>{\n            name: this.name,\n            columnNames: this.columnNames ? [...this.columnNames] : [],\n            expression: this.expression,\n        });\n    }\n\n    // -------------------------------------------------------------------------\n    // Static Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Creates checks from the check metadata object.\n     */\n    static create(checkMetadata: CheckMetadata): TableCheck {\n        return new TableCheck(<TableCheckOptions>{\n            name: checkMetadata.name,\n            expression: checkMetadata.expression\n        });\n    }\n\n}"],"sourceRoot":"../.."},"metadata":{},"sourceType":"module"}