{"ast":null,"code":"/**\n * Syntax sugar.\n * Allows to use brackets in WHERE expressions for better syntax.\n */\nvar Brackets =\n/** @class */\nfunction () {\n  /**\n   * Given WHERE query builder that will build a WHERE expression that will be taken into brackets.\n   */\n  function Brackets(whereFactory) {\n    this.whereFactory = whereFactory;\n  }\n\n  return Brackets;\n}();\n\nexport { Brackets };","map":{"version":3,"sources":["../browser/src/query-builder/Brackets.ts"],"names":[],"mappings":"AAEA;;;AAGG;AACH,IAAA,QAAA;AAAA;AAAA,YAAA;AAOI;;AAEG;AACH,WAAA,QAAA,CAAY,YAAZ,EAAsD;AAClD,SAAK,YAAL,GAAoB,YAApB;AACH;;AAEL,SAAA,QAAA;AAAC,CAdD,EAAA","sourcesContent":["import {WhereExpression} from \"./WhereExpression\";\n\n/**\n * Syntax sugar.\n * Allows to use brackets in WHERE expressions for better syntax.\n */\nexport class Brackets {\n\n    /**\n     * WHERE expression that will be taken into brackets.\n     */\n    whereFactory: (qb: WhereExpression) => any;\n\n    /**\n     * Given WHERE query builder that will build a WHERE expression that will be taken into brackets.\n     */\n    constructor(whereFactory: (qb: WhereExpression) => any) {\n        this.whereFactory = whereFactory;\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}