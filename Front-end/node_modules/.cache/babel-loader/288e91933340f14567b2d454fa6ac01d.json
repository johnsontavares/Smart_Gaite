{"ast":null,"code":"import { getMetadataArgsStorage } from \"../\";\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\n\nexport function Check(nameOrExpression, maybeExpression) {\n  var name = maybeExpression ? nameOrExpression : undefined;\n  var expression = maybeExpression ? maybeExpression : nameOrExpression;\n  if (!expression) throw new Error(\"Check expression is required\");\n  return function (clsOrObject, propertyName) {\n    getMetadataArgsStorage().checks.push({\n      target: propertyName ? clsOrObject.constructor : clsOrObject,\n      name: name,\n      expression: expression\n    });\n  };\n}","map":{"version":3,"sources":["../browser/src/decorator/Check.ts"],"names":[],"mappings":"AAAA,SAAQ,sBAAR,QAAqC,KAArC;AAiBA;;;;AAIG;;AACH,OAAM,SAAU,KAAV,CAAgB,gBAAhB,EAA0C,eAA1C,EAAkE;AAEpE,MAAM,IAAI,GAAG,eAAe,GAAG,gBAAH,GAAsB,SAAlD;AACA,MAAM,UAAU,GAAG,eAAe,GAAG,eAAH,GAAqB,gBAAvD;AAEA,MAAI,CAAC,UAAL,EACI,MAAM,IAAI,KAAJ,CAAU,8BAAV,CAAN;AAEJ,SAAO,UAAU,WAAV,EAAwC,YAAxC,EAAsE;AAEzE,IAAA,sBAAsB,GAAG,MAAzB,CAAgC,IAAhC,CAAqC;AACjC,MAAA,MAAM,EAAE,YAAY,GAAG,WAAW,CAAC,WAAf,GAA6B,WADhB;AAEjC,MAAA,IAAI,EAAE,IAF2B;AAGjC,MAAA,UAAU,EAAE;AAHqB,KAArC;AAKH,GAPD;AAQH","sourcesContent":["import {getMetadataArgsStorage} from \"../\";\nimport {CheckMetadataArgs} from \"../metadata-args/CheckMetadataArgs\";\n\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\nexport function Check(expression: string): ClassDecorator & PropertyDecorator;\n\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\nexport function Check(name: string, expression: string): ClassDecorator & PropertyDecorator;\n\n/**\n * Creates a database check.\n * Can be used on entity property or on entity.\n * Can create checks with composite columns when used on entity.\n */\nexport function Check(nameOrExpression: string, maybeExpression?: string): ClassDecorator & PropertyDecorator {\n\n    const name = maybeExpression ? nameOrExpression : undefined;\n    const expression = maybeExpression ? maybeExpression : nameOrExpression;\n\n    if (!expression)\n        throw new Error(`Check expression is required`);\n\n    return function (clsOrObject: Function|Object, propertyName?: string | symbol) {\n\n        getMetadataArgsStorage().checks.push({\n            target: propertyName ? clsOrObject.constructor : clsOrObject as Function,\n            name: name,\n            expression: expression\n        } as CheckMetadataArgs);\n    };\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}