{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\n\nvar OrmUtils =\n/** @class */\nfunction () {\n  function OrmUtils() {} // -------------------------------------------------------------------------\n  // Public methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Chunks array into pieces.\n   */\n\n\n  OrmUtils.chunk = function (array, size) {\n    return Array.from(Array(Math.ceil(array.length / size)), function (_, i) {\n      return array.slice(i * size, i * size + size);\n    });\n  };\n\n  OrmUtils.splitClassesAndStrings = function (clsesAndStrings) {\n    return [clsesAndStrings.filter(function (cls) {\n      return typeof cls !== \"string\";\n    }), clsesAndStrings.filter(function (str) {\n      return typeof str === \"string\";\n    })];\n  };\n\n  OrmUtils.groupBy = function (array, propertyCallback) {\n    return array.reduce(function (groupedArray, value) {\n      var key = propertyCallback(value);\n      var grouped = groupedArray.find(function (i) {\n        return i.id === key;\n      });\n\n      if (!grouped) {\n        grouped = {\n          id: key,\n          items: []\n        };\n        groupedArray.push(grouped);\n      }\n\n      grouped.items.push(value);\n      return groupedArray;\n    }, []);\n  };\n\n  OrmUtils.uniq = function (array, criteriaOrProperty) {\n    return array.reduce(function (uniqueArray, item) {\n      var found = false;\n\n      if (criteriaOrProperty instanceof Function) {\n        var itemValue_1 = criteriaOrProperty(item);\n        found = !!uniqueArray.find(function (uniqueItem) {\n          return criteriaOrProperty(uniqueItem) === itemValue_1;\n        });\n      } else if (typeof criteriaOrProperty === \"string\") {\n        found = !!uniqueArray.find(function (uniqueItem) {\n          return uniqueItem[criteriaOrProperty] === item[criteriaOrProperty];\n        });\n      } else {\n        found = uniqueArray.indexOf(item) !== -1;\n      }\n\n      if (!found) uniqueArray.push(item);\n      return uniqueArray;\n    }, []);\n  };\n\n  OrmUtils.isObject = function (item) {\n    return item && typeof item === \"object\" && !Array.isArray(item);\n  };\n  /**\n   * Deep Object.assign.\n   *\n   * @see http://stackoverflow.com/a/34749873\n   */\n\n\n  OrmUtils.mergeDeep = function (target) {\n    var _a, _b;\n\n    var sources = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      sources[_i - 1] = arguments[_i];\n    }\n\n    if (!sources.length) return target;\n    var source = sources.shift();\n\n    if (this.isObject(target) && this.isObject(source)) {\n      for (var key in source) {\n        var value = source[key];\n        if (key === \"__proto__\" || value instanceof Promise) continue;\n\n        if (this.isObject(value) && !(value instanceof Map) && !(value instanceof Set) && !(value instanceof Date) && !(value instanceof Buffer) && !(value instanceof RegExp)) {\n          if (!target[key]) Object.assign(target, (_a = {}, _a[key] = Object.create(Object.getPrototypeOf(value)), _a));\n          this.mergeDeep(target[key], value);\n        } else {\n          Object.assign(target, (_b = {}, _b[key] = value, _b));\n        }\n      }\n    }\n\n    return this.mergeDeep.apply(this, __spreadArray([target], __read(sources)));\n  };\n  /**\n   * Deep compare objects.\n   *\n   * @see http://stackoverflow.com/a/1144249\n   */\n\n\n  OrmUtils.deepCompare = function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var i, l, leftChain, rightChain;\n\n    if (arguments.length < 1) {\n      return true; // Die silently? Don't know how to handle such case, please help...\n      // throw \"Need two or more arguments to compare\";\n    }\n\n    for (i = 1, l = arguments.length; i < l; i++) {\n      leftChain = []; // Todo: this can be cached\n\n      rightChain = [];\n\n      if (!this.compare2Objects(leftChain, rightChain, arguments[0], arguments[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n  /**\n   * Check if two entity-id-maps are the same\n   */\n\n\n  OrmUtils.compareIds = function (firstId, secondId) {\n    if (firstId === undefined || firstId === null || secondId === undefined || secondId === null) return false; // Optimized version for the common case\n\n    if ((typeof firstId.id === \"string\" && typeof secondId.id === \"string\" || typeof firstId.id === \"number\" && typeof secondId.id === \"number\") && Object.keys(firstId).length === 1 && Object.keys(secondId).length === 1) {\n      return firstId.id === secondId.id;\n    }\n\n    return OrmUtils.deepCompare(firstId, secondId);\n  };\n  /**\n   * Transforms given value into boolean value.\n   */\n\n\n  OrmUtils.toBoolean = function (value) {\n    if (typeof value === \"boolean\") return value;\n    if (typeof value === \"string\") return value === \"true\" || value === \"1\";\n    if (typeof value === \"number\") return value > 0;\n    return false;\n  };\n  /**\n   * Composes an object from the given array of keys and values.\n   */\n\n\n  OrmUtils.zipObject = function (keys, values) {\n    return keys.reduce(function (object, column, index) {\n      object[column] = values[index];\n      return object;\n    }, {});\n  };\n  /**\n   * Compares two arrays.\n   */\n\n\n  OrmUtils.isArraysEqual = function (arr1, arr2) {\n    if (arr1.length !== arr2.length) return false;\n    return arr1.every(function (element) {\n      return arr2.indexOf(element) !== -1;\n    });\n  }; // -------------------------------------------------------------------------\n  // Private methods\n  // -------------------------------------------------------------------------\n\n\n  OrmUtils.compare2Objects = function (leftChain, rightChain, x, y) {\n    var p; // remember that NaN === NaN returns false\n    // and isNaN(undefined) returns true\n\n    if (Number.isNaN(x) && Number.isNaN(y)) return true; // Compare primitives and functions.\n    // Check if both arguments link to the same object.\n    // Especially useful on the step where we compare prototypes\n\n    if (x === y) return true; // Unequal, but either is null or undefined (use case: jsonb comparasion)\n    // PR #3776, todo: add tests\n\n    if (x === null || y === null || x === undefined || y === undefined) return false; // Fix the buffer compare bug.\n    // See: https://github.com/typeorm/typeorm/issues/3654\n\n    if ((typeof x.equals === \"function\" || x.equals instanceof Function) && x.equals(y)) return true; // Works in case when functions are created in constructor.\n    // Comparing dates is a common scenario. Another built-ins?\n    // We can even handle functions passed across iframes\n\n    if (typeof x === \"function\" && typeof y === \"function\" || x instanceof Date && y instanceof Date || x instanceof RegExp && y instanceof RegExp || x instanceof String && y instanceof String || x instanceof Number && y instanceof Number) return x.toString() === y.toString(); // At last checking prototypes as good as we can\n\n    if (!(x instanceof Object && y instanceof Object)) return false;\n    if (x.isPrototypeOf(y) || y.isPrototypeOf(x)) return false;\n    if (x.constructor !== y.constructor) return false;\n    if (x.prototype !== y.prototype) return false; // Check for infinitive linking loops\n\n    if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1) return false; // Quick checking of one object being a subset of another.\n    // todo: cache the structure of arguments[0] for performance\n\n    for (p in y) {\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n        return false;\n      } else if (typeof y[p] !== typeof x[p]) {\n        return false;\n      }\n    }\n\n    for (p in x) {\n      if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n        return false;\n      } else if (typeof y[p] !== typeof x[p]) {\n        return false;\n      }\n\n      switch (typeof x[p]) {\n        case \"object\":\n        case \"function\":\n          leftChain.push(x);\n          rightChain.push(y);\n\n          if (!this.compare2Objects(leftChain, rightChain, x[p], y[p])) {\n            return false;\n          }\n\n          leftChain.pop();\n          rightChain.pop();\n          break;\n\n        default:\n          if (x[p] !== y[p]) {\n            return false;\n          }\n\n          break;\n      }\n    }\n\n    return true;\n  };\n\n  return OrmUtils;\n}();\n\nexport { OrmUtils };","map":{"version":3,"sources":["../browser/src/util/OrmUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import {ObjectLiteral} from \"../common/ObjectLiteral\";\n\nexport class OrmUtils {\n\n    // -------------------------------------------------------------------------\n    // Public methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Chunks array into pieces.\n     */\n    static chunk<T>(array: T[], size: number): T[][] {\n        return Array.from(Array(Math.ceil(array.length / size)), (_, i) => {\n            return array.slice(i * size, i * size + size);\n        });\n    }\n\n    static splitClassesAndStrings<T>(clsesAndStrings: (string | T)[]): [T[], string[]] {\n        return [\n            (clsesAndStrings).filter((cls): cls is T => typeof cls !== \"string\"),\n            (clsesAndStrings).filter((str): str is string => typeof str === \"string\"),\n        ];\n    }\n\n    static groupBy<T, R>(array: T[], propertyCallback: (item: T) => R): { id: R, items: T[] }[] {\n        return array.reduce((groupedArray, value) => {\n            const key = propertyCallback(value);\n            let grouped = groupedArray.find(i => i.id === key);\n            if (!grouped) {\n                grouped = { id: key, items: [] };\n                groupedArray.push(grouped);\n            }\n            grouped.items.push(value);\n            return groupedArray;\n        }, [] as Array<{ id: R, items: T[] }>);\n    }\n\n    static uniq<T>(array: T[], criteria?: (item: T) => any): T[];\n    static uniq<T, K extends keyof T>(array: T[], property: K): T[];\n    static uniq<T, K extends keyof T>(array: T[], criteriaOrProperty?: ((item: T) => any) | K): T[] {\n        return array.reduce((uniqueArray, item) => {\n            let found: boolean = false;\n            if (criteriaOrProperty instanceof Function) {\n                const itemValue = criteriaOrProperty(item);\n                found = !!uniqueArray.find(uniqueItem => criteriaOrProperty(uniqueItem) === itemValue);\n\n            } else if (typeof criteriaOrProperty === \"string\") {\n                found = !!uniqueArray.find(uniqueItem => uniqueItem[criteriaOrProperty] === item[criteriaOrProperty]);\n\n            } else {\n                found = uniqueArray.indexOf(item) !== -1;\n            }\n\n            if (!found)\n                uniqueArray.push(item);\n\n            return uniqueArray;\n        }, [] as T[]);\n    }\n\n    static isObject(item: any) {\n        return (item && typeof item === \"object\" && !Array.isArray(item));\n    }\n\n    /**\n     * Deep Object.assign.\n     *\n     * @see http://stackoverflow.com/a/34749873\n     */\n    static mergeDeep(target: any, ...sources: any[]): any {\n        if (!sources.length) return target;\n        const source = sources.shift();\n\n        if (this.isObject(target) && this.isObject(source)) {\n            for (const key in source) {\n                const value = source[key];\n                if (key === \"__proto__\" || value instanceof Promise)\n                    continue;\n\n                if (this.isObject(value)\n                && !(value instanceof Map)\n                && !(value instanceof Set)\n                && !(value instanceof Date)\n                && !(value instanceof Buffer)\n                && !(value instanceof RegExp)) {\n                    if (!target[key])\n                        Object.assign(target, { [key]: Object.create(Object.getPrototypeOf(value)) });\n                    this.mergeDeep(target[key], value);\n                } else {\n                    Object.assign(target, { [key]: value });\n                }\n            }\n        }\n\n        return this.mergeDeep(target, ...sources);\n    }\n\n    /**\n     * Deep compare objects.\n     *\n     * @see http://stackoverflow.com/a/1144249\n     */\n    static deepCompare(...args: any[]): boolean {\n        let i: any, l: any, leftChain: any, rightChain: any;\n\n        if (arguments.length < 1) {\n            return true; // Die silently? Don't know how to handle such case, please help...\n            // throw \"Need two or more arguments to compare\";\n        }\n\n        for (i = 1, l = arguments.length; i < l; i++) {\n\n            leftChain = []; // Todo: this can be cached\n            rightChain = [];\n\n            if (!this.compare2Objects(leftChain, rightChain, arguments[0], arguments[i])) {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * Check if two entity-id-maps are the same\n     */\n    static compareIds(firstId: ObjectLiteral|undefined, secondId: ObjectLiteral|undefined): boolean {\n        if (firstId === undefined || firstId === null || secondId === undefined || secondId === null)\n            return false;\n\n        // Optimized version for the common case\n        if (\n            ((typeof firstId.id === \"string\" && typeof secondId.id === \"string\") ||\n            (typeof firstId.id === \"number\" && typeof secondId.id === \"number\")) &&\n            Object.keys(firstId).length === 1 &&\n            Object.keys(secondId).length === 1\n        ) {\n            return firstId.id === secondId.id;\n        }\n\n        return OrmUtils.deepCompare(firstId, secondId);\n    }\n\n    /**\n     * Transforms given value into boolean value.\n     */\n    static toBoolean(value: any): boolean {\n        if (typeof value === \"boolean\")\n            return value;\n\n        if (typeof value === \"string\")\n            return value === \"true\" || value === \"1\";\n\n        if (typeof value === \"number\")\n            return value > 0;\n\n        return false;\n    }\n\n    /**\n     * Composes an object from the given array of keys and values.\n     */\n    static zipObject(keys: any[], values: any[]): ObjectLiteral {\n        return keys.reduce((object, column, index) => {\n            object[column] = values[index];\n            return object;\n        }, {} as ObjectLiteral);\n    }\n\n    /**\n     * Compares two arrays.\n     */\n    static isArraysEqual(arr1: any[], arr2: any[]): boolean {\n        if (arr1.length !== arr2.length) return false;\n        return arr1.every(element => {\n            return arr2.indexOf(element) !== -1;\n        });\n    }\n\n    // -------------------------------------------------------------------------\n    // Private methods\n    // -------------------------------------------------------------------------\n\n    private static compare2Objects(leftChain: any, rightChain: any, x: any, y: any) {\n        let p;\n\n        // remember that NaN === NaN returns false\n        // and isNaN(undefined) returns true\n        if (Number.isNaN(x) && Number.isNaN(y))\n            return true;\n\n        // Compare primitives and functions.\n        // Check if both arguments link to the same object.\n        // Especially useful on the step where we compare prototypes\n        if (x === y)\n            return true;\n\n        // Unequal, but either is null or undefined (use case: jsonb comparasion)\n        // PR #3776, todo: add tests\n        if (x === null || y === null || x === undefined || y === undefined)\n          return false;\n\n        // Fix the buffer compare bug.\n        // See: https://github.com/typeorm/typeorm/issues/3654\n        if ((typeof x.equals === \"function\" || x.equals instanceof Function) && x.equals(y))\n            return true;\n\n        // Works in case when functions are created in constructor.\n        // Comparing dates is a common scenario. Another built-ins?\n        // We can even handle functions passed across iframes\n        if ((typeof x === \"function\" && typeof y === \"function\") ||\n            (x instanceof Date && y instanceof Date) ||\n            (x instanceof RegExp && y instanceof RegExp) ||\n            (x instanceof String && y instanceof String) ||\n            (x instanceof Number && y instanceof Number))\n            return x.toString() === y.toString();\n\n        // At last checking prototypes as good as we can\n        if (!(x instanceof Object && y instanceof Object))\n            return false;\n\n        if (x.isPrototypeOf(y) || y.isPrototypeOf(x))\n            return false;\n\n        if (x.constructor !== y.constructor)\n            return false;\n\n        if (x.prototype !== y.prototype)\n            return false;\n\n        // Check for infinitive linking loops\n        if (leftChain.indexOf(x) > -1 || rightChain.indexOf(y) > -1)\n            return false;\n\n        // Quick checking of one object being a subset of another.\n        // todo: cache the structure of arguments[0] for performance\n        for (p in y) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n        }\n\n        for (p in x) {\n            if (y.hasOwnProperty(p) !== x.hasOwnProperty(p)) {\n                return false;\n            }\n            else if (typeof y[p] !== typeof x[p]) {\n                return false;\n            }\n\n            switch (typeof (x[p])) {\n                case \"object\":\n                case \"function\":\n\n                    leftChain.push(x);\n                    rightChain.push(y);\n\n                    if (!this.compare2Objects(leftChain, rightChain, x[p], y[p])) {\n                        return false;\n                    }\n\n                    leftChain.pop();\n                    rightChain.pop();\n                    break;\n\n                default:\n                    if (x[p] !== y[p]) {\n                        return false;\n                    }\n                    break;\n            }\n        }\n\n        return true;\n    }\n\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}