{"ast":null,"code":"import { __read } from \"tslib\";\n/**\n * Helper utility functions for QueryBuilder.\n */\n\nvar QueryBuilderUtils =\n/** @class */\nfunction () {\n  function QueryBuilderUtils() {}\n  /**\n   * Checks if given value is a string representation of alias property,\n   * e.g. \"post.category\" or \"post.id\".\n   */\n\n\n  QueryBuilderUtils.isAliasProperty = function (str) {\n    // alias property must be a string and must have a dot separator\n    if (typeof str !== \"string\" || str.indexOf(\".\") === -1) return false; // extra alias and its property relation\n\n    var _a = __read(str.split(\".\"), 2),\n        aliasName = _a[0],\n        propertyName = _a[1]; // todo: what about relations in embedded?\n\n\n    if (!aliasName || !propertyName) return false; // alias and property must be represented in a special format\n    // const aliasNameRegexp = /^[a-zA-Z0-9_-]+$/;\n    // if (!aliasNameRegexp.test(aliasName) || !aliasNameRegexp.test(propertyName))\n    //     return false;\n    // make sure string is not a subquery\n\n    if (str.indexOf(\"(\") !== -1 || str.indexOf(\")\") !== -1) return false;\n    return true;\n  };\n\n  return QueryBuilderUtils;\n}();\n\nexport { QueryBuilderUtils };","map":{"version":3,"sources":["../browser/src/query-builder/QueryBuilderUtils.ts"],"names":[],"mappings":";AAAA;;AAEG;;AACH,IAAA,iBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,iBAAA,GAAA,CA4BC;AA1BG;;;AAGG;;;AACI,EAAA,iBAAA,CAAA,eAAA,GAAP,UAAuB,GAAvB,EAA+B;AAE3B;AACA,QAAI,OAAO,GAAP,KAAe,QAAf,IAA2B,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAArD,EACI,OAAO,KAAP,CAJuB,CAM3B;;AACM,QAAA,EAAA,GAAA,MAAA,CAA4B,GAAG,CAAC,KAAJ,CAAU,GAAV,CAA5B,EAA0C,CAA1C,CAAA;AAAA,QAAC,SAAS,GAAA,EAAA,CAAA,CAAA,CAAV;AAAA,QAAY,YAAY,GAAA,EAAA,CAAA,CAAA,CAAxB,CAPqB,CAOuB;;;AAClD,QAAI,CAAC,SAAD,IAAc,CAAC,YAAnB,EACI,OAAO,KAAP,CATuB,CAW3B;AACA;AACA;AACA;AACA;;AACA,QAAI,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAAtB,IAA2B,GAAG,CAAC,OAAJ,CAAY,GAAZ,MAAqB,CAAC,CAArD,EACI,OAAO,KAAP;AAEJ,WAAO,IAAP;AACH,GApBM;;AAsBX,SAAA,iBAAA;AAAC,CA5BD,EAAA","sourcesContent":["/**\n * Helper utility functions for QueryBuilder.\n */\nexport class QueryBuilderUtils {\n\n    /**\n     * Checks if given value is a string representation of alias property,\n     * e.g. \"post.category\" or \"post.id\".\n     */\n    static isAliasProperty(str: any): str is string {\n\n        // alias property must be a string and must have a dot separator\n        if (typeof str !== \"string\" || str.indexOf(\".\") === -1)\n            return false;\n\n        // extra alias and its property relation\n        const [aliasName, propertyName] = str.split(\".\"); // todo: what about relations in embedded?\n        if (!aliasName || !propertyName)\n            return false;\n\n        // alias and property must be represented in a special format\n        // const aliasNameRegexp = /^[a-zA-Z0-9_-]+$/;\n        // if (!aliasNameRegexp.test(aliasName) || !aliasNameRegexp.test(propertyName))\n        //     return false;\n        // make sure string is not a subquery\n        if (str.indexOf(\"(\") !== -1 || str.indexOf(\")\") !== -1)\n            return false;\n\n        return true;\n    }\n\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}