{"ast":null,"code":"/**\n * Provides a constants for each entity listener type.\n */\nvar EventListenerTypes =\n/** @class */\nfunction () {\n  function EventListenerTypes() {}\n\n  EventListenerTypes.AFTER_LOAD = \"after-load\";\n  EventListenerTypes.BEFORE_INSERT = \"before-insert\";\n  EventListenerTypes.AFTER_INSERT = \"after-insert\";\n  EventListenerTypes.BEFORE_UPDATE = \"before-update\";\n  EventListenerTypes.AFTER_UPDATE = \"after-update\";\n  EventListenerTypes.BEFORE_REMOVE = \"before-remove\";\n  EventListenerTypes.AFTER_REMOVE = \"after-remove\";\n  return EventListenerTypes;\n}();\n\nexport { EventListenerTypes };","map":{"version":3,"sources":["../browser/src/metadata/types/EventListenerTypes.ts"],"names":[],"mappings":"AAYA;;AAEG;AACH,IAAA,kBAAA;AAAA;AAAA,YAAA;AAAA,WAAA,kBAAA,GAAA,CAQC;;AAPU,EAAA,kBAAA,CAAA,UAAA,GAAa,YAAb;AACA,EAAA,kBAAA,CAAA,aAAA,GAAgB,eAAhB;AACA,EAAA,kBAAA,CAAA,YAAA,GAAe,cAAf;AACA,EAAA,kBAAA,CAAA,aAAA,GAAgB,eAAhB;AACA,EAAA,kBAAA,CAAA,YAAA,GAAe,cAAf;AACA,EAAA,kBAAA,CAAA,aAAA,GAAgB,eAAhB;AACA,EAAA,kBAAA,CAAA,YAAA,GAAe,cAAf;AACX,SAAA,kBAAA;AAAC,CARD,EAAA;;SAAa,kB","sourcesContent":["/**\n * All types that entity listener can be.\n */\nexport type EventListenerType =\n    | \"after-load\"\n    | \"before-insert\"\n    | \"after-insert\"\n    | \"before-update\"\n    | \"after-update\"\n    | \"before-remove\"\n    | \"after-remove\";\n\n/**\n * Provides a constants for each entity listener type.\n */\nexport class EventListenerTypes {\n    static AFTER_LOAD = \"after-load\" as const;\n    static BEFORE_INSERT = \"before-insert\" as const;\n    static AFTER_INSERT = \"after-insert\" as const;\n    static BEFORE_UPDATE = \"before-update\" as const;\n    static AFTER_UPDATE = \"after-update\" as const;\n    static BEFORE_REMOVE = \"before-remove\" as const;\n    static AFTER_REMOVE = \"after-remove\" as const;\n}\n"],"sourceRoot":"../.."},"metadata":{},"sourceType":"module"}