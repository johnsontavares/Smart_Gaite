{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * Thrown when consumer tries to connect when he already connected.\n */\n\nvar CannotConnectAlreadyConnectedError =\n/** @class */\nfunction (_super) {\n  __extends(CannotConnectAlreadyConnectedError, _super);\n\n  function CannotConnectAlreadyConnectedError(connectionName) {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"CannotConnectAlreadyConnectedError\";\n    Object.setPrototypeOf(_this, CannotConnectAlreadyConnectedError.prototype);\n    _this.message = \"Cannot create a \\\"\" + connectionName + \"\\\" connection because connection to the database already established.\";\n    return _this;\n  }\n\n  return CannotConnectAlreadyConnectedError;\n}(Error);\n\nexport { CannotConnectAlreadyConnectedError };","map":{"version":3,"sources":["../browser/src/error/CannotConnectAlreadyConnectedError.ts"],"names":[],"mappings":";AAAA;;AAEG;;AACH,IAAA,kCAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAwD,EAAA,SAAA,CAAA,kCAAA,EAAA,MAAA,CAAA;;AAGpD,WAAA,kCAAA,CAAY,cAAZ,EAAkC;AAAlC,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAFA,IAAA,KAAA,CAAA,IAAA,GAAO,oCAAP;AAII,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,kCAAkC,CAAC,SAA/D;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,uBAAoB,cAApB,GAAkC,uEAAjD;;AACH;;AAEL,SAAA,kCAAA;AAAC,CATD,CAAwD,KAAxD,CAAA","sourcesContent":["/**\n * Thrown when consumer tries to connect when he already connected.\n */\nexport class CannotConnectAlreadyConnectedError extends Error {\n    name = \"CannotConnectAlreadyConnectedError\";\n\n    constructor(connectionName: string) {\n        super();\n        Object.setPrototypeOf(this, CannotConnectAlreadyConnectedError.prototype);\n        this.message = `Cannot create a \"${connectionName}\" connection because connection to the database already established.`;\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}