{"ast":null,"code":"import { ObjectUtils } from \"../util/ObjectUtils\";\n/**\n */\n\nvar Alias =\n/** @class */\nfunction () {\n  function Alias(alias) {\n    ObjectUtils.assign(this, alias || {});\n  }\n\n  Object.defineProperty(Alias.prototype, \"target\", {\n    get: function () {\n      return this.metadata.target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Alias.prototype, \"hasMetadata\", {\n    get: function () {\n      return !!this._metadata;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Alias.prototype, \"metadata\", {\n    get: function () {\n      if (!this._metadata) throw new Error(\"Cannot get entity metadata for the given alias \\\"\" + this.name + \"\\\"\");\n      return this._metadata;\n    },\n    set: function (metadata) {\n      this._metadata = metadata;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return Alias;\n}();\n\nexport { Alias };","map":{"version":3,"sources":["../browser/src/query-builder/Alias.ts"],"names":[],"mappings":"AACA,SAAQ,WAAR,QAA0B,qBAA1B;AAEA;AACG;;AACH,IAAA,KAAA;AAAA;AAAA,YAAA;AAiBI,WAAA,KAAA,CAAY,KAAZ,EAAyB;AACrB,IAAA,WAAW,CAAC,MAAZ,CAAmB,IAAnB,EAAyB,KAAK,IAAI,EAAlC;AACH;;AAID,EAAA,MAAA,CAAA,cAAA,CAAI,KAAA,CAAA,SAAJ,EAAI,QAAJ,EAAU;SAAV,YAAA;AACI,aAAO,KAAK,QAAL,CAAc,MAArB;AACH,KAFS;qBAAA;;AAAA,GAAV;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,KAAA,CAAA,SAAJ,EAAI,aAAJ,EAAe;SAAf,YAAA;AACI,aAAO,CAAC,CAAC,KAAK,SAAd;AACH,KAFc;qBAAA;;AAAA,GAAf;AAIA,EAAA,MAAA,CAAA,cAAA,CAAI,KAAA,CAAA,SAAJ,EAAI,UAAJ,EAAY;SAIZ,YAAA;AACI,UAAI,CAAC,KAAK,SAAV,EACI,MAAM,IAAI,KAAJ,CAAU,sDAAmD,KAAK,IAAxD,GAA4D,IAAtE,CAAN;AAEJ,aAAO,KAAK,SAAZ;AACH,KATW;SAAZ,UAAa,QAAb,EAAqC;AACjC,WAAK,SAAL,GAAiB,QAAjB;AACH,KAFW;qBAAA;;AAAA,GAAZ;AAWJ,SAAA,KAAA;AAAC,CA1CD,EAAA","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {ObjectUtils} from \"../util/ObjectUtils\";\n\n/**\n */\nexport class Alias {\n\n    type: \"from\"|\"select\"|\"join\"|\"other\"; // todo: make something with \"other\"\n\n    name: string;\n\n    /**\n     * Table on which this alias is applied.\n     * Used only for aliases which select custom tables.\n     */\n    tablePath?: string;\n\n    /**\n     * If this alias is for sub query.\n     */\n    subQuery?: string;\n\n    constructor(alias?: Alias) {\n        ObjectUtils.assign(this, alias || {});\n    }\n\n    private _metadata?: EntityMetadata;\n\n    get target(): Function|string {\n        return this.metadata.target;\n    }\n\n    get hasMetadata(): boolean {\n        return !!this._metadata;\n    }\n\n    set metadata(metadata: EntityMetadata) {\n        this._metadata = metadata;\n    }\n\n    get metadata(): EntityMetadata {\n        if (!this._metadata)\n            throw new Error(`Cannot get entity metadata for the given alias \"${this.name}\"`);\n\n        return this._metadata;\n    }\n\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}