{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * Thrown when an optimistic lock cannot be used in query builder.\n */\n\nvar OptimisticLockCanNotBeUsedError =\n/** @class */\nfunction (_super) {\n  __extends(OptimisticLockCanNotBeUsedError, _super);\n\n  function OptimisticLockCanNotBeUsedError() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"OptimisticLockCanNotBeUsedError\";\n    Object.setPrototypeOf(_this, OptimisticLockCanNotBeUsedError.prototype);\n    _this.message = \"The optimistic lock can be used only with getOne() method.\";\n    return _this;\n  }\n\n  return OptimisticLockCanNotBeUsedError;\n}(Error);\n\nexport { OptimisticLockCanNotBeUsedError };","map":{"version":3,"sources":["../browser/src/error/OptimisticLockCanNotBeUsedError.ts"],"names":[],"mappings":";AAAA;;AAEG;;AACH,IAAA,+BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,SAAA,CAAA,+BAAA,EAAA,MAAA,CAAA;;AAGjD,WAAA,+BAAA,GAAA;AAAA,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAFA,IAAA,KAAA,CAAA,IAAA,GAAO,iCAAP;AAII,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,+BAA+B,CAAC,SAA5D;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,4DAAf;;AACH;;AAEL,SAAA,+BAAA;AAAC,CATD,CAAqD,KAArD,CAAA","sourcesContent":["/**\n * Thrown when an optimistic lock cannot be used in query builder.\n */\nexport class OptimisticLockCanNotBeUsedError extends Error {\n    name = \"OptimisticLockCanNotBeUsedError\";\n\n    constructor() {\n        super();\n        Object.setPrototypeOf(this, OptimisticLockCanNotBeUsedError.prototype);\n        this.message = `The optimistic lock can be used only with getOne() method.`;\n    }\n\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}