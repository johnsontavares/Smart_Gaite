{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n */\n\nvar UsingJoinTableIsNotAllowedError =\n/** @class */\nfunction (_super) {\n  __extends(UsingJoinTableIsNotAllowedError, _super);\n\n  function UsingJoinTableIsNotAllowedError(entityMetadata, relation) {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"UsingJoinTableIsNotAllowedError\";\n    Object.setPrototypeOf(_this, UsingJoinTableIsNotAllowedError.prototype);\n    _this.message = \"Using JoinTable on \" + entityMetadata.name + \"#\" + relation.propertyName + \" is wrong. \" + (entityMetadata.name + \"#\" + relation.propertyName + \" has \" + relation.relationType + \" relation, \") + \"however you can use JoinTable only on many-to-many relations.\";\n    return _this;\n  }\n\n  return UsingJoinTableIsNotAllowedError;\n}(Error);\n\nexport { UsingJoinTableIsNotAllowedError };","map":{"version":3,"sources":["../browser/src/error/UsingJoinTableIsNotAllowedError.ts"],"names":[],"mappings":";AAGA;AACG;;AACH,IAAA,+BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAqD,EAAA,SAAA,CAAA,+BAAA,EAAA,MAAA,CAAA;;AAGjD,WAAA,+BAAA,CAAY,cAAZ,EAA4C,QAA5C,EAAsE;AAAtE,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAFA,IAAA,KAAA,CAAA,IAAA,GAAO,iCAAP;AAII,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,+BAA+B,CAAC,SAA5D;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,wBAAsB,cAAc,CAAC,IAArC,GAAyC,GAAzC,GAA6C,QAAQ,CAAC,YAAtD,GAAkE,aAAlE,IACR,cAAc,CAAC,IAAf,GAAmB,GAAnB,GAAuB,QAAQ,CAAC,YAAhC,GAA4C,OAA5C,GAAoD,QAAQ,CAAC,YAA7D,GAAyE,aADjE,IAEX,+DAFJ;;AAGH;;AAEL,SAAA,+BAAA;AAAC,CAXD,CAAqD,KAArD,CAAA","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\n\n/**\n */\nexport class UsingJoinTableIsNotAllowedError extends Error {\n    name = \"UsingJoinTableIsNotAllowedError\";\n\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super();\n        Object.setPrototypeOf(this, UsingJoinTableIsNotAllowedError.prototype);\n        this.message = `Using JoinTable on ${entityMetadata.name}#${relation.propertyName} is wrong. ` +\n            `${entityMetadata.name}#${relation.propertyName} has ${relation.relationType} relation, ` +\n            `however you can use JoinTable only on many-to-many relations.`;\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}