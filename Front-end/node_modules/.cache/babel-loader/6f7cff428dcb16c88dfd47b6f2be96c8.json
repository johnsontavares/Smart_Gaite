{"ast":null,"code":"/**\n * Check metadata contains all information about table's check constraints.\n */\nvar CheckMetadata =\n/** @class */\nfunction () {\n  // ---------------------------------------------------------------------\n  // Constructor\n  // ---------------------------------------------------------------------\n  function CheckMetadata(options) {\n    this.entityMetadata = options.entityMetadata;\n\n    if (options.args) {\n      this.target = options.args.target;\n      this.expression = options.args.expression;\n      this.givenName = options.args.name;\n    }\n  } // ---------------------------------------------------------------------\n  // Public Build Methods\n  // ---------------------------------------------------------------------\n\n  /**\n   * Builds some depend check constraint properties.\n   * Must be called after all entity metadata's properties map, columns and relations are built.\n   */\n\n\n  CheckMetadata.prototype.build = function (namingStrategy) {\n    this.name = this.givenName ? this.givenName : namingStrategy.checkConstraintName(this.entityMetadata.tablePath, this.expression);\n    return this;\n  };\n\n  return CheckMetadata;\n}();\n\nexport { CheckMetadata };","map":{"version":3,"sources":["../browser/src/metadata/CheckMetadata.ts"],"names":[],"mappings":"AAIA;;AAEG;AACH,IAAA,aAAA;AAAA;AAAA,YAAA;AAiCI;AACA;AACA;AAEA,WAAA,aAAA,CAAY,OAAZ,EAGC;AACG,SAAK,cAAL,GAAsB,OAAO,CAAC,cAA9B;;AAEA,QAAI,OAAO,CAAC,IAAZ,EAAkB;AACd,WAAK,MAAL,GAAc,OAAO,CAAC,IAAR,CAAa,MAA3B;AACA,WAAK,UAAL,GAAkB,OAAO,CAAC,IAAR,CAAa,UAA/B;AACA,WAAK,SAAL,GAAiB,OAAO,CAAC,IAAR,CAAa,IAA9B;AACH;AACJ,GAhDL,CAkDI;AACA;AACA;;AAEA;;;AAGG;;;AACH,EAAA,aAAA,CAAA,SAAA,CAAA,KAAA,GAAA,UAAM,cAAN,EAA6C;AACzC,SAAK,IAAL,GAAY,KAAK,SAAL,GAAiB,KAAK,SAAtB,GAAkC,cAAc,CAAC,mBAAf,CAAmC,KAAK,cAAL,CAAoB,SAAvD,EAAkE,KAAK,UAAvE,CAA9C;AACA,WAAO,IAAP;AACH,GAHD;;AAKJ,SAAA,aAAA;AAAC,CA/DD,EAAA","sourcesContent":["import {EntityMetadata} from \"./EntityMetadata\";\nimport {NamingStrategyInterface} from \"../naming-strategy/NamingStrategyInterface\";\nimport {CheckMetadataArgs} from \"../metadata-args/CheckMetadataArgs\";\n\n/**\n * Check metadata contains all information about table's check constraints.\n */\nexport class CheckMetadata {\n\n    // ---------------------------------------------------------------------\n    // Public Properties\n    // ---------------------------------------------------------------------\n\n    /**\n     * Entity metadata of the class to which this check constraint is applied.\n     */\n    entityMetadata: EntityMetadata;\n\n    /**\n     * Target class to which metadata is applied.\n     */\n    target?: Function|string;\n\n    /**\n     * Check expression.\n     */\n    expression: string;\n\n    /**\n     * User specified check constraint name.\n     */\n    givenName?: string;\n\n    /**\n     * Final check constraint name.\n     * If check constraint name was given by a user then it stores normalized (by naming strategy) givenName.\n     * If check constraint name was not given then its generated.\n     */\n    name: string;\n\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n\n    constructor(options: {\n        entityMetadata: EntityMetadata,\n        args?: CheckMetadataArgs\n    }) {\n        this.entityMetadata = options.entityMetadata;\n\n        if (options.args) {\n            this.target = options.args.target;\n            this.expression = options.args.expression;\n            this.givenName = options.args.name;\n        }\n    }\n\n    // ---------------------------------------------------------------------\n    // Public Build Methods\n    // ---------------------------------------------------------------------\n\n    /**\n     * Builds some depend check constraint properties.\n     * Must be called after all entity metadata's properties map, columns and relations are built.\n     */\n    build(namingStrategy: NamingStrategyInterface): this {\n        this.name = this.givenName ? this.givenName : namingStrategy.checkConstraintName(this.entityMetadata.tablePath, this.expression);\n        return this;\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}