{"ast":null,"code":"/**\n * Contains all information about entity's relation count.\n */\nvar RelationCountMetadata =\n/** @class */\nfunction () {\n  // ---------------------------------------------------------------------\n  // Constructor\n  // ---------------------------------------------------------------------\n  function RelationCountMetadata(options) {\n    this.entityMetadata = options.entityMetadata;\n    this.target = options.args.target;\n    this.propertyName = options.args.propertyName;\n    this.relationNameOrFactory = options.args.relation;\n    this.alias = options.args.alias;\n    this.queryBuilderFactory = options.args.queryBuilderFactory;\n  } // ---------------------------------------------------------------------\n  // Public Builder Methods\n  // ---------------------------------------------------------------------\n\n  /**\n   * Builds some depend relation count metadata properties.\n   * This builder method should be used only after entity metadata, its properties map and all relations are build.\n   */\n\n\n  RelationCountMetadata.prototype.build = function () {\n    var propertyPath = this.relationNameOrFactory instanceof Function ? this.relationNameOrFactory(this.entityMetadata.propertiesMap) : this.relationNameOrFactory;\n    var relation = this.entityMetadata.findRelationWithPropertyPath(propertyPath);\n    if (!relation) throw new Error(\"Cannot find relation \" + propertyPath + \". Wrong relation specified for @RelationCount decorator.\");\n    this.relation = relation;\n  };\n\n  return RelationCountMetadata;\n}();\n\nexport { RelationCountMetadata };","map":{"version":3,"sources":["../browser/src/metadata/RelationCountMetadata.ts"],"names":[],"mappings":"AAKA;;AAEG;AACH,IAAA,qBAAA;AAAA;AAAA,YAAA;AAyCI;AACA;AACA;AAEA,WAAA,qBAAA,CAAY,OAAZ,EAGC;AACG,SAAK,cAAL,GAAsB,OAAO,CAAC,cAA9B;AACA,SAAK,MAAL,GAAc,OAAO,CAAC,IAAR,CAAa,MAA3B;AACA,SAAK,YAAL,GAAoB,OAAO,CAAC,IAAR,CAAa,YAAjC;AACA,SAAK,qBAAL,GAA6B,OAAO,CAAC,IAAR,CAAa,QAA1C;AACA,SAAK,KAAL,GAAa,OAAO,CAAC,IAAR,CAAa,KAA1B;AACA,SAAK,mBAAL,GAA2B,OAAO,CAAC,IAAR,CAAa,mBAAxC;AACH,GAvDL,CAyDI;AACA;AACA;;AAEA;;;AAGG;;;AACH,EAAA,qBAAA,CAAA,SAAA,CAAA,KAAA,GAAA,YAAA;AACI,QAAM,YAAY,GAAG,KAAK,qBAAL,YAAsC,QAAtC,GAAiD,KAAK,qBAAL,CAA2B,KAAK,cAAL,CAAoB,aAA/C,CAAjD,GAAiH,KAAK,qBAA3I;AACA,QAAM,QAAQ,GAAG,KAAK,cAAL,CAAoB,4BAApB,CAAiD,YAAjD,CAAjB;AACA,QAAI,CAAC,QAAL,EACI,MAAM,IAAI,KAAJ,CAAU,0BAAwB,YAAxB,GAAoC,0DAA9C,CAAN;AAEJ,SAAK,QAAL,GAAgB,QAAhB;AACH,GAPD;;AASJ,SAAA,qBAAA;AAAC,CA1ED,EAAA","sourcesContent":["import {RelationCountMetadataArgs} from \"../metadata-args/RelationCountMetadataArgs\";\nimport {EntityMetadata} from \"./EntityMetadata\";\nimport {RelationMetadata} from \"./RelationMetadata\";\nimport {SelectQueryBuilder} from \"../query-builder/SelectQueryBuilder\";\n\n/**\n * Contains all information about entity's relation count.\n */\nexport class RelationCountMetadata {\n\n    // ---------------------------------------------------------------------\n    // Public Properties\n    // ---------------------------------------------------------------------\n\n    /**\n     * Entity metadata where this column metadata is.\n     */\n    entityMetadata: EntityMetadata;\n\n    /**\n     * Relation which needs to be counted.\n     */\n    relation: RelationMetadata;\n\n    /**\n     * Relation name which need to count.\n     */\n    relationNameOrFactory: string|((object: any) => any);\n\n    /**\n     * Target class to which metadata is applied.\n     */\n    target: Function|string;\n\n    /**\n     * Target's property name to which this metadata is applied.\n     */\n    propertyName: string;\n\n    /**\n     * Alias of the joined (destination) table.\n     */\n    alias?: string;\n\n    /**\n     * Extra condition applied to \"ON\" section of join.\n     */\n    queryBuilderFactory?: (qb: SelectQueryBuilder<any>) => SelectQueryBuilder<any>;\n\n    // ---------------------------------------------------------------------\n    // Constructor\n    // ---------------------------------------------------------------------\n\n    constructor(options: {\n        entityMetadata: EntityMetadata,\n        args: RelationCountMetadataArgs\n    }) {\n        this.entityMetadata = options.entityMetadata;\n        this.target = options.args.target;\n        this.propertyName = options.args.propertyName;\n        this.relationNameOrFactory = options.args.relation;\n        this.alias = options.args.alias;\n        this.queryBuilderFactory = options.args.queryBuilderFactory;\n    }\n\n    // ---------------------------------------------------------------------\n    // Public Builder Methods\n    // ---------------------------------------------------------------------\n\n    /**\n     * Builds some depend relation count metadata properties.\n     * This builder method should be used only after entity metadata, its properties map and all relations are build.\n     */\n    build() {\n        const propertyPath = this.relationNameOrFactory instanceof Function ? this.relationNameOrFactory(this.entityMetadata.propertiesMap) : this.relationNameOrFactory;\n        const relation = this.entityMetadata.findRelationWithPropertyPath(propertyPath);\n        if (!relation)\n            throw new Error(`Cannot find relation ${propertyPath}. Wrong relation specified for @RelationCount decorator.`);\n\n        this.relation = relation;\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}