{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * Thrown when transaction is already started and user tries to run it again.\n */\n\nvar TransactionAlreadyStartedError =\n/** @class */\nfunction (_super) {\n  __extends(TransactionAlreadyStartedError, _super);\n\n  function TransactionAlreadyStartedError() {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"TransactionAlreadyStartedError\";\n    Object.setPrototypeOf(_this, TransactionAlreadyStartedError.prototype);\n    _this.message = \"Transaction already started for the given connection, commit current transaction before starting a new one.\";\n    return _this;\n  }\n\n  return TransactionAlreadyStartedError;\n}(Error);\n\nexport { TransactionAlreadyStartedError };","map":{"version":3,"sources":["../browser/src/error/TransactionAlreadyStartedError.ts"],"names":[],"mappings":";AAAA;;AAEG;;AACH,IAAA,8BAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAoD,EAAA,SAAA,CAAA,8BAAA,EAAA,MAAA,CAAA;;AAGhD,WAAA,8BAAA,GAAA;AAAA,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAFA,IAAA,KAAA,CAAA,IAAA,GAAO,gCAAP;AAII,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,8BAA8B,CAAC,SAA3D;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,6GAAf;;AACH;;AAEL,SAAA,8BAAA;AAAC,CATD,CAAoD,KAApD,CAAA","sourcesContent":["/**\n * Thrown when transaction is already started and user tries to run it again.\n */\nexport class TransactionAlreadyStartedError extends Error {\n    name = \"TransactionAlreadyStartedError\";\n\n    constructor() {\n        super();\n        Object.setPrototypeOf(this, TransactionAlreadyStartedError.prototype);\n        this.message = `Transaction already started for the given connection, commit current transaction before starting a new one.`;\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}