{"ast":null,"code":"import { getMetadataArgsStorage } from \"../\";\n/**\n * Marks a column to generate a value on entity insertion.\n * There are three types of generation strategy - increment, uuid and rowid (cockroachdb only).\n * Increment uses a number which increases by one on each insertion.\n * Uuid generates a special UUID token.\n * Rowid supports only in CockroachDB and uses `unique_rowid()` function\n *\n * Note, some databases do not support non-primary generation columns.\n */\n\nexport function Generated(strategy) {\n  if (strategy === void 0) {\n    strategy = \"increment\";\n  }\n\n  return function (object, propertyName) {\n    getMetadataArgsStorage().generations.push({\n      target: object.constructor,\n      propertyName: propertyName,\n      strategy: strategy\n    });\n  };\n}","map":{"version":3,"sources":["../browser/src/decorator/Generated.ts"],"names":[],"mappings":"AAAA,SAAQ,sBAAR,QAAqC,KAArC;AAGA;;;;;;;;AAQG;;AACH,OAAM,SAAU,SAAV,CAAoB,QAApB,EAAsE;AAAlD,MAAA,QAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,QAAA,GAAA,WAAA;AAAkD;;AACxE,SAAO,UAAU,MAAV,EAA0B,YAA1B,EAA8C;AAEjD,IAAA,sBAAsB,GAAG,WAAzB,CAAqC,IAArC,CAA0C;AACtC,MAAA,MAAM,EAAE,MAAM,CAAC,WADuB;AAEtC,MAAA,YAAY,EAAE,YAFwB;AAGtC,MAAA,QAAQ,EAAE;AAH4B,KAA1C;AAKH,GAPD;AAQH","sourcesContent":["import {getMetadataArgsStorage} from \"../\";\nimport {GeneratedMetadataArgs} from \"../metadata-args/GeneratedMetadataArgs\";\n\n/**\n * Marks a column to generate a value on entity insertion.\n * There are three types of generation strategy - increment, uuid and rowid (cockroachdb only).\n * Increment uses a number which increases by one on each insertion.\n * Uuid generates a special UUID token.\n * Rowid supports only in CockroachDB and uses `unique_rowid()` function\n *\n * Note, some databases do not support non-primary generation columns.\n */\nexport function Generated(strategy: \"increment\"|\"uuid\"|\"rowid\" = \"increment\"): PropertyDecorator {\n    return function (object: Object, propertyName: string) {\n\n        getMetadataArgsStorage().generations.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            strategy: strategy\n        } as GeneratedMetadataArgs);\n    };\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}