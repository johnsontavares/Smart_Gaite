{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../\";\n/**\n * Special decorator used to extract relation id into separate entity property.\n *\n * @experimental\n */\n\nexport function RelationId(relation, alias, queryBuilderFactory) {\n  return function (object, propertyName) {\n    getMetadataArgsStorage().relationIds.push({\n      target: object.constructor,\n      propertyName: propertyName,\n      relation: relation,\n      alias: alias,\n      queryBuilderFactory: queryBuilderFactory\n    });\n  };\n}","map":{"version":3,"sources":["../browser/src/decorator/relations/RelationId.ts"],"names":[],"mappings":"AAAA,SAAQ,sBAAR,QAAyD,QAAzD;AAGA;;;;AAIG;;AACH,OAAM,SAAU,UAAV,CAAwB,QAAxB,EAA+D,KAA/D,EAA+E,mBAA/E,EAA6J;AAC/J,SAAO,UAAU,MAAV,EAA0B,YAA1B,EAA8C;AAEjD,IAAA,sBAAsB,GAAG,WAAzB,CAAqC,IAArC,CAA0C;AACtC,MAAA,MAAM,EAAE,MAAM,CAAC,WADuB;AAEtC,MAAA,YAAY,EAAE,YAFwB;AAGtC,MAAA,QAAQ,EAAE,QAH4B;AAItC,MAAA,KAAK,EAAE,KAJ+B;AAKtC,MAAA,mBAAmB,EAAE;AALiB,KAA1C;AAOH,GATD;AAUH","sourcesContent":["import {getMetadataArgsStorage, SelectQueryBuilder} from \"../../\";\nimport {RelationIdMetadataArgs} from \"../../metadata-args/RelationIdMetadataArgs\";\n\n/**\n * Special decorator used to extract relation id into separate entity property.\n *\n * @experimental\n */\nexport function RelationId<T>(relation: string|((object: T) => any), alias?: string, queryBuilderFactory?: (qb: SelectQueryBuilder<any>) => SelectQueryBuilder<any>): PropertyDecorator {\n    return function (object: Object, propertyName: string) {\n\n        getMetadataArgsStorage().relationIds.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            relation: relation,\n            alias: alias,\n            queryBuilderFactory: queryBuilderFactory\n        } as RelationIdMetadataArgs);\n    };\n}\n"],"sourceRoot":"../.."},"metadata":{},"sourceType":"module"}