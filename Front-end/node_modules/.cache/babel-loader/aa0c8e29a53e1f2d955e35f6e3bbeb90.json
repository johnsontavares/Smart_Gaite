{"ast":null,"code":"import { SimpleConsoleLogger } from \"./SimpleConsoleLogger\";\nimport { AdvancedConsoleLogger } from \"./AdvancedConsoleLogger\";\nimport { FileLogger } from \"./FileLogger\";\nimport { DebugLogger } from \"./DebugLogger\";\n/**\n * Helps to create logger instances.\n */\n\nvar LoggerFactory =\n/** @class */\nfunction () {\n  function LoggerFactory() {}\n  /**\n   * Creates a new logger depend on a given connection's driver.\n   */\n\n\n  LoggerFactory.prototype.create = function (logger, options) {\n    if (logger instanceof Object) return logger;\n\n    if (logger) {\n      switch (logger) {\n        case \"simple-console\":\n          return new SimpleConsoleLogger(options);\n\n        case \"file\":\n          return new FileLogger(options);\n\n        case \"advanced-console\":\n          return new AdvancedConsoleLogger(options);\n\n        case \"debug\":\n          return new DebugLogger();\n      }\n    }\n\n    return new AdvancedConsoleLogger(options);\n  };\n\n  return LoggerFactory;\n}();\n\nexport { LoggerFactory };","map":{"version":3,"sources":["../browser/src/logger/LoggerFactory.ts"],"names":[],"mappings":"AAEA,SAAQ,mBAAR,QAAkC,uBAAlC;AACA,SAAQ,qBAAR,QAAoC,yBAApC;AACA,SAAQ,UAAR,QAAyB,cAAzB;AACA,SAAQ,WAAR,QAA0B,eAA1B;AAEA;;AAEG;;AACH,IAAA,aAAA;AAAA;AAAA,YAAA;AAAA,WAAA,aAAA,GAAA,CA4BC;AA1BG;;AAEG;;;AACH,EAAA,aAAA,CAAA,SAAA,CAAA,MAAA,GAAA,UAAO,MAAP,EAA2E,OAA3E,EAAkG;AAC9F,QAAI,MAAM,YAAY,MAAtB,EACI,OAAO,MAAP;;AAEJ,QAAI,MAAJ,EAAY;AACR,cAAQ,MAAR;AACI,aAAK,gBAAL;AACI,iBAAO,IAAI,mBAAJ,CAAwB,OAAxB,CAAP;;AAEJ,aAAK,MAAL;AACI,iBAAO,IAAI,UAAJ,CAAe,OAAf,CAAP;;AAEJ,aAAK,kBAAL;AACI,iBAAO,IAAI,qBAAJ,CAA0B,OAA1B,CAAP;;AAEJ,aAAK,OAAL;AACI,iBAAO,IAAI,WAAJ,EAAP;AAXR;AAaH;;AAED,WAAO,IAAI,qBAAJ,CAA0B,OAA1B,CAAP;AACH,GArBD;;AAuBJ,SAAA,aAAA;AAAC,CA5BD,EAAA","sourcesContent":["import {Logger} from \"./Logger\";\nimport {LoggerOptions} from \"./LoggerOptions\";\nimport {SimpleConsoleLogger} from \"./SimpleConsoleLogger\";\nimport {AdvancedConsoleLogger} from \"./AdvancedConsoleLogger\";\nimport {FileLogger} from \"./FileLogger\";\nimport {DebugLogger} from \"./DebugLogger\";\n\n/**\n * Helps to create logger instances.\n */\nexport class LoggerFactory {\n\n    /**\n     * Creates a new logger depend on a given connection's driver.\n     */\n    create(logger?: \"advanced-console\"|\"simple-console\"|\"file\"|\"debug\"|Logger, options?: LoggerOptions): Logger {\n        if (logger instanceof Object)\n            return logger as Logger;\n\n        if (logger) {\n            switch (logger) {\n                case \"simple-console\":\n                    return new SimpleConsoleLogger(options);\n\n                case \"file\":\n                    return new FileLogger(options);\n\n                case \"advanced-console\":\n                    return new AdvancedConsoleLogger(options);\n\n                case \"debug\":\n                    return new DebugLogger();\n            }\n        }\n\n        return new AdvancedConsoleLogger(options);\n    }\n\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}