{"ast":null,"code":"/**\n * Table's columns in the database represented in this class.\n */\nvar TableColumn =\n/** @class */\nfunction () {\n  // -------------------------------------------------------------------------\n  // Constructor\n  // -------------------------------------------------------------------------\n  function TableColumn(options) {\n    /**\n     * Indicates if column is NULL, or is NOT NULL in the database.\n     */\n    this.isNullable = false;\n    /**\n     * Indicates if column is auto-generated sequence.\n     */\n\n    this.isGenerated = false;\n    /**\n     * Indicates if column is a primary key.\n     */\n\n    this.isPrimary = false;\n    /**\n     * Indicates if column has unique value.\n     */\n\n    this.isUnique = false;\n    /**\n     * Indicates if column stores array.\n     */\n\n    this.isArray = false;\n    /**\n     * Column type's length. Used only on some column types.\n     * For example type = \"string\" and length = \"100\" means that ORM will create a column with type varchar(100).\n     */\n\n    this.length = \"\";\n    /**\n     * Puts ZEROFILL attribute on to numeric column. Works only for MySQL.\n     * If you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column\n     */\n\n    this.zerofill = false;\n    /**\n     * Puts UNSIGNED attribute on to numeric column. Works only for MySQL.\n     */\n\n    this.unsigned = false;\n\n    if (options) {\n      this.name = options.name;\n      this.type = options.type || \"\";\n      this.length = options.length || \"\";\n      this.width = options.width;\n      this.charset = options.charset;\n      this.collation = options.collation;\n      this.precision = options.precision;\n      this.scale = options.scale;\n      this.zerofill = options.zerofill || false;\n      this.unsigned = this.zerofill ? true : options.unsigned || false;\n      this.default = options.default;\n      this.onUpdate = options.onUpdate;\n      this.isNullable = options.isNullable || false;\n      this.isGenerated = options.isGenerated || false;\n      this.generationStrategy = options.generationStrategy;\n      this.isPrimary = options.isPrimary || false;\n      this.isUnique = options.isUnique || false;\n      this.isArray = options.isArray || false;\n      this.comment = options.comment;\n      this.enum = options.enum;\n      this.enumName = options.enumName;\n      this.asExpression = options.asExpression;\n      this.generatedType = options.generatedType;\n      this.spatialFeatureType = options.spatialFeatureType;\n      this.srid = options.srid;\n    }\n  } // -------------------------------------------------------------------------\n  // Public Methods\n  // -------------------------------------------------------------------------\n\n  /**\n   * Clones this column to a new column with exact same properties as this column has.\n   */\n\n\n  TableColumn.prototype.clone = function () {\n    return new TableColumn({\n      name: this.name,\n      type: this.type,\n      length: this.length,\n      width: this.width,\n      charset: this.charset,\n      collation: this.collation,\n      precision: this.precision,\n      scale: this.scale,\n      zerofill: this.zerofill,\n      unsigned: this.unsigned,\n      enum: this.enum,\n      enumName: this.enumName,\n      asExpression: this.asExpression,\n      generatedType: this.generatedType,\n      default: this.default,\n      onUpdate: this.onUpdate,\n      isNullable: this.isNullable,\n      isGenerated: this.isGenerated,\n      generationStrategy: this.generationStrategy,\n      isPrimary: this.isPrimary,\n      isUnique: this.isUnique,\n      isArray: this.isArray,\n      comment: this.comment,\n      spatialFeatureType: this.spatialFeatureType,\n      srid: this.srid\n    });\n  };\n\n  return TableColumn;\n}();\n\nexport { TableColumn };","map":{"version":3,"sources":["../browser/src/schema-builder/table/TableColumn.ts"],"names":[],"mappings":"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","sourcesContent":["import {TableColumnOptions} from \"../options/TableColumnOptions\";\n\n/**\n * Table's columns in the database represented in this class.\n */\nexport class TableColumn {\n\n    // -------------------------------------------------------------------------\n    // Public Properties\n    // -------------------------------------------------------------------------\n\n    /**\n     * Column name.\n     */\n    name: string;\n\n    /**\n     * Column type.\n     */\n    type: string;\n\n    /**\n     * Column's default value.\n     */\n    default?: any;\n\n    /**\n     * ON UPDATE trigger. Works only for MySQL.\n     */\n    onUpdate?: string;\n\n    /**\n     * Indicates if column is NULL, or is NOT NULL in the database.\n     */\n    isNullable: boolean = false;\n\n    /**\n     * Indicates if column is auto-generated sequence.\n     */\n    isGenerated: boolean = false;\n\n    /**\n     * Specifies generation strategy if this column will use auto increment.\n     * `rowid` option supported only in CockroachDB.\n     */\n    generationStrategy?: \"uuid\"|\"increment\"|\"rowid\";\n\n    /**\n     * Indicates if column is a primary key.\n     */\n    isPrimary: boolean = false;\n\n    /**\n     * Indicates if column has unique value.\n     */\n    isUnique: boolean = false;\n\n    /**\n     * Indicates if column stores array.\n     */\n    isArray: boolean = false;\n\n    /**\n     * Column's comment.\n     */\n    comment?: string;\n\n    /**\n     * Column type's length. Used only on some column types.\n     * For example type = \"string\" and length = \"100\" means that ORM will create a column with type varchar(100).\n     */\n    length: string = \"\";\n\n    /**\n     * Column type's display width. Used only on some column types in MySQL.\n     * For example, INT(4) specifies an INT with a display width of four digits.\n     */\n    width?: number;\n\n    /**\n     * Defines column character set.\n     */\n    charset?: string;\n\n    /**\n     * Defines column collation.\n     */\n    collation?: string;\n\n    /**\n     * The precision for a decimal (exact numeric) column (applies only for decimal column), which is the maximum\n     * number of digits that are stored for the values.\n     */\n    precision?: number|null;\n\n    /**\n     * The scale for a decimal (exact numeric) column (applies only for decimal column), which represents the number\n     * of digits to the right of the decimal point and must not be greater than precision.\n     */\n    scale?: number;\n\n    /**\n     * Puts ZEROFILL attribute on to numeric column. Works only for MySQL.\n     * If you specify ZEROFILL for a numeric column, MySQL automatically adds the UNSIGNED attribute to the column\n     */\n    zerofill: boolean = false;\n\n    /**\n     * Puts UNSIGNED attribute on to numeric column. Works only for MySQL.\n     */\n    unsigned: boolean = false;\n\n    /**\n     * Array of possible enumerated values.\n     */\n    enum?: string[];\n\n    /**\n     * Exact name of enum\n     */\n    enumName?: string;\n\n    /**\n     * Generated column expression. Supports only in MySQL.\n     */\n    asExpression?: string;\n\n    /**\n     * Generated column type. Supports only in MySQL.\n     */\n    generatedType?: \"VIRTUAL\"|\"STORED\";\n\n    /**\n     * Spatial Feature Type (Geometry, Point, Polygon, etc.)\n     */\n    spatialFeatureType?: string;\n\n    /**\n     * SRID (Spatial Reference ID (EPSG code))\n     */\n    srid?: number;\n\n    // -------------------------------------------------------------------------\n    // Constructor\n    // -------------------------------------------------------------------------\n\n    constructor(options?: TableColumnOptions) {\n        if (options) {\n            this.name = options.name;\n            this.type = options.type || \"\";\n            this.length = options.length || \"\";\n            this.width = options.width;\n            this.charset = options.charset;\n            this.collation = options.collation;\n            this.precision = options.precision;\n            this.scale = options.scale;\n            this.zerofill = options.zerofill || false;\n            this.unsigned = this.zerofill ? true : (options.unsigned || false);\n            this.default = options.default;\n            this.onUpdate = options.onUpdate;\n            this.isNullable = options.isNullable || false;\n            this.isGenerated = options.isGenerated || false;\n            this.generationStrategy = options.generationStrategy;\n            this.isPrimary = options.isPrimary || false;\n            this.isUnique = options.isUnique || false;\n            this.isArray = options.isArray || false;\n            this.comment = options.comment;\n            this.enum = options.enum;\n            this.enumName = options.enumName;\n            this.asExpression = options.asExpression;\n            this.generatedType = options.generatedType;\n            this.spatialFeatureType = options.spatialFeatureType;\n            this.srid = options.srid;\n        }\n    }\n\n    // -------------------------------------------------------------------------\n    // Public Methods\n    // -------------------------------------------------------------------------\n\n    /**\n     * Clones this column to a new column with exact same properties as this column has.\n     */\n    clone(): TableColumn {\n        return new TableColumn(<TableColumnOptions>{\n            name: this.name,\n            type: this.type,\n            length: this.length,\n            width: this.width,\n            charset: this.charset,\n            collation: this.collation,\n            precision: this.precision,\n            scale: this.scale,\n            zerofill: this.zerofill,\n            unsigned: this.unsigned,\n            enum: this.enum,\n            enumName: this.enumName,\n            asExpression: this.asExpression,\n            generatedType: this.generatedType,\n            default: this.default,\n            onUpdate: this.onUpdate,\n            isNullable: this.isNullable,\n            isGenerated: this.isGenerated,\n            generationStrategy: this.generationStrategy,\n            isPrimary: this.isPrimary,\n            isUnique: this.isUnique,\n            isArray: this.isArray,\n            comment: this.comment,\n            spatialFeatureType: this.spatialFeatureType,\n            srid: this.srid\n        });\n    }\n\n}\n"],"sourceRoot":"../.."},"metadata":{},"sourceType":"module"}