{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../\";\n/**\n * ViewColumn decorator is used to mark a specific class property as a view column.\n */\n\nexport function ViewColumn(options) {\n  return function (object, propertyName) {\n    getMetadataArgsStorage().columns.push({\n      target: object.constructor,\n      propertyName: propertyName,\n      mode: \"regular\",\n      options: options || {}\n    });\n  };\n}","map":{"version":3,"sources":["../browser/src/decorator/columns/ViewColumn.ts"],"names":[],"mappings":"AAAA,SAAQ,sBAAR,QAAqC,QAArC;AAIA;;AAEG;;AACH,OAAM,SAAU,UAAV,CAAqB,OAArB,EAAgD;AAClD,SAAO,UAAU,MAAV,EAA0B,YAA1B,EAA8C;AACjD,IAAA,sBAAsB,GAAG,OAAzB,CAAiC,IAAjC,CAAsC;AAClC,MAAA,MAAM,EAAE,MAAM,CAAC,WADmB;AAElC,MAAA,YAAY,EAAE,YAFoB;AAGlC,MAAA,IAAI,EAAE,SAH4B;AAIlC,MAAA,OAAO,EAAE,OAAO,IAAI;AAJc,KAAtC;AAMH,GAPD;AAQH","sourcesContent":["import {getMetadataArgsStorage} from \"../../\";\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\nimport { ViewColumnOptions } from \"../options/ViewColumnOptions\";\n\n/**\n * ViewColumn decorator is used to mark a specific class property as a view column.\n */\nexport function ViewColumn(options?: ViewColumnOptions): PropertyDecorator {\n    return function (object: Object, propertyName: string) {\n        getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"regular\",\n            options: options || {}\n        } as ColumnMetadataArgs);\n    };\n}\n"],"sourceRoot":"../.."},"metadata":{},"sourceType":"module"}