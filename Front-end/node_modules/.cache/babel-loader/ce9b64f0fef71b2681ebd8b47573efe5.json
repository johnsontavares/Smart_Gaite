{"ast":null,"code":"import { getMetadataArgsStorage } from \"../../\";\n/**\n * Special type of column that is available only for MongoDB database.\n * Marks your entity's column to be an object id.\n */\n\nexport function ObjectIdColumn(options) {\n  return function (object, propertyName) {\n    // if column options are not given then create a new empty options\n    if (!options) options = {};\n    options.primary = true;\n    if (!options.name) options.name = \"_id\"; // create and register a new column metadata\n\n    getMetadataArgsStorage().columns.push({\n      target: object.constructor,\n      propertyName: propertyName,\n      mode: \"objectId\",\n      options: options\n    });\n  };\n}","map":{"version":3,"sources":["../browser/src/decorator/columns/ObjectIdColumn.ts"],"names":[],"mappings":"AAAA,SAAuB,sBAAvB,QAAoD,QAApD;AAGA;;;AAGG;;AACH,OAAM,SAAU,cAAV,CAAyB,OAAzB,EAAgD;AAClD,SAAO,UAAU,MAAV,EAA0B,YAA1B,EAA8C;AAEjD;AACA,QAAI,CAAC,OAAL,EAAc,OAAO,GAAG,EAAV;AACd,IAAA,OAAO,CAAC,OAAR,GAAkB,IAAlB;AACA,QAAI,CAAC,OAAO,CAAC,IAAb,EAAmB,OAAO,CAAC,IAAR,GAAgB,KAAhB,CAL8B,CAOjD;;AACA,IAAA,sBAAsB,GAAG,OAAzB,CAAiC,IAAjC,CAAsC;AAClC,MAAA,MAAM,EAAE,MAAM,CAAC,WADmB;AAElC,MAAA,YAAY,EAAE,YAFoB;AAGlC,MAAA,IAAI,EAAE,UAH4B;AAIlC,MAAA,OAAO,EAAE;AAJyB,KAAtC;AAMH,GAdD;AAeH","sourcesContent":["import {ColumnOptions, getMetadataArgsStorage} from \"../../\";\nimport {ColumnMetadataArgs} from \"../../metadata-args/ColumnMetadataArgs\";\n\n/**\n * Special type of column that is available only for MongoDB database.\n * Marks your entity's column to be an object id.\n */\nexport function ObjectIdColumn(options?: ColumnOptions): PropertyDecorator {\n    return function (object: Object, propertyName: string) {\n\n        // if column options are not given then create a new empty options\n        if (!options) options = {} as ColumnOptions;\n        options.primary = true;\n        if (!options.name) options.name =  \"_id\";\n\n        // create and register a new column metadata\n        getMetadataArgsStorage().columns.push({\n            target: object.constructor,\n            propertyName: propertyName,\n            mode: \"objectId\",\n            options: options\n        } as ColumnMetadataArgs);\n    };\n}\n"],"sourceRoot":"../.."},"metadata":{},"sourceType":"module"}