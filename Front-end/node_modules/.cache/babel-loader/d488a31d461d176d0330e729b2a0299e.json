{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n * Thrown when ORM cannot get column's type automatically.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\n\nvar ColumnTypeUndefinedError =\n/** @class */\nfunction (_super) {\n  __extends(ColumnTypeUndefinedError, _super);\n\n  function ColumnTypeUndefinedError(object, propertyName) {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"ColumnTypeUndefinedError\";\n    Object.setPrototypeOf(_this, ColumnTypeUndefinedError.prototype);\n    _this.message = \"Column type for \" + object.constructor.name + \"#\" + propertyName + \" is not defined and cannot be guessed. \" + \"Make sure you have turned on an \\\"emitDecoratorMetadata\\\": true option in tsconfig.json. \" + \"Also make sure you have imported \\\"reflect-metadata\\\" on top of the main entry file in your application (before any entity imported).\" + \"If you are using JavaScript instead of TypeScript you must explicitly provide a column type.\";\n    return _this;\n  }\n\n  return ColumnTypeUndefinedError;\n}(Error);\n\nexport { ColumnTypeUndefinedError };","map":{"version":3,"sources":["../browser/src/error/ColumnTypeUndefinedError.ts"],"names":[],"mappings":";AAAA;;;AAGG;;AACH,IAAA,wBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8C,EAAA,SAAA,CAAA,wBAAA,EAAA,MAAA,CAAA;;AAG1C,WAAA,wBAAA,CAAY,MAAZ,EAA4B,YAA5B,EAAgD;AAAhD,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAFA,IAAA,KAAA,CAAA,IAAA,GAAO,0BAAP;AAII,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,wBAAwB,CAAC,SAArD;AACA,IAAA,KAAI,CAAC,OAAL,GAAe,qBAAmB,MAAM,CAAC,WAAP,CAAmB,IAAtC,GAA0C,GAA1C,GAA8C,YAA9C,GAA0D,yCAA1D,GACX,2FADW,GAEX,uIAFW,GAGX,8FAHJ;;AAIH;;AAEL,SAAA,wBAAA;AAAC,CAZD,CAA8C,KAA9C,CAAA","sourcesContent":["/**\n * Thrown when ORM cannot get column's type automatically.\n * Basically, when reflect-metadata is not available or tsconfig is not properly setup.\n */\nexport class ColumnTypeUndefinedError extends Error {\n    name = \"ColumnTypeUndefinedError\";\n\n    constructor(object: Object, propertyName: string) {\n        super();\n        Object.setPrototypeOf(this, ColumnTypeUndefinedError.prototype);\n        this.message = `Column type for ${object.constructor.name}#${propertyName} is not defined and cannot be guessed. ` +\n            `Make sure you have turned on an \"emitDecoratorMetadata\": true option in tsconfig.json. ` +\n            `Also make sure you have imported \"reflect-metadata\" on top of the main entry file in your application (before any entity imported).` +\n            `If you are using JavaScript instead of TypeScript you must explicitly provide a column type.`;\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}