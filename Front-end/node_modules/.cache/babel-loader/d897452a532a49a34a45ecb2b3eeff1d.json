{"ast":null,"code":"import { __extends } from \"tslib\";\n/**\n */\n\nvar MissingJoinTableError =\n/** @class */\nfunction (_super) {\n  __extends(MissingJoinTableError, _super);\n\n  function MissingJoinTableError(entityMetadata, relation) {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"MissingJoinTableError\";\n    Object.setPrototypeOf(_this, MissingJoinTableError.prototype);\n\n    if (relation.inverseRelation) {\n      _this.message = \"JoinTable is missing on both sides of \" + entityMetadata.name + \"#\" + relation.propertyName + \" and \" + (relation.inverseEntityMetadata.name + \"#\" + relation.inverseRelation.propertyName + \" many-to-many relationship. \") + \"You need to put decorator decorator on one of the sides.\";\n    } else {\n      _this.message = \"JoinTable is missing on \" + entityMetadata.name + \"#\" + relation.propertyName + \" many-to-many relationship. \" + \"You need to put JoinTable decorator on it.\";\n    }\n\n    return _this;\n  }\n\n  return MissingJoinTableError;\n}(Error);\n\nexport { MissingJoinTableError };","map":{"version":3,"sources":["../browser/src/error/MissingJoinTableError.ts"],"names":[],"mappings":";AAGA;AACG;;AACH,IAAA,qBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA2C,EAAA,SAAA,CAAA,qBAAA,EAAA,MAAA,CAAA;;AAGvC,WAAA,qBAAA,CAAY,cAAZ,EAA4C,QAA5C,EAAsE;AAAtE,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAFA,IAAA,KAAA,CAAA,IAAA,GAAO,uBAAP;AAII,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,qBAAqB,CAAC,SAAlD;;AAEA,QAAI,QAAQ,CAAC,eAAb,EAA8B;AAC1B,MAAA,KAAI,CAAC,OAAL,GAAe,2CAAyC,cAAc,CAAC,IAAxD,GAA4D,GAA5D,GAAgE,QAAQ,CAAC,YAAzE,GAAqF,OAArF,IACR,QAAQ,CAAC,qBAAT,CAA+B,IAA/B,GAAmC,GAAnC,GAAuC,QAAQ,CAAC,eAAT,CAAyB,YAAhE,GAA4E,8BADpE,IAEX,0DAFJ;AAGH,KAJD,MAIO;AACH,MAAA,KAAI,CAAC,OAAL,GAAe,6BAA2B,cAAc,CAAC,IAA1C,GAA8C,GAA9C,GAAkD,QAAQ,CAAC,YAA3D,GAAuE,8BAAvE,GACX,4CADJ;AAEH;;;AACJ;;AAEL,SAAA,qBAAA;AAAC,CAjBD,CAA2C,KAA3C,CAAA","sourcesContent":["import {EntityMetadata} from \"../metadata/EntityMetadata\";\nimport {RelationMetadata} from \"../metadata/RelationMetadata\";\n\n/**\n */\nexport class MissingJoinTableError extends Error {\n    name = \"MissingJoinTableError\";\n\n    constructor(entityMetadata: EntityMetadata, relation: RelationMetadata) {\n        super();\n        Object.setPrototypeOf(this, MissingJoinTableError.prototype);\n\n        if (relation.inverseRelation) {\n            this.message = `JoinTable is missing on both sides of ${entityMetadata.name}#${relation.propertyName} and ` +\n                `${relation.inverseEntityMetadata.name}#${relation.inverseRelation.propertyName} many-to-many relationship. ` +\n                `You need to put decorator decorator on one of the sides.`;\n        } else {\n            this.message = `JoinTable is missing on ${entityMetadata.name}#${relation.propertyName} many-to-many relationship. ` +\n                `You need to put JoinTable decorator on it.`;\n        }\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}