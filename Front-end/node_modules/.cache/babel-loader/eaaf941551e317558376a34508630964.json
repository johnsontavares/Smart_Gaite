{"ast":null,"code":"/**\n * Interface for entity metadata mappings stored inside \"schemas\" instead of models decorated by decorators.\n */\nvar EntitySchema =\n/** @class */\nfunction () {\n  function EntitySchema(options) {\n    this.options = options;\n  }\n\n  return EntitySchema;\n}();\n\nexport { EntitySchema };","map":{"version":3,"sources":["../browser/src/entity-schema/EntitySchema.ts"],"names":[],"mappings":"AAEA;;AAEG;AACH,IAAA,YAAA;AAAA;AAAA,YAAA;AAEI,WAAA,YAAA,CAAmB,OAAnB,EAAkD;AAA/B,SAAA,OAAA,GAAA,OAAA;AAClB;;AAEL,SAAA,YAAA;AAAC,CALD,EAAA","sourcesContent":["import {EntitySchemaOptions} from \"./EntitySchemaOptions\";\n\n/**\n * Interface for entity metadata mappings stored inside \"schemas\" instead of models decorated by decorators.\n */\nexport class EntitySchema<T = any> {\n\n    constructor(public options: EntitySchemaOptions<T>) {\n    }\n\n}"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}