{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { EntitySchema } from \"../index\";\n/**\n * Thrown when repository for the given class is not found.\n */\n\nvar RepositoryNotFoundError =\n/** @class */\nfunction (_super) {\n  __extends(RepositoryNotFoundError, _super);\n\n  function RepositoryNotFoundError(connectionName, entityClass) {\n    var _this = _super.call(this) || this;\n\n    _this.name = \"RepositoryNotFoundError\";\n    Object.setPrototypeOf(_this, RepositoryNotFoundError.prototype);\n    var targetName;\n\n    if (entityClass instanceof EntitySchema) {\n      targetName = entityClass.options.name;\n    } else if (typeof entityClass === \"function\") {\n      targetName = entityClass.name;\n    } else if (typeof entityClass === \"object\" && \"name\" in entityClass) {\n      targetName = entityClass.name;\n    } else {\n      targetName = entityClass;\n    }\n\n    _this.message = \"No repository for \\\"\" + targetName + \"\\\" was found. Looks like this entity is not registered in \" + (\"current \\\"\" + connectionName + \"\\\" connection?\");\n    return _this;\n  }\n\n  return RepositoryNotFoundError;\n}(Error);\n\nexport { RepositoryNotFoundError };","map":{"version":3,"sources":["../browser/src/error/RepositoryNotFoundError.ts"],"names":[],"mappings":";AACA,SAAQ,YAAR,QAA2B,UAA3B;AAEA;;AAEG;;AACH,IAAA,uBAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6C,EAAA,SAAA,CAAA,uBAAA,EAAA,MAAA,CAAA;;AAGzC,WAAA,uBAAA,CAAY,cAAZ,EAAoC,WAApC,EAAkE;AAAlE,QAAA,KAAA,GACI,MAAA,CAAA,IAAA,CAAA,IAAA,KAAO,IADX;;AAFA,IAAA,KAAA,CAAA,IAAA,GAAO,yBAAP;AAII,IAAA,MAAM,CAAC,cAAP,CAAsB,KAAtB,EAA4B,uBAAuB,CAAC,SAApD;AACA,QAAI,UAAJ;;AACA,QAAI,WAAW,YAAY,YAA3B,EAAyC;AACrC,MAAA,UAAU,GAAG,WAAW,CAAC,OAAZ,CAAoB,IAAjC;AACH,KAFD,MAEO,IAAI,OAAO,WAAP,KAAuB,UAA3B,EAAuC;AAC1C,MAAA,UAAU,GAAG,WAAW,CAAC,IAAzB;AACH,KAFM,MAEA,IAAI,OAAO,WAAP,KAAuB,QAAvB,IAAmC,UAAU,WAAjD,EAA8D;AACjE,MAAA,UAAU,GAAG,WAAW,CAAC,IAAzB;AACH,KAFM,MAEA;AACH,MAAA,UAAU,GAAG,WAAb;AACH;;AACD,IAAA,KAAI,CAAC,OAAL,GAAe,yBAAsB,UAAtB,GAAgC,4DAAhC,IACX,eAAY,cAAZ,GAA0B,gBADf,CAAf;;AAEH;;AAEL,SAAA,uBAAA;AAAC,CApBD,CAA6C,KAA7C,CAAA","sourcesContent":["import {EntityTarget} from \"../common/EntityTarget\";\nimport {EntitySchema} from \"../index\";\n\n/**\n * Thrown when repository for the given class is not found.\n */\nexport class RepositoryNotFoundError extends Error {\n    name = \"RepositoryNotFoundError\";\n\n    constructor(connectionName: string, entityClass: EntityTarget<any>) {\n        super();\n        Object.setPrototypeOf(this, RepositoryNotFoundError.prototype);\n        let targetName: string;\n        if (entityClass instanceof EntitySchema) {\n            targetName = entityClass.options.name;\n        } else if (typeof entityClass === \"function\") {\n            targetName = entityClass.name;\n        } else if (typeof entityClass === \"object\" && \"name\" in entityClass) {\n            targetName = entityClass.name;\n        } else {\n            targetName = entityClass;\n        }\n        this.message = `No repository for \"${targetName}\" was found. Looks like this entity is not registered in ` +\n            `current \"${connectionName}\" connection?`;\n    }\n\n}\n"],"sourceRoot":".."},"metadata":{},"sourceType":"module"}