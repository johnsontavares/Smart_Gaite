{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\REINALDO\\\\Desktop\\\\ls-gait-web\\\\dashboard\\\\src\\\\pages\\\\forgotPassword\\\\confirmPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport { useParams } from 'react-router-dom';\nimport Api from '../../services/api';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '60ch'\n    }\n  }\n}));\nexport default function ConfirmPassword() {\n  _s();\n\n  const classes = useStyles();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirm] = useState('');\n  const {\n    idUsuario\n  } = useParams();\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmmit(e) {\n    const data = {\n      password: password\n    };\n\n    try {\n      if (password !== '' && confirmPassword !== '') {\n        if (password === confirmPassword) {\n          const response = await Api.put(`updatePassword/${idUsuario}`, data);\n\n          if (response.status === 200) {\n            alert('Password changed successfully!');\n            window.location.href = '/';\n          }\n        } else {\n          alert('Invalid password!');\n        }\n\n        setLoading(false);\n      } else {\n        alert('Please !, fill in all the data!');\n      }\n\n      setLoading(false);\n    } catch (error) {\n      const {\n        data\n      } = error.response;\n      alert(data.message);\n      window.location.href = '/';\n    }\n  }\n\n  function loadingSubmit() {\n    setLoading(true);\n    setTimeout(() => handleSubmmit(), 2000);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      fullWidth: true,\n      label: \"New Password:\",\n      type: \"password\",\n      onChange: e => setPassword(e.target.value),\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      fullWidth: true,\n      label: \"Confirm Password:\",\n      type: \"password\",\n      onChange: e => setConfirm(e.target.value),\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        onClick: loadingSubmit,\n        color: \"primary\",\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 22\n        }, this) : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConfirmPassword, \"hllzm8YFiOfhK/nkfM0gEyajG1U=\", false, function () {\n  return [useStyles, useParams];\n});\n\n_c = ConfirmPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmPassword\");","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/src/pages/forgotPassword/confirmPassword.js"],"names":["useState","Button","useParams","Api","CircularProgress","makeStyles","TextField","Divider","useStyles","theme","root","margin","spacing","width","ConfirmPassword","classes","password","setPassword","confirmPassword","setConfirm","idUsuario","loading","setLoading","handleSubmmit","e","data","response","put","status","alert","window","location","href","error","message","loadingSubmit","setTimeout","target","value"],"mappings":"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","sourcesContent":["import {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport {useParams} from 'react-router-dom';\r\nimport Api from '../../services/api';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '60ch',\r\n      },\r\n    },\r\n  }));\r\nexport default function ConfirmPassword(){\r\n\r\n    const classes = useStyles();\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirm] = useState('');\r\n    const {idUsuario} = useParams();\r\n    const [loading, setLoading] = useState(false)\r\n\r\n\r\n    async function handleSubmmit(e){\r\n        \r\n        const data = {\r\n            password:password,\r\n        }\r\n        try {\r\n\r\n            if(password!=='' && confirmPassword!==''){\r\n                if(password === confirmPassword){\r\n                   const response = await Api.put(`updatePassword/${idUsuario}`,data)\r\n                   \r\n                   if(response.status === 200){\r\n                    alert('Password changed successfully!');\r\n                    window.location.href='/'\r\n                   }\r\n                   \r\n                }else{\r\n                 alert('Invalid password!');\r\n                }\r\n                setLoading(false);\r\n            }else{\r\n                alert('Please !, fill in all the data!');\r\n            }\r\n            setLoading(false);\r\n        } catch (error) {\r\n            const { data } = error.response;\r\n            alert(data.message);\r\n            window.location.href='/'\r\n        }\r\n       \r\n       \r\n    }\r\n    function loadingSubmit(){\r\n        setLoading(true);\r\n        setTimeout(\r\n          () => handleSubmmit(),\r\n          2000\r\n        )\r\n      }\r\n    return (\r\n        <form   className={classes.root} noValidate autoComplete=\"off\">\r\n        <br/>\r\n        <text >Forgot Password</text>\r\n        <br/>\r\n        <TextField\r\n        id=\"outlined-basic\" \r\n        fullWidth label=\"New Password:\" \r\n        type=\"password\"\r\n        onChange={e => setPassword(e.target.value)}\r\n        variant=\"outlined\" />\r\n        \r\n        <Divider variant=\"middle\"/>\r\n        \r\n        <TextField\r\n        id=\"outlined-basic\" \r\n        fullWidth label=\"Confirm Password:\" \r\n        type=\"password\"\r\n        onChange={e => setConfirm(e.target.value)}\r\n        variant=\"outlined\" />\r\n        <br/>\r\n        <div>\r\n        \r\n        <Button \r\n            fullWidth \r\n            variant=\"contained\"\r\n            onClick={loadingSubmit} \r\n                \r\n            color=\"primary\">\r\n            {loading?<CircularProgress color=\"inherit\" />:\"Send\"}\r\n        </Button>\r\n        </div>\r\n        <br/>\r\n    </form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}