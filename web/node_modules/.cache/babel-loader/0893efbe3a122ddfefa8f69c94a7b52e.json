{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\REINALDO\\\\Desktop\\\\ls-gait-web\\\\dashboard\\\\src\\\\pages\\\\register\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from 'formik';\nimport React, { useState } from 'react';\nimport Input from '../../components/utils/regex/input';\nimport schema from '../../components/validates/schema';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [crm, setCrm] = useState('');\n  const [cpf, setCpf] = useState('');\n  const [phone, setPhone] = useState('');\n\n  async function handleSumbmit() {\n    const data = {\n      name: name,\n      email: email,\n      password: password,\n      crm: crm,\n      cpf: cpf,\n      phone: phone\n    };\n    const response = await Api.post('doctorSignUp', data);\n\n    if (response.status === 201) {\n      window.location.href = '/';\n    } else {\n      alert('Erro ao cadastrar o usuário!');\n    }\n\n    console.log(data);\n  }\n\n  function onSubmit(values, actions) {\n    console.log('SUBMIT', values);\n  }\n\n  function validate(values) {\n    const errors = {};\n\n    if (!values.phoneOne) {\n      errors.phoneOne = \"Telefone é obrigatório\";\n    }\n\n    if (!values.crm) {\n      errors.crm = \"Crm é obrigatório\";\n    }\n\n    if (!values.cpf) {\n      errors.cpf = \"Cpf é obrigatório\";\n    }\n\n    if (!values.specialization) {\n      errors.specialization = \"Especialização é obrigatório\";\n    }\n\n    if (!values.name) {\n      errors.name = \"Nome é obrigatório\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email é obrigatório\";\n    }\n\n    return errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: [/*#__PURE__*/_jsxDEV(CssBaseline, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.paper,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        component: \"h1\",\n        variant: \"h5\",\n        children: \"Cadastro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              required: true,\n              variant: \"outlined\",\n              id: \"name\",\n              name: \"name\",\n              label: \"Nome\",\n              fullWidth: true,\n              autoFocus: true,\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"email\",\n              label: \"Email\",\n              name: \"email\",\n              autoComplete: \"email\",\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"cpf\",\n              label: \"Cpf\",\n              name: \"cpf\",\n              autoComplete: \"cpf\",\n              value: cpf,\n              onChange: e => setCpf(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 5,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              id: \"crm\",\n              label: \"CRM\",\n              name: \"crm\",\n              autoComplete: \"crm\",\n              value: crm,\n              onChange: e => setCrm(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"phone1\",\n              label: \"Telefone 1\",\n              type: \"phone\",\n              id: \"phone1\",\n              value: phone,\n              onChange: e => setPhone(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"phone2\",\n              label: \"Telefone 2\",\n              type: \"phone\",\n              id: \"phone2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(TextField, {\n              variant: \"outlined\",\n              required: true,\n              fullWidth: true,\n              name: \"password\",\n              label: \"Senha\",\n              type: \"password\",\n              id: \"password\",\n              autoComplete: \"current-password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justify: \"flex-start\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                href: \"#\",\n                variant: \"body2\",\n                children: \"Ler os Termos\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"allowExtraEmails\",\n                color: \"primary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 26\n              }, this),\n              label: \"Concordar com os termos\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        fullWidth: true,\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleSumbmit,\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 5,\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Register, \"oWHNJdC8yEj1dTIZPZc8FqX3gEQ=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/src/pages/register/index.jsx"],"names":["Formik","Form","React","useState","Input","schema","Register","name","setName","email","setEmail","password","setPassword","crm","setCrm","cpf","setCpf","phone","setPhone","handleSumbmit","data","response","Api","post","status","window","location","href","alert","console","log","onSubmit","values","actions","validate","errors","phoneOne","specialization","classes","paper","avatar","e","target","value"],"mappings":"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","sourcesContent":["import { Formik, Form } from 'formik';\r\nimport React, {useState} from 'react';\r\nimport Input from '../../components/utils/regex/input';\r\nimport schema from '../../components/validates/schema';\r\nimport './style.css';\r\n\r\n\r\nexport default function Register() {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [crm, setCrm] = useState('');\r\n  const [cpf, setCpf] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n\r\n  async function handleSumbmit(){\r\n    const data = {\r\n      name:name,\r\n      email:email,\r\n      password:password,\r\n      crm:crm,\r\n      cpf:cpf,\r\n      phone:phone\r\n    }\r\n    const response = await\tApi.post('doctorSignUp', data);\r\n      if(response.status === 201){\r\n        window.location.href='/'\r\n      }else{\r\n        alert('Erro ao cadastrar o usuário!');\r\n      }\r\n    console.log(data);\r\n  }\r\n  function onSubmit(values, actions) {\r\n\r\n    console.log('SUBMIT', values);\r\n\r\n  }\r\n  function validate(values) {\r\n    const errors = {};\r\n    if (!values.phoneOne) {\r\n      errors.phoneOne = \"Telefone é obrigatório\";\r\n    }if (!values.crm) {\r\n      errors.crm = \"Crm é obrigatório\";\r\n    }if (!values.cpf) {\r\n      errors.cpf = \"Cpf é obrigatório\";\r\n    }if (!values.specialization) {\r\n      errors.specialization = \"Especialização é obrigatório\";\r\n    }if (!values.name) {\r\n      errors.name = \"Nome é obrigatório\";\r\n    }if (!values.email) {\r\n      errors.email = \"Email é obrigatório\";\r\n    }\r\n    return errors;\r\n  }\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <CssBaseline />\r\n      <div className={classes.paper}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Cadastro\r\n        </Typography>\r\n        <br></br>\r\n        <form>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                required \r\n                variant=\"outlined\"\r\n                id=\"name\"\r\n                name=\"name\"\r\n                label=\"Nome\"\r\n                fullWidth\r\n                autoFocus\r\n                value={name}\r\n                onChange={e =>setName(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"email\"\r\n                label=\"Email\"\r\n                name=\"email\"\r\n                autoComplete=\"email\"\r\n                value={email}\r\n                onChange={e =>setEmail(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"cpf\"\r\n                label=\"Cpf\"\r\n                name=\"cpf\"\r\n                autoComplete=\"cpf\"\r\n                value={cpf}\r\n                onChange={e =>setCpf(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={5}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                id=\"crm\"\r\n                label=\"CRM\"\r\n                name=\"crm\"\r\n                autoComplete=\"crm\"\r\n                value={crm}\r\n                onChange={e =>setCrm(e.target.value)}\r\n              />\r\n              \r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"phone1\"\r\n                label=\"Telefone 1\"\r\n                type=\"phone\"\r\n                id=\"phone1\"\r\n                value={phone}\r\n                onChange={e =>setPhone(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"phone2\"\r\n                label=\"Telefone 2\"\r\n                type=\"phone\"\r\n                id=\"phone2\"\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <TextField\r\n                variant=\"outlined\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Senha\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n                value={password}\r\n                onChange={e =>setPassword(e.target.value)}\r\n              />\r\n            </Grid>\r\n            <Grid container justify=\"flex-start\">\r\n            <Grid item>\r\n              <Link href=\"#\" variant=\"body2\">\r\n                Ler os Termos\r\n              </Link>\r\n            </Grid>\r\n          </Grid>\r\n            <Grid item xs={12}>\r\n              <FormControlLabel\r\n                control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\r\n                \r\n                label=\"Concordar com os termos\"\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          \r\n        </form>\r\n        <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            \r\n            onClick={handleSumbmit}\r\n            \r\n          >\r\n            Cadastrar\r\n          </Button>\r\n      </div>\r\n      <Box mt={5}>\r\n        <Footer />\r\n      </Box>\r\n    </Container>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}