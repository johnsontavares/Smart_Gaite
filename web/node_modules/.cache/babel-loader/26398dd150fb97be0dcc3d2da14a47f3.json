{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\REINALDO\\\\Desktop\\\\ls-gait-web\\\\dashboard\\\\src\\\\pages\\\\forgotPassword\\\\confirmPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Button from '../../components/utils/button/button';\nimport { useParams } from 'react-router-dom';\nimport Api from '../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConfirmPassword() {\n  _s();\n\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirm] = useState('');\n  const {\n    idUsuario\n  } = useParams();\n\n  async function handleSubmmit(e) {\n    e.preventDefault();\n    const data = {\n      password: password\n    };\n\n    try {\n      if (password !== '' && confirmPassword !== '') {\n        if (password === confirmPassword) {\n          await Api.put(`updatePassword/${idUsuario}`, data);\n          alert('Senha alterada com sucesso!');\n          window.location.href = '/';\n        } else {\n          alert('Password is different from password confirmation!');\n        }\n      } else {\n        alert('Please !, fill in all the data!');\n      }\n    } catch (error) {\n      const {\n        data\n      } = error.response;\n      alert(data.message);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      fullWidth: true,\n      label: \"Email\",\n      type: \"email\",\n      onChange: e => setEmail(e.target.value),\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        onClick: loadingSubmit,\n        disable: loading,\n        color: \"primary\",\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 22\n        }, this) : \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ConfirmPassword, \"KrmRqmOzoKyboV6pxghCH7TWuy0=\", false, function () {\n  return [useParams];\n});\n\n_c = ConfirmPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmPassword\");","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/src/pages/forgotPassword/confirmPassword.js"],"names":["useState","Button","useParams","Api","ConfirmPassword","password","setPassword","confirmPassword","setConfirm","idUsuario","handleSubmmit","e","preventDefault","data","put","alert","window","location","href","error","response","message","classes","root","setEmail","target","value","loadingSubmit","loading"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,sCAAnB;AACA,SAAQC,SAAR,QAAwB,kBAAxB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AAEA,eAAe,SAASC,eAAT,GAA0B;AAAA;;AAErC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACO,eAAD,EAAkBC,UAAlB,IAAgCR,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM;AAACS,IAAAA;AAAD,MAAcP,SAAS,EAA7B;;AAEA,iBAAeQ,aAAf,CAA6BC,CAA7B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,IAAI,GAAG;AACTR,MAAAA,QAAQ,EAACA;AADA,KAAb;;AAGA,QAAI;AAEA,UAAGA,QAAQ,KAAG,EAAX,IAAiBE,eAAe,KAAG,EAAtC,EAAyC;AACrC,YAAGF,QAAQ,KAAKE,eAAhB,EAAgC;AAC7B,gBAAMJ,GAAG,CAACW,GAAJ,CAAS,kBAAiBL,SAAU,EAApC,EAAsCI,IAAtC,CAAN;AACAE,UAAAA,KAAK,CAAC,6BAAD,CAAL;AACAC,UAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACF,SAJD,MAIK;AACJH,UAAAA,KAAK,CAAC,mDAAD,CAAL;AACA;AACJ,OARD,MAQK;AACDA,QAAAA,KAAK,CAAC,iCAAD,CAAL;AACH;AAEJ,KAdD,CAcE,OAAOI,KAAP,EAAc;AACZ,YAAM;AAAEN,QAAAA;AAAF,UAAWM,KAAK,CAACC,QAAvB;AACAL,MAAAA,KAAK,CAACF,IAAI,CAACQ,OAAN,CAAL;AAEH;AAGJ;;AAED,sBACI;AAAQ,IAAA,SAAS,EAAEC,OAAO,CAACC,IAA3B;AAAiC,IAAA,UAAU,MAA3C;AAA4C,IAAA,YAAY,EAAC,KAAzD;AAAA,4BACA;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,eAGA;AAAA;AAAA;AAAA;AAAA,YAHA,eAIA,QAAC,SAAD;AACA,MAAA,EAAE,EAAC,gBADH;AAEA,MAAA,SAAS,MAFT;AAEU,MAAA,KAAK,EAAC,OAFhB;AAGA,MAAA,IAAI,EAAC,OAHL;AAIA,MAAA,QAAQ,EAAEZ,CAAC,IAAIa,QAAQ,CAACb,CAAC,CAACc,MAAF,CAASC,KAAV,CAJvB;AAKA,MAAA,OAAO,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YAJA,eAUA;AAAA;AAAA;AAAA;AAAA,YAVA,eAYA,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAZA,eAaA;AAAA;AAAA;AAAA;AAAA,YAbA,eAcA;AAAA,6BAEA,QAAC,MAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,OAAO,EAAC,WAFZ;AAGI,QAAA,OAAO,EAAEC,aAHb;AAII,QAAA,OAAO,EAAEC,OAJb;AAKI,QAAA,KAAK,EAAC,SALV;AAAA,kBAMKA,OAAO,gBAAC,QAAC,gBAAD;AAAkB,UAAA,KAAK,EAAC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAAD,GAAsC;AANlD;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAdA,eAyBA;AAAA;AAAA;AAAA;AAAA,YAzBA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA6BH;;GA/DuBxB,e;UAIAF,S;;;KAJAE,e","sourcesContent":["import {useState} from 'react';\r\nimport Button from '../../components/utils/button/button';\r\nimport {useParams} from 'react-router-dom';\r\nimport Api from '../../services/api';\r\n\r\nexport default function ConfirmPassword(){\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirm] = useState('');\r\n    const {idUsuario} = useParams();\r\n    \r\n    async function handleSubmmit(e){\r\n        e.preventDefault();\r\n        const data = {\r\n            password:password,\r\n        }\r\n        try {\r\n\r\n            if(password!=='' && confirmPassword!==''){\r\n                if(password === confirmPassword){\r\n                   await Api.put(`updatePassword/${idUsuario}`,data)\r\n                   alert('Senha alterada com sucesso!');\r\n                   window.location.href='/'\r\n                }else{\r\n                 alert('Password is different from password confirmation!');\r\n                }\r\n            }else{\r\n                alert('Please !, fill in all the data!');\r\n            }\r\n\r\n        } catch (error) {\r\n            const { data } = error.response;\r\n            alert(data.message);\r\n            \r\n        }\r\n       \r\n       \r\n    }\r\n\r\n    return (\r\n        <form   className={classes.root} noValidate autoComplete=\"off\">\r\n        <br/>\r\n        <text >Forgot Password</text>\r\n        <br/>\r\n        <TextField\r\n        id=\"outlined-basic\" \r\n        fullWidth label=\"Email\" \r\n        type=\"email\"\r\n        onChange={e => setEmail(e.target.value)}\r\n        variant=\"outlined\" />\r\n        <br/>\r\n        \r\n        <Divider variant=\"middle\"/>\r\n        <br/>\r\n        <div>\r\n        \r\n        <Button \r\n            fullWidth \r\n            variant=\"contained\"\r\n            onClick={loadingSubmit} \r\n            disable={loading}    \r\n            color=\"primary\">\r\n            {loading?<CircularProgress color=\"inherit\" />:\"Send\"}\r\n        </Button>\r\n        </div>\r\n        <br/>\r\n    </form>\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}