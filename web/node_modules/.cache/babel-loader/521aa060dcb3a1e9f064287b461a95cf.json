{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\REINALDO\\\\Desktop\\\\ls-gait-web\\\\dashboard\\\\src\\\\pages\\\\register\\\\confirmEmail\\\\component\\\\clocker.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport LabelRelogio from './labelRelogio';\nimport Contador from './contador';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Clock = props => {\n  _s();\n\n  const [segundos, setSegundos] = useState(0);\n  const [minutos, setMinutos] = useState(0);\n  const [stop, setStop] = useState(false);\n  const [nameStop, setNameStop] = useState(\"Stop\");\n  const [parcial, setParcial] = useState([]);\n\n  const incrementar = () => {\n    if (stop == false) {\n      setSegundos(segundos + 1);\n    }\n  };\n\n  const zerar = () => {\n    setSegundos(0);\n  };\n\n  const incrementarMinutos = () => {\n    setMinutos(minutos + 1);\n  };\n\n  const zerarCronometro = () => {\n    setSegundos(0);\n    setMinutos(0);\n    setParcial([]);\n  };\n\n  const pararTempo = () => {\n    setStop(!stop);\n\n    if (stop) {\n      setNameStop(\"Stop\");\n    } else {\n      setNameStop(\"Play\");\n    }\n  };\n\n  const parciais = () => {\n    let p = minutos + \":\" + segundos;\n    setParcial([...parcial, p]);\n  };\n\n  useEffect(() => {\n    if (segundos >= 5) {\n      zerar();\n      incrementarMinutos();\n    }\n  }, [segundos]);\n  useEffect(() => {\n    let id = setInterval(() => {\n      incrementar();\n    }, 1000);\n    return () => clearInterval(id);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LabelCronometro, {\n      name: minutos + \":\" + segundos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Botao, {\n      onClick: () => {\n        zerarCronometro();\n      },\n      label: \"Zerar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Botao, {\n      onClick: () => {\n        pararTempo();\n      },\n      label: nameStop\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(Botao, {\n      onClick: () => {\n        parciais();\n      },\n      label: \"Parcial\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(LabelParcial, {\n      items: parcial\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 11\n  }, this);\n};\n\n_s(Clock, \"kUxpWgpyCFvQPmB9cYlk6acNzM4=\");\n\n_c = Clock;\nexport default Contador;\n\nvar _c;\n\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/src/pages/register/confirmEmail/component/clocker.js"],"names":["React","LabelRelogio","Contador","Clock","props","segundos","setSegundos","useState","minutos","setMinutos","stop","setStop","nameStop","setNameStop","parcial","setParcial","incrementar","zerar","incrementarMinutos","zerarCronometro","pararTempo","parciais","p","useEffect","id","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport LabelRelogio from './labelRelogio';\r\nimport Contador from './contador';\r\n\r\nconst Clock = (props) => {\r\n  const [segundos, setSegundos] = useState(0)\r\n  const [minutos, setMinutos] = useState(0)\r\n  const [stop, setStop] = useState(false)\r\n  const [nameStop, setNameStop] = useState(\"Stop\")\r\n  const [parcial, setParcial] = useState([])\r\n  const incrementar = () => {   \r\n      if(stop==false){\r\n          setSegundos(segundos+1)\r\n      }\r\n  }\r\n  const zerar = () => {\r\n      setSegundos(0)\r\n  }\r\n  const incrementarMinutos = () => {\r\n      setMinutos(minutos + 1)\r\n  }\r\n  const zerarCronometro = () => {\r\n      setSegundos(0)\r\n      setMinutos(0)\r\n      setParcial([])\r\n  }\r\n  const pararTempo = () => {\r\n      setStop(!stop)\r\n      if(stop)\r\n      {\r\n          setNameStop(\"Stop\")\r\n      }else\r\n      {\r\n          setNameStop(\"Play\")\r\n      } \r\n  }\r\n  const parciais = () => {\r\n      let p = minutos + \":\" + segundos\r\n      setParcial([...parcial, p])\r\n  }\r\n  useEffect(() => {\r\n      if (segundos >= 5){\r\n          zerar()\r\n          incrementarMinutos()\r\n      }\r\n  }, [segundos])\r\n  useEffect(() => {\r\n      let id = setInterval(() => {\r\n          incrementar()\r\n      }, 1000)\r\n      return () => clearInterval(id);   \r\n  })\r\n  return(\r\n          <div>\r\n              <LabelCronometro name={minutos+\":\"+segundos}/>\r\n              <Botao onClick={() => {zerarCronometro()}} label=\"Zerar\" />\r\n              <Botao onClick={() => {pararTempo()}} label={nameStop} />\r\n              <Botao onClick={() => {parciais()}} label=\"Parcial\" />\r\n              <LabelParcial items={parcial}/>\r\n          </div>\r\n      )\r\n}\r\nexport default Contador"]},"metadata":{},"sourceType":"module"}