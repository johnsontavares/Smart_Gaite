{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\REINALDO\\\\Desktop\\\\ls-gait-web\\\\dashboard\\\\src\\\\pages\\\\register\\\\index.jsx\",\n    _s = $RefreshSig$();\n\nimport { Formik, Form } from 'formik';\nimport React, { useState } from 'react';\nimport Input from '../../components/utils/regex/input';\nimport schema from '../../components/validates/schema';\nimport './style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [crm, setCrm] = useState('');\n  const [cpf, setCpf] = useState('');\n  const [phone, setPhone] = useState('');\n\n  async function handleSumbmit() {\n    const data = {\n      name: name,\n      email: email,\n      password: password,\n      crm: crm,\n      cpf: cpf,\n      phone: phone\n    };\n    const response = await Api.post('doctorSignUp', data);\n\n    if (response.status === 201) {\n      window.location.href = '/';\n    } else {\n      alert('Erro ao cadastrar o usuário!');\n    }\n\n    console.log(data);\n  }\n\n  function onSubmit(values, actions) {\n    console.log('SUBMIT', values);\n  }\n\n  function validate(values) {\n    const errors = {};\n\n    if (!values.phoneOne) {\n      errors.phoneOne = \"Telefone é obrigatório\";\n    }\n\n    if (!values.crm) {\n      errors.crm = \"Crm é obrigatório\";\n    }\n\n    if (!values.cpf) {\n      errors.cpf = \"Cpf é obrigatório\";\n    }\n\n    if (!values.specialization) {\n      errors.specialization = \"Especialização é obrigatório\";\n    }\n\n    if (!values.name) {\n      errors.name = \"Nome é obrigatório\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email é obrigatório\";\n    }\n\n    return errors;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Principal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://i.imgur.com/tDvwyyA.png\",\n          className: 'logo',\n          title: \"source: imgur.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 27\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Cadastro\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Preencha as Informa\\xE7\\xF5es abaixo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      validationSchema: schema,\n      validate: validate,\n      onSubmit: onSubmit,\n      initialValues: {\n        nome: '',\n        email: '',\n        cpf: '',\n        crm: '',\n        specialization: '',\n        phoneOne: '',\n        phoneTwo: '',\n        password: ''\n      },\n      render: ({\n        values,\n        errors,\n        isValid\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"divCenter\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text\",\n            children: \"Nome\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"name\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'errors',\n            children: errors.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'errors',\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text\",\n            children: \"CPF\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            mask: \"cpf\",\n            name: \"cpf\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this), errors.cpf && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'errors',\n            children: errors.cpf\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text\",\n            children: \"CRM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            mask: \"crm\",\n            name: \"crm\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), errors.crm && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'errors',\n            children: errors.crm\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text\",\n            children: \"Especializa\\xE7\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"specialization\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this), errors.specialization && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'errors',\n            children: errors.specialization\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text\",\n            children: \"Telefone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            mask: \"telefone\",\n            name: \"phoneOne\",\n            type: \"text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this), errors.phoneOne && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: 'errors',\n            children: errors.phoneOne\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"text\",\n            children: \"Senha\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            mask: \"password\",\n            name: \"password\",\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"Enviar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Register, \"oWHNJdC8yEj1dTIZPZc8FqX3gEQ=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/src/pages/register/index.jsx"],"names":["Formik","Form","React","useState","Input","schema","Register","name","setName","email","setEmail","password","setPassword","crm","setCrm","cpf","setCpf","phone","setPhone","handleSumbmit","data","response","Api","post","status","window","location","href","alert","console","log","onSubmit","values","actions","validate","errors","phoneOne","specialization","nome","phoneTwo","isValid"],"mappings":"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","sourcesContent":["import { Formik, Form } from 'formik';\r\nimport React, {useState} from 'react';\r\nimport Input from '../../components/utils/regex/input';\r\nimport schema from '../../components/validates/schema';\r\nimport './style.css';\r\n\r\n\r\nexport default function Register() {\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [crm, setCrm] = useState('');\r\n  const [cpf, setCpf] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n\r\n\r\n  async function handleSumbmit(){\r\n    const data = {\r\n      name:name,\r\n      email:email,\r\n      password:password,\r\n      crm:crm,\r\n      cpf:cpf,\r\n      phone:phone\r\n    }\r\n    const response = await\tApi.post('doctorSignUp', data);\r\n      if(response.status === 201){\r\n        window.location.href='/'\r\n      }else{\r\n        alert('Erro ao cadastrar o usuário!');\r\n      }\r\n    console.log(data);\r\n  }\r\n  function onSubmit(values, actions) {\r\n\r\n    console.log('SUBMIT', values);\r\n\r\n  }\r\n  function validate(values) {\r\n    const errors = {};\r\n    if (!values.phoneOne) {\r\n      errors.phoneOne = \"Telefone é obrigatório\";\r\n    }if (!values.crm) {\r\n      errors.crm = \"Crm é obrigatório\";\r\n    }if (!values.cpf) {\r\n      errors.cpf = \"Cpf é obrigatório\";\r\n    }if (!values.specialization) {\r\n      errors.specialization = \"Especialização é obrigatório\";\r\n    }if (!values.name) {\r\n      errors.name = \"Nome é obrigatório\";\r\n    }if (!values.email) {\r\n      errors.email = \"Email é obrigatório\";\r\n    }\r\n    return errors;\r\n  }\r\n    return (\r\n\r\n      <div className={\"Principal\"}>\r\n\r\n        <div> <a href=\"/\"><img src=\"https://i.imgur.com/tDvwyyA.png\" className={'logo'} title=\"source: imgur.com\" /></a></div>\r\n        <h1>Cadastro</h1>\r\n        <h2>Preencha as Informações abaixo</h2>\r\n        <br></br>\r\n        <br></br>\r\n        <Formik\r\n\r\n          validationSchema={schema}\r\n          validate={validate}\r\n          onSubmit={onSubmit}\r\n          initialValues={{\r\n            nome: '',\r\n            email: '',\r\n            cpf: '',\r\n            crm: '',\r\n            specialization: '',\r\n            phoneOne: '',\r\n            phoneTwo: '',\r\n            password: '',\r\n          }}\r\n          render={({ values, errors, isValid }) => (\r\n\r\n            <Form className={\"divCenter\"}>\r\n              <div >\r\n                <label className={\"text\"}>Nome</label>\r\n                <br></br>\r\n                <Input name=\"name\" type=\"text\" />\r\n                <br></br>\r\n                {errors.name && (\r\n                  <span className={'errors'}>{errors.name}</span>\r\n                )}\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <label className={\"text\"}>Email</label>\r\n                <br></br>\r\n                <Input name=\"email\" type=\"text\" />\r\n                <br></br>\r\n                {errors.email && (\r\n                  <span className={'errors'}>{errors.email}</span>\r\n                )}\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <label className={\"text\"}>CPF</label>\r\n                <br></br>\r\n                <Input mask=\"cpf\" name=\"cpf\" type=\"text\" />\r\n                <br></br>\r\n                {errors.cpf && (\r\n                  <span className={'errors'}>{errors.cpf}</span>\r\n                )}\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <label className={\"text\"}>CRM</label>\r\n                <br></br>\r\n                <Input mask=\"crm\" name=\"crm\" type=\"text\" />\r\n                <br></br>\r\n                {errors.crm && (\r\n                  <span className={'errors'}>{errors.crm}</span>\r\n                )}\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <label className={\"text\"}>Especialização</label>\r\n                <br></br>\r\n                <Input name=\"specialization\" type=\"text\" />\r\n                <br></br>\r\n                {errors.specialization && (\r\n                  <span className={'errors'}>{errors.specialization}</span>\r\n                )}\r\n              </div>\r\n              <br></br>\r\n              <div>\r\n                <label className={\"text\"}>Telefone</label>\r\n                <br></br>\r\n                <Input mask=\"telefone\" name=\"phoneOne\" type=\"text\" />\r\n                {errors.phoneOne && (\r\n                  <span className={'errors'}>{errors.phoneOne}</span>\r\n                )}\r\n\r\n              </div>\r\n\r\n              <br></br>\r\n              <div>\r\n                <label className={\"text\"}>Senha</label>\r\n                <br></br>\r\n                <Input mask=\"password\" name=\"password\" type=\"password\" />\r\n                <br></br>\r\n                <button >Enviar</button>\r\n              </div>\r\n\r\n            </Form>\r\n\r\n          )}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }"]},"metadata":{},"sourceType":"module"}