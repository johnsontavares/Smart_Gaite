{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\REINALDO\\\\Desktop\\\\ls-gait-web\\\\dashboard\\\\src\\\\pages\\\\forgotPassword\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport Api from '../../services/api';\nimport Button from '@material-ui/core/Button';\nimport './form.css';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Divider from '@material-ui/core/Divider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& > *': {\n      margin: theme.spacing(1),\n      width: '60ch'\n    }\n  }\n}));\nexport default function ResetPassword() {\n  _s();\n\n  const classes = useStyles();\n  const [email, setEmail] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmmit(e) {\n    e.preventDefault();\n\n    try {\n      if (email !== '') {\n        const res = await Api.post('emailUpdate', {\n          email\n        });\n        alert(\"We send an email with the password reset link to the registered email, access your email to change the password!\");\n        window.location.href = '/';\n        console.log(\">>>>>>>>>>>>>\", res);\n      } else {\n        alert(\"Fill in all fields\");\n      }\n    } catch (error) {\n      const {\n        data\n      } = error.response;\n      alert(data.message);\n      window.location.href = '/';\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      children: \"Forgot Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextField, {\n      id: \"outlined-basic\",\n      fullWidth: true,\n      label: \"Email\",\n      type: \"email\",\n      onChange: e => setEmail(e.target.value),\n      variant: \"outlined\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      variant: \"middle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        fullWidth: true,\n        variant: \"contained\",\n        onClick: handleSubmmit,\n        color: \"primary\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPassword, \"Mpv7euX9tJb5Begbqyxdw9qQ6K8=\", false, function () {\n  return [useStyles];\n});\n\n_c = ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/src/pages/forgotPassword/index.js"],"names":["useState","Api","Button","makeStyles","TextField","Divider","useStyles","theme","root","margin","spacing","width","ResetPassword","classes","email","setEmail","loading","setLoading","handleSubmmit","e","preventDefault","res","post","alert","window","location","href","console","log","error","data","response","message","target","value"],"mappings":";;;AAAA,SAAQA,QAAR,QAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAO,YAAP;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,OAAP,MAAoB,2BAApB;;AAGA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJ,aAAS;AACPC,MAAAA,MAAM,EAAEF,KAAK,CAACG,OAAN,CAAc,CAAd,CADD;AAEPC,MAAAA,KAAK,EAAE;AAFA;AADL;AAD+B,CAAZ,CAAD,CAA5B;AAQA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAEpC,QAAMC,OAAO,GAAGP,SAAS,EAAzB;AAEA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;;AAEA,iBAAekB,aAAf,CAA6BC,CAA7B,EAA+B;AAC3BA,IAAAA,CAAC,CAACC,cAAF;;AAEI,QAAI;AACA,UAAIN,KAAK,KAAG,EAAZ,EAAgB;AACZ,cAAMO,GAAG,GAAG,MAAMpB,GAAG,CAACqB,IAAJ,CAAS,aAAT,EAAwB;AACtCR,UAAAA;AADsC,SAAxB,CAAlB;AAIAS,QAAAA,KAAK,CAAC,kHAAD,CAAL;AACAC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BP,GAA7B;AACH,OARD,MAQK;AACDE,QAAAA,KAAK,CAAC,oBAAD,CAAL;AACH;AAEJ,KAbD,CAaE,OAAOM,KAAP,EAAc;AACZ,YAAM;AAAEC,QAAAA;AAAF,UAAWD,KAAK,CAACE,QAAvB;AACAR,MAAAA,KAAK,CAACO,IAAI,CAACE,OAAN,CAAL;AACAR,MAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,GAArB;AACH;AACR;;AAEG,sBACA;AAAQ,IAAA,SAAS,EAAEb,OAAO,CAACL,IAA3B;AAAiC,IAAA,UAAU,MAA3C;AAA4C,IAAA,YAAY,EAAC,KAAzD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,SAAD;AACA,MAAA,EAAE,EAAC,gBADH;AAEA,MAAA,SAAS,MAFT;AAEU,MAAA,KAAK,EAAC,OAFhB;AAGA,MAAA,IAAI,EAAC,OAHL;AAIA,MAAA,QAAQ,EAAEW,CAAC,IAAIJ,QAAQ,CAACI,CAAC,CAACc,MAAF,CAASC,KAAV,CAJvB;AAKA,MAAA,OAAO,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,YAJJ,eAUI;AAAA;AAAA;AAAA;AAAA,YAVJ,eAYI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAA;AAAA;AAAA;AAAA,YAbJ,eAcI;AAAA,6BAEA,QAAC,MAAD;AACI,QAAA,SAAS,MADb;AAEI,QAAA,OAAO,EAAC,WAFZ;AAGI,QAAA,OAAO,EAAEhB,aAHb;AAII,QAAA,KAAK,EAAC,SAJV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAdJ,eAwBI;AAAA;AAAA;AAAA;AAAA,YAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AA4BH;;GA1DmBN,a;UAEJN,S;;;KAFIM,a","sourcesContent":["import {useState} from 'react';\r\nimport Api from '../../services/api';\r\nimport Button from '@material-ui/core/Button';\r\nimport './form.css';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '60ch',\r\n      },\r\n    },\r\n  }));\r\nexport default function ResetPassword() {\r\n\r\n    const classes = useStyles();\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [loading, setLoading] = useState(false) \r\n\r\n    async function handleSubmmit(e){\r\n        e.preventDefault()\r\n        \r\n            try {\r\n                if (email!=='') {\r\n                    const res = await Api.post('emailUpdate', {\r\n                        email\r\n                    })\r\n\r\n                    alert(\"We send an email with the password reset link to the registered email, access your email to change the password!\")\r\n                    window.location.href = '/'\r\n                    console.log(\">>>>>>>>>>>>>\", res)\r\n                }else{\r\n                    alert(\"Fill in all fields\")\r\n                }\r\n             \r\n            } catch (error) {\r\n                const { data } = error.response;\r\n                alert(data.message);\r\n                window.location.href='/'\r\n            }          \r\n    }\r\n    \r\n        return (\r\n        <form   className={classes.root} noValidate autoComplete=\"off\">\r\n            <br/>\r\n            <text >Forgot Password</text>\r\n            <br/>\r\n            <TextField\r\n            id=\"outlined-basic\" \r\n            fullWidth label=\"Email\" \r\n            type=\"email\"\r\n            onChange={e => setEmail(e.target.value)}\r\n            variant=\"outlined\" />\r\n            <br/>\r\n            \r\n            <Divider variant=\"middle\"/>\r\n            <br/>\r\n            <div>\r\n            \r\n            <Button \r\n                fullWidth \r\n                variant=\"contained\"\r\n                onClick={handleSubmmit}    \r\n                color=\"primary\">\r\n                Send\r\n            </Button>\r\n            </div>\r\n            <br/>\r\n        </form>\r\n        );\r\n    }"]},"metadata":{},"sourceType":"module"}