{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\REINALDO\\\\Desktop\\\\ls-gait-web\\\\dashboard\\\\src\\\\pages\\\\register\\\\confirmEmail\\\\component\\\\FormDialog.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Api from '../../../../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormDialog() {\n  _s();\n\n  const [open, setOpen] = React.useState(false);\n  const [email, setEmail] = useState('');\n  useEffect(() => {\n    async function jsonUser() {\n      const user = sessionStorage.getItem('emailValidator');\n      setEmail(user);\n    }\n\n    jsonUser();\n  }, []);\n\n  async function handleClickOpen(e) {\n    try {\n      //Pega o dado do local storage em arquivo bruto(\"fulano@gmail.com\")\n      const emailExists = sessionStorage.getItem('emailValidator'); //console.log(\"email COM PARSE\",JSON.parse( emailExists))\n      //Transforma em objeto\n      //Transforma a string em objt (JSON.parse(emailExists))\n\n      console.log(email); //Manda via post esse dado para a api {\"email\":\"fulano@gmail.com\"}\n      //const resp = await Api.post('findEmail/',{data});\n    } catch (error) {\n      //Retorno erros da api\n      const {\n        data\n      } = error.response;\n      alert(data.message);\n    }\n\n    setOpen(true);\n  }\n\n  ;\n\n  async function okHandle(e) {\n    e.preventDefault();\n\n    try {\n      //Seto esse novo valor no sessionStorage e converto para string\n      sessionStorage.setItem('emailValidator', JSON.stringify(email)); //Busco esse novo valor\n\n      const b = sessionStorage.getItem('emailValidator');\n      console.log(\"newEmail\", email);\n      console.log(\"b\", b); //Busco o id daquele email que retorna do banco de dados\n\n      const dataId = sessionStorage.getItem('id'); //Passo o novo email no body e o id dentro da requisição PUT updateMailSend/{id}\n\n      await Api.put(`updateMailSend/${dataId}`, {\n        email\n      });\n    } catch (error) {\n      //Retorno erros da api\n      const {\n        data\n      } = error.response;\n      alert(data.message);\n    }\n\n    setOpen(false);\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      fullWidth: true,\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: handleClickOpen,\n      children: \"To edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      type: \"email\",\n      onClose: okHandle,\n      \"aria-labelledby\": \"form-dialog-title\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"form-dialog-title\",\n        children: \"To edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"name\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          label: \"Email\",\n          type: \"email\",\n          require: true,\n          fullWidth: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: okHandle,\n          color: \"secondary\",\n          children: \"ok\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormDialog, \"o3dV4lKTqggIJgx99uSuenVCCTY=\");\n\n_c = FormDialog;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDialog\");","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/src/pages/register/confirmEmail/component/FormDialog.js"],"names":["React","useState","useEffect","Button","TextField","Dialog","DialogActions","DialogContent","DialogTitle","Api","FormDialog","open","setOpen","email","setEmail","jsonUser","user","sessionStorage","getItem","handleClickOpen","e","emailExists","console","log","error","data","response","alert","message","okHandle","preventDefault","setItem","JSON","stringify","b","dataId","put","target","value"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Api from '../../../../services/api';\r\n\r\nexport default function FormDialog() {\r\n  const [open, setOpen] = React.useState(false);\r\n  const [email, setEmail] = useState('');\r\n\r\n  useEffect(() => {\r\n    async function jsonUser(){\r\n      const  user = sessionStorage.getItem('emailValidator');\r\n      setEmail(user);\r\n    }\r\n    jsonUser();\r\n  },[])\r\n\r\n\r\n  async function handleClickOpen (e) {\r\n    \r\n    try {\r\n      //Pega o dado do local storage em arquivo bruto(\"fulano@gmail.com\")\r\n  const emailExists = sessionStorage.getItem('emailValidator')\r\n  //console.log(\"email COM PARSE\",JSON.parse( emailExists))\r\n \r\n  //Transforma em objeto\r\n  \r\n  //Transforma a string em objt (JSON.parse(emailExists))\r\n  \r\n  console.log(email)\r\n   //Manda via post esse dado para a api {\"email\":\"fulano@gmail.com\"}\r\n   //const resp = await Api.post('findEmail/',{data});\r\n   \r\n    } catch (error) {\r\n      //Retorno erros da api\r\n      const { data } = error.response;\r\n      alert(data.message);\r\n    }\r\n\r\n    setOpen(true);\r\n  };\r\n\r\n  async function okHandle (e) {\r\n    e.preventDefault();\r\n    try {\r\n    //Seto esse novo valor no sessionStorage e converto para string\r\n    sessionStorage.setItem('emailValidator', JSON.stringify(email))\r\n    //Busco esse novo valor\r\n    const b = sessionStorage.getItem('emailValidator');\r\n    console.log(\"newEmail\",email)\r\n    console.log(\"b\",b)\r\n    //Busco o id daquele email que retorna do banco de dados\r\n    const dataId = sessionStorage.getItem('id');\r\n    //Passo o novo email no body e o id dentro da requisição PUT updateMailSend/{id}\r\n    await Api.put(`updateMailSend/${dataId}`, {email});\r\n    } catch (error) {\r\n      //Retorno erros da api\r\n      const { data } = error.response;\r\n      alert(data.message);\r\n    }\r\n    \r\n    setOpen(false);\r\n  };\r\n \r\n\r\n  return (\r\n    <div>\r\n      <Button fullWidth variant=\"contained\" color=\"secondary\" onClick={handleClickOpen}>\r\n      To edit\r\n      </Button>\r\n      <Dialog open={open} type=\"email\" onClose={okHandle} aria-labelledby=\"form-dialog-title\">\r\n        <DialogTitle id=\"form-dialog-title\">To edit</DialogTitle>\r\n        <DialogContent>\r\n          \r\n          <TextField\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            value={email}\r\n            onChange={e => setEmail(e.target.value)}\r\n            label=\"Email\"\r\n            type=\"email\"\r\n            require\r\n            fullWidth\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          \r\n          <Button\r\n          \r\n          onClick={okHandle} color=\"secondary\">\r\n            ok\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}