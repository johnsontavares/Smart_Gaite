{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _getRequireWildcardCache() {\n  if (typeof WeakMap !== \"function\") return null;\n  var cache = new WeakMap();\n\n  _getRequireWildcardCache = function () {\n    return cache;\n  };\n\n  return cache;\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  }\n\n  if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") {\n    return {\n      default: obj\n    };\n  }\n\n  var cache = _getRequireWildcardCache();\n\n  if (cache && cache.has(obj)) {\n    return cache.get(obj);\n  }\n\n  var newObj = {};\n  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;\n\n  for (var key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;\n\n      if (desc && (desc.get || desc.set)) {\n        Object.defineProperty(newObj, key, desc);\n      } else {\n        newObj[key] = obj[key];\n      }\n    }\n  }\n\n  newObj.default = obj;\n\n  if (cache) {\n    cache.set(obj, newObj);\n  }\n\n  return newObj;\n}\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(t.returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(t.expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = t.blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: t.objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = t.identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => t.identifier(\"arguments\"));\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = t.identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = t.identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = t.callExpression(t.identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n        superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [t.assignmentExpression(\"=\", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(tmp.name), t.numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(t.identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(t.sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = t.memberExpression(t.super(), t.identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n    }\n\n    return t.arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/node_modules/@babel/traverse/lib/path/conversion.js"],"names":["Object","defineProperty","exports","value","toComputedKey","ensureBlock","arrowFunctionToShadowed","unwrapFunctionEnvironment","arrowFunctionToExpression","t","_interopRequireWildcard","require","_helperFunctionName","_interopRequireDefault","obj","__esModule","default","_getRequireWildcardCache","WeakMap","cache","has","get","newObj","hasPropertyDescriptor","getOwnPropertyDescriptor","key","prototype","hasOwnProperty","call","desc","set","isMemberExpression","node","property","isProperty","isMethod","ReferenceError","computed","isIdentifier","stringLiteral","name","body","bodyNode","Array","isArray","Error","isBlockStatement","statements","stringPath","listKey","isStatement","push","isFunction","returnStatement","expressionStatement","blockStatement","parentPath","setup","isArrowFunctionExpression","isFunctionExpression","isFunctionDeclaration","buildCodeFrameError","hoistFunctionEnvironment","allowInsertArrow","specCompliant","noNewArrows","thisBinding","type","checkBinding","scope","generateUidIdentifier","id","init","objectExpression","unshiftContainer","callExpression","hub","addHelper","thisExpression","identifier","replaceWith","memberExpression","fnPath","thisEnvFn","findParent","p","isProgram","isClassProperty","static","inConstructor","kind","thisPaths","argumentsPaths","newTargetPaths","superProps","superCalls","getScopeInformation","length","allSuperCalls","traverse","Function","child","skip","ClassProperty","CallExpression","isSuper","superBinding","getSuperBinding","forEach","superCall","callee","loc","argumentsBinding","getBinding","argumentsChild","argsRef","newTargetBinding","metaProperty","targetChild","targetRef","flatSuperProps","reduce","acc","superProp","concat","standardizeSuperProperty","isAssignment","isAssignmentExpression","left","isCall","isCallExpression","getSuperPropBinding","args","right","getThisBinding","hasSuperClass","thisChild","thisRef","isJSX","jsxIdentifier","operator","assignmentPath","op","slice","tmp","generateDeclaredUidIdentifier","object","assignmentExpression","binaryExpression","isUpdateExpression","updateExpr","computedKey","parts","numericLiteral","prefix","sequenceExpression","isClassMethod","superClass","supers","WeakSet","add","replaceWithMultiple","argsBinding","arrowFunctionExpression","restElement","super","spreadElement","propName","argsList","fnBody","method","unshift","valueIdent","cacheKey","data","getData","setData","ThisExpression","JSXIdentifier","isJSXMemberExpression","isJSXOpeningElement","MemberExpression","ReferencedIdentifier","MetaProperty"],"mappings":"AAAA;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,aAAR,GAAwBA,aAAxB;AACAF,OAAO,CAACG,WAAR,GAAsBA,WAAtB;AACAH,OAAO,CAACI,uBAAR,GAAkCA,uBAAlC;AACAJ,OAAO,CAACK,yBAAR,GAAoCA,yBAApC;AACAL,OAAO,CAACM,yBAAR,GAAoCA,yBAApC;;AAEA,IAAIC,CAAC,GAAGC,uBAAuB,CAACC,OAAO,CAAC,cAAD,CAAR,CAA/B;;AAEA,IAAIC,mBAAmB,GAAGC,sBAAsB,CAACF,OAAO,CAAC,6BAAD,CAAR,CAAhD;;AAEA,SAASE,sBAAT,CAAgCC,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;AAE/F,SAASG,wBAAT,GAAoC;AAAE,MAAI,OAAOC,OAAP,KAAmB,UAAvB,EAAmC,OAAO,IAAP;AAAa,MAAIC,KAAK,GAAG,IAAID,OAAJ,EAAZ;;AAA2BD,EAAAA,wBAAwB,GAAG,YAAY;AAAE,WAAOE,KAAP;AAAe,GAAxD;;AAA0D,SAAOA,KAAP;AAAe;;AAE1L,SAAST,uBAAT,CAAiCI,GAAjC,EAAsC;AAAE,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B;AAAE,WAAOD,GAAP;AAAa;;AAAC,MAAIA,GAAG,KAAK,IAAR,IAAgB,OAAOA,GAAP,KAAe,QAAf,IAA2B,OAAOA,GAAP,KAAe,UAA9D,EAA0E;AAAE,WAAO;AAAEE,MAAAA,OAAO,EAAEF;AAAX,KAAP;AAA0B;;AAAC,MAAIK,KAAK,GAAGF,wBAAwB,EAApC;;AAAwC,MAAIE,KAAK,IAAIA,KAAK,CAACC,GAAN,CAAUN,GAAV,CAAb,EAA6B;AAAE,WAAOK,KAAK,CAACE,GAAN,CAAUP,GAAV,CAAP;AAAwB;;AAAC,MAAIQ,MAAM,GAAG,EAAb;AAAiB,MAAIC,qBAAqB,GAAGvB,MAAM,CAACC,cAAP,IAAyBD,MAAM,CAACwB,wBAA5D;;AAAsF,OAAK,IAAIC,GAAT,IAAgBX,GAAhB,EAAqB;AAAE,QAAId,MAAM,CAAC0B,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCd,GAArC,EAA0CW,GAA1C,CAAJ,EAAoD;AAAE,UAAII,IAAI,GAAGN,qBAAqB,GAAGvB,MAAM,CAACwB,wBAAP,CAAgCV,GAAhC,EAAqCW,GAArC,CAAH,GAA+C,IAA/E;;AAAqF,UAAII,IAAI,KAAKA,IAAI,CAACR,GAAL,IAAYQ,IAAI,CAACC,GAAtB,CAAR,EAAoC;AAAE9B,QAAAA,MAAM,CAACC,cAAP,CAAsBqB,MAAtB,EAA8BG,GAA9B,EAAmCI,IAAnC;AAA2C,OAAjF,MAAuF;AAAEP,QAAAA,MAAM,CAACG,GAAD,CAAN,GAAcX,GAAG,CAACW,GAAD,CAAjB;AAAyB;AAAE;AAAE;;AAACH,EAAAA,MAAM,CAACN,OAAP,GAAiBF,GAAjB;;AAAsB,MAAIK,KAAJ,EAAW;AAAEA,IAAAA,KAAK,CAACW,GAAN,CAAUhB,GAAV,EAAeQ,MAAf;AAAyB;;AAAC,SAAOA,MAAP;AAAgB;;AAEvuB,SAASlB,aAAT,GAAyB;AACvB,MAAIqB,GAAJ;;AAEA,MAAI,KAAKM,kBAAL,EAAJ,EAA+B;AAC7BN,IAAAA,GAAG,GAAG,KAAKO,IAAL,CAAUC,QAAhB;AACD,GAFD,MAEO,IAAI,KAAKC,UAAL,MAAqB,KAAKC,QAAL,EAAzB,EAA0C;AAC/CV,IAAAA,GAAG,GAAG,KAAKO,IAAL,CAAUP,GAAhB;AACD,GAFM,MAEA;AACL,UAAM,IAAIW,cAAJ,CAAmB,MAAnB,CAAN;AACD;;AAED,MAAI,CAAC,KAAKJ,IAAL,CAAUK,QAAf,EAAyB;AACvB,QAAI5B,CAAC,CAAC6B,YAAF,CAAeb,GAAf,CAAJ,EAAyBA,GAAG,GAAGhB,CAAC,CAAC8B,aAAF,CAAgBd,GAAG,CAACe,IAApB,CAAN;AAC1B;;AAED,SAAOf,GAAP;AACD;;AAED,SAASpB,WAAT,GAAuB;AACrB,QAAMoC,IAAI,GAAG,KAAKpB,GAAL,CAAS,MAAT,CAAb;AACA,QAAMqB,QAAQ,GAAGD,IAAI,CAACT,IAAtB;;AAEA,MAAIW,KAAK,CAACC,OAAN,CAAcH,IAAd,CAAJ,EAAyB;AACvB,UAAM,IAAII,KAAJ,CAAU,+CAAV,CAAN;AACD;;AAED,MAAI,CAACH,QAAL,EAAe;AACb,UAAM,IAAIG,KAAJ,CAAU,mCAAV,CAAN;AACD;;AAED,MAAIJ,IAAI,CAACK,gBAAL,EAAJ,EAA6B;AAC3B,WAAOJ,QAAP;AACD;;AAED,QAAMK,UAAU,GAAG,EAAnB;AACA,MAAIC,UAAU,GAAG,MAAjB;AACA,MAAIvB,GAAJ;AACA,MAAIwB,OAAJ;;AAEA,MAAIR,IAAI,CAACS,WAAL,EAAJ,EAAwB;AACtBD,IAAAA,OAAO,GAAG,MAAV;AACAxB,IAAAA,GAAG,GAAG,CAAN;AACAsB,IAAAA,UAAU,CAACI,IAAX,CAAgBV,IAAI,CAACT,IAArB;AACD,GAJD,MAIO;AACLgB,IAAAA,UAAU,IAAI,SAAd;;AAEA,QAAI,KAAKI,UAAL,EAAJ,EAAuB;AACrB3B,MAAAA,GAAG,GAAG,UAAN;AACAsB,MAAAA,UAAU,CAACI,IAAX,CAAgB1C,CAAC,CAAC4C,eAAF,CAAkBZ,IAAI,CAACT,IAAvB,CAAhB;AACD,KAHD,MAGO;AACLP,MAAAA,GAAG,GAAG,YAAN;AACAsB,MAAAA,UAAU,CAACI,IAAX,CAAgB1C,CAAC,CAAC6C,mBAAF,CAAsBb,IAAI,CAACT,IAA3B,CAAhB;AACD;AACF;;AAED,OAAKA,IAAL,CAAUS,IAAV,GAAiBhC,CAAC,CAAC8C,cAAF,CAAiBR,UAAjB,CAAjB;AACA,QAAMS,UAAU,GAAG,KAAKnC,GAAL,CAAS2B,UAAT,CAAnB;AACAP,EAAAA,IAAI,CAACgB,KAAL,CAAWD,UAAX,EAAuBP,OAAO,GAAGO,UAAU,CAACxB,IAAX,CAAgBiB,OAAhB,CAAH,GAA8BO,UAAU,CAACxB,IAAvE,EAA6EiB,OAA7E,EAAsFxB,GAAtF;AACA,SAAO,KAAKO,IAAZ;AACD;;AAED,SAAS1B,uBAAT,GAAmC;AACjC,MAAI,CAAC,KAAKoD,yBAAL,EAAL,EAAuC;AACvC,OAAKlD,yBAAL;AACD;;AAED,SAASD,yBAAT,GAAqC;AACnC,MAAI,CAAC,KAAKmD,yBAAL,EAAD,IAAqC,CAAC,KAAKC,oBAAL,EAAtC,IAAqE,CAAC,KAAKC,qBAAL,EAA1E,EAAwG;AACtG,UAAM,KAAKC,mBAAL,CAAyB,gDAAzB,CAAN;AACD;;AAEDC,EAAAA,wBAAwB,CAAC,IAAD,CAAxB;AACD;;AAED,SAAStD,yBAAT,CAAmC;AACjCuD,EAAAA,gBAAgB,GAAG,IADc;AAEjCC,EAAAA,aAAa,GAAG,KAFiB;AAGjCC,EAAAA,WAAW,GAAG,CAACD;AAHkB,IAI/B,EAJJ,EAIQ;AACN,MAAI,CAAC,KAAKN,yBAAL,EAAL,EAAuC;AACrC,UAAM,KAAKG,mBAAL,CAAyB,6DAAzB,CAAN;AACD;;AAED,QAAMK,WAAW,GAAGJ,wBAAwB,CAAC,IAAD,EAAOG,WAAP,EAAoBF,gBAApB,CAA5C;AACA,OAAK1D,WAAL;AACA,OAAK2B,IAAL,CAAUmC,IAAV,GAAiB,oBAAjB;;AAEA,MAAI,CAACF,WAAL,EAAkB;AAChB,UAAMG,YAAY,GAAGF,WAAW,GAAG,IAAH,GAAU,KAAKV,UAAL,CAAgBa,KAAhB,CAAsBC,qBAAtB,CAA4C,cAA5C,CAA1C;;AAEA,QAAIF,YAAJ,EAAkB;AAChB,WAAKZ,UAAL,CAAgBa,KAAhB,CAAsBlB,IAAtB,CAA2B;AACzBoB,QAAAA,EAAE,EAAEH,YADqB;AAEzBI,QAAAA,IAAI,EAAE/D,CAAC,CAACgE,gBAAF,CAAmB,EAAnB;AAFmB,OAA3B;AAID;;AAED,SAAKpD,GAAL,CAAS,MAAT,EAAiBqD,gBAAjB,CAAkC,MAAlC,EAA0CjE,CAAC,CAAC6C,mBAAF,CAAsB7C,CAAC,CAACkE,cAAF,CAAiB,KAAKC,GAAL,CAASC,SAAT,CAAmB,eAAnB,CAAjB,EAAsD,CAACpE,CAAC,CAACqE,cAAF,EAAD,EAAqBV,YAAY,GAAG3D,CAAC,CAACsE,UAAF,CAAaX,YAAY,CAAC5B,IAA1B,CAAH,GAAqC/B,CAAC,CAACsE,UAAF,CAAab,WAAb,CAAtE,CAAtD,CAAtB,CAA1C;AACA,SAAKc,WAAL,CAAiBvE,CAAC,CAACkE,cAAF,CAAiBlE,CAAC,CAACwE,gBAAF,CAAmB,CAAC,GAAGrE,mBAAmB,CAACI,OAAxB,EAAiC,IAAjC,EAAuC,IAAvC,KAAgD,KAAKgB,IAAxE,EAA8EvB,CAAC,CAACsE,UAAF,CAAa,MAAb,CAA9E,CAAjB,EAAsH,CAACX,YAAY,GAAG3D,CAAC,CAACsE,UAAF,CAAaX,YAAY,CAAC5B,IAA1B,CAAH,GAAqC/B,CAAC,CAACqE,cAAF,EAAlD,CAAtH,CAAjB;AACD;AACF;;AAED,SAAShB,wBAAT,CAAkCoB,MAAlC,EAA0CjB,WAAW,GAAG,IAAxD,EAA8DF,gBAAgB,GAAG,IAAjF,EAAuF;AACrF,QAAMoB,SAAS,GAAGD,MAAM,CAACE,UAAP,CAAkBC,CAAC,IAAI;AACvC,WAAOA,CAAC,CAACjC,UAAF,MAAkB,CAACiC,CAAC,CAAC3B,yBAAF,EAAnB,IAAoD2B,CAAC,CAACC,SAAF,EAApD,IAAqED,CAAC,CAACE,eAAF,CAAkB;AAC5FC,MAAAA,MAAM,EAAE;AADoF,KAAlB,CAA5E;AAGD,GAJiB,CAAlB;AAKA,QAAMC,aAAa,GAAG,CAACN,SAAS,IAAI,IAAb,GAAoB,KAAK,CAAzB,GAA6BA,SAAS,CAACnD,IAAV,CAAe0D,IAA7C,MAAuD,aAA7E;;AAEA,MAAIP,SAAS,CAACI,eAAV,EAAJ,EAAiC;AAC/B,UAAML,MAAM,CAACrB,mBAAP,CAA2B,iDAA3B,CAAN;AACD;;AAED,QAAM;AACJ8B,IAAAA,SADI;AAEJC,IAAAA,cAFI;AAGJC,IAAAA,cAHI;AAIJC,IAAAA,UAJI;AAKJC,IAAAA;AALI,MAMFC,mBAAmB,CAACd,MAAD,CANvB;;AAQA,MAAIO,aAAa,IAAIM,UAAU,CAACE,MAAX,GAAoB,CAAzC,EAA4C;AAC1C,QAAI,CAAClC,gBAAL,EAAuB;AACrB,YAAMgC,UAAU,CAAC,CAAD,CAAV,CAAclC,mBAAd,CAAkC,gDAAlC,CAAN;AACD;;AAED,UAAMqC,aAAa,GAAG,EAAtB;AACAf,IAAAA,SAAS,CAACgB,QAAV,CAAmB;AACjBC,MAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,YAAIA,KAAK,CAAC3C,yBAAN,EAAJ,EAAuC;AACvC2C,QAAAA,KAAK,CAACC,IAAN;AACD,OAJgB;;AAMjBC,MAAAA,aAAa,CAACF,KAAD,EAAQ;AACnBA,QAAAA,KAAK,CAACC,IAAN;AACD,OARgB;;AAUjBE,MAAAA,cAAc,CAACH,KAAD,EAAQ;AACpB,YAAI,CAACA,KAAK,CAAChF,GAAN,CAAU,QAAV,EAAoBoF,OAApB,EAAL,EAAoC;AACpCP,QAAAA,aAAa,CAAC/C,IAAd,CAAmBkD,KAAnB;AACD;;AAbgB,KAAnB;AAgBA,UAAMK,YAAY,GAAGC,eAAe,CAACxB,SAAD,CAApC;AACAe,IAAAA,aAAa,CAACU,OAAd,CAAsBC,SAAS,IAAI;AACjC,YAAMC,MAAM,GAAGrG,CAAC,CAACsE,UAAF,CAAa2B,YAAb,CAAf;AACAI,MAAAA,MAAM,CAACC,GAAP,GAAaF,SAAS,CAAC7E,IAAV,CAAe8E,MAAf,CAAsBC,GAAnC;AACAF,MAAAA,SAAS,CAACxF,GAAV,CAAc,QAAd,EAAwB2D,WAAxB,CAAoC8B,MAApC;AACD,KAJD;AAKD;;AAED,MAAIlB,cAAc,CAACK,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,UAAMe,gBAAgB,GAAGC,UAAU,CAAC9B,SAAD,EAAY,WAAZ,EAAyB,MAAM1E,CAAC,CAACsE,UAAF,CAAa,WAAb,CAA/B,CAAnC;AACAa,IAAAA,cAAc,CAACgB,OAAf,CAAuBM,cAAc,IAAI;AACvC,YAAMC,OAAO,GAAG1G,CAAC,CAACsE,UAAF,CAAaiC,gBAAb,CAAhB;AACAG,MAAAA,OAAO,CAACJ,GAAR,GAAcG,cAAc,CAAClF,IAAf,CAAoB+E,GAAlC;AACAG,MAAAA,cAAc,CAAClC,WAAf,CAA2BmC,OAA3B;AACD,KAJD;AAKD;;AAED,MAAItB,cAAc,CAACI,MAAf,GAAwB,CAA5B,EAA+B;AAC7B,UAAMmB,gBAAgB,GAAGH,UAAU,CAAC9B,SAAD,EAAY,WAAZ,EAAyB,MAAM1E,CAAC,CAAC4G,YAAF,CAAe5G,CAAC,CAACsE,UAAF,CAAa,KAAb,CAAf,EAAoCtE,CAAC,CAACsE,UAAF,CAAa,QAAb,CAApC,CAA/B,CAAnC;AACAc,IAAAA,cAAc,CAACe,OAAf,CAAuBU,WAAW,IAAI;AACpC,YAAMC,SAAS,GAAG9G,CAAC,CAACsE,UAAF,CAAaqC,gBAAb,CAAlB;AACAG,MAAAA,SAAS,CAACR,GAAV,GAAgBO,WAAW,CAACtF,IAAZ,CAAiB+E,GAAjC;AACAO,MAAAA,WAAW,CAACtC,WAAZ,CAAwBuC,SAAxB;AACD,KAJD;AAKD;;AAED,MAAIzB,UAAU,CAACG,MAAX,GAAoB,CAAxB,EAA2B;AACzB,QAAI,CAAClC,gBAAL,EAAuB;AACrB,YAAM+B,UAAU,CAAC,CAAD,CAAV,CAAcjC,mBAAd,CAAkC,0CAAlC,CAAN;AACD;;AAED,UAAM2D,cAAc,GAAG1B,UAAU,CAAC2B,MAAX,CAAkB,CAACC,GAAD,EAAMC,SAAN,KAAoBD,GAAG,CAACE,MAAJ,CAAWC,wBAAwB,CAACF,SAAD,CAAnC,CAAtC,EAAuF,EAAvF,CAAvB;AACAH,IAAAA,cAAc,CAACZ,OAAf,CAAuBe,SAAS,IAAI;AAClC,YAAMlG,GAAG,GAAGkG,SAAS,CAAC3F,IAAV,CAAeK,QAAf,GAA0B,EAA1B,GAA+BsF,SAAS,CAACtG,GAAV,CAAc,UAAd,EAA0BW,IAA1B,CAA+BQ,IAA1E;AACA,YAAMsF,YAAY,GAAGH,SAAS,CAACnE,UAAV,CAAqBuE,sBAArB,CAA4C;AAC/DC,QAAAA,IAAI,EAAEL,SAAS,CAAC3F;AAD+C,OAA5C,CAArB;AAGA,YAAMiG,MAAM,GAAGN,SAAS,CAACnE,UAAV,CAAqB0E,gBAArB,CAAsC;AACnDpB,QAAAA,MAAM,EAAEa,SAAS,CAAC3F;AADiC,OAAtC,CAAf;AAGA,YAAM0E,YAAY,GAAGyB,mBAAmB,CAAChD,SAAD,EAAY2C,YAAZ,EAA0BrG,GAA1B,CAAxC;AACA,YAAM2G,IAAI,GAAG,EAAb;;AAEA,UAAIT,SAAS,CAAC3F,IAAV,CAAeK,QAAnB,EAA6B;AAC3B+F,QAAAA,IAAI,CAACjF,IAAL,CAAUwE,SAAS,CAACtG,GAAV,CAAc,UAAd,EAA0BW,IAApC;AACD;;AAED,UAAI8F,YAAJ,EAAkB;AAChB,cAAM3H,KAAK,GAAGwH,SAAS,CAACnE,UAAV,CAAqBxB,IAArB,CAA0BqG,KAAxC;AACAD,QAAAA,IAAI,CAACjF,IAAL,CAAUhD,KAAV;AACD;;AAED,YAAMyB,IAAI,GAAGnB,CAAC,CAACkE,cAAF,CAAiBlE,CAAC,CAACsE,UAAF,CAAa2B,YAAb,CAAjB,EAA6C0B,IAA7C,CAAb;;AAEA,UAAIH,MAAJ,EAAY;AACVN,QAAAA,SAAS,CAACnE,UAAV,CAAqBkB,gBAArB,CAAsC,WAAtC,EAAmDjE,CAAC,CAACqE,cAAF,EAAnD;AACA6C,QAAAA,SAAS,CAAC3C,WAAV,CAAsBvE,CAAC,CAACwE,gBAAF,CAAmBrD,IAAnB,EAAyBnB,CAAC,CAACsE,UAAF,CAAa,MAAb,CAAzB,CAAtB;AACAY,QAAAA,SAAS,CAACxC,IAAV,CAAewE,SAAS,CAACnE,UAAV,CAAqBnC,GAArB,CAAyB,aAAzB,CAAf;AACD,OAJD,MAIO,IAAIyG,YAAJ,EAAkB;AACvBH,QAAAA,SAAS,CAACnE,UAAV,CAAqBwB,WAArB,CAAiCpD,IAAjC;AACD,OAFM,MAEA;AACL+F,QAAAA,SAAS,CAAC3C,WAAV,CAAsBpD,IAAtB;AACD;AACF,KA/BD;AAgCD;;AAED,MAAIsC,WAAJ;;AAEA,MAAIyB,SAAS,CAACM,MAAV,GAAmB,CAAnB,IAAwB,CAAChC,WAA7B,EAA0C;AACxCC,IAAAA,WAAW,GAAGoE,cAAc,CAACnD,SAAD,EAAYM,aAAZ,CAA5B;;AAEA,QAAIxB,WAAW,IAAIwB,aAAa,IAAI8C,aAAa,CAACpD,SAAD,CAAjD,EAA8D;AAC5DQ,MAAAA,SAAS,CAACiB,OAAV,CAAkB4B,SAAS,IAAI;AAC7B,cAAMC,OAAO,GAAGD,SAAS,CAACE,KAAV,KAAoBjI,CAAC,CAACkI,aAAF,CAAgBzE,WAAhB,CAApB,GAAmDzD,CAAC,CAACsE,UAAF,CAAab,WAAb,CAAnE;AACAuE,QAAAA,OAAO,CAAC1B,GAAR,GAAcyB,SAAS,CAACxG,IAAV,CAAe+E,GAA7B;AACAyB,QAAAA,SAAS,CAACxD,WAAV,CAAsByD,OAAtB;AACD,OAJD;AAKA,UAAI,CAACxE,WAAL,EAAkBC,WAAW,GAAG,IAAd;AACnB;AACF;;AAED,SAAOA,WAAP;AACD;;AAED,SAAS2D,wBAAT,CAAkCF,SAAlC,EAA6C;AAC3C,MAAIA,SAAS,CAACnE,UAAV,CAAqBuE,sBAArB,MAAiDJ,SAAS,CAACnE,UAAV,CAAqBxB,IAArB,CAA0B4G,QAA1B,KAAuC,GAA5F,EAAiG;AAC/F,UAAMC,cAAc,GAAGlB,SAAS,CAACnE,UAAjC;AACA,UAAMsF,EAAE,GAAGD,cAAc,CAAC7G,IAAf,CAAoB4G,QAApB,CAA6BG,KAA7B,CAAmC,CAAnC,EAAsC,CAAC,CAAvC,CAAX;AACA,UAAM5I,KAAK,GAAG0I,cAAc,CAAC7G,IAAf,CAAoBqG,KAAlC;AACAQ,IAAAA,cAAc,CAAC7G,IAAf,CAAoB4G,QAApB,GAA+B,GAA/B;;AAEA,QAAIjB,SAAS,CAAC3F,IAAV,CAAeK,QAAnB,EAA6B;AAC3B,YAAM2G,GAAG,GAAGrB,SAAS,CAACtD,KAAV,CAAgB4E,6BAAhB,CAA8C,KAA9C,CAAZ;AACAJ,MAAAA,cAAc,CAACxH,GAAf,CAAmB,MAAnB,EAA2B2D,WAA3B,CAAuCvE,CAAC,CAACwE,gBAAF,CAAmB0C,SAAS,CAAC3F,IAAV,CAAekH,MAAlC,EAA0CzI,CAAC,CAAC0I,oBAAF,CAAuB,GAAvB,EAA4BH,GAA5B,EAAiCrB,SAAS,CAAC3F,IAAV,CAAeC,QAAhD,CAA1C,EAAqG,IAArG,CAAvC;AACA4G,MAAAA,cAAc,CAACxH,GAAf,CAAmB,OAAnB,EAA4B2D,WAA5B,CAAwCvE,CAAC,CAAC2I,gBAAF,CAAmBN,EAAnB,EAAuBrI,CAAC,CAACwE,gBAAF,CAAmB0C,SAAS,CAAC3F,IAAV,CAAekH,MAAlC,EAA0CzI,CAAC,CAACsE,UAAF,CAAaiE,GAAG,CAACxG,IAAjB,CAA1C,EAAkE,IAAlE,CAAvB,EAAgGrC,KAAhG,CAAxC;AACD,KAJD,MAIO;AACL0I,MAAAA,cAAc,CAACxH,GAAf,CAAmB,MAAnB,EAA2B2D,WAA3B,CAAuCvE,CAAC,CAACwE,gBAAF,CAAmB0C,SAAS,CAAC3F,IAAV,CAAekH,MAAlC,EAA0CvB,SAAS,CAAC3F,IAAV,CAAeC,QAAzD,CAAvC;AACA4G,MAAAA,cAAc,CAACxH,GAAf,CAAmB,OAAnB,EAA4B2D,WAA5B,CAAwCvE,CAAC,CAAC2I,gBAAF,CAAmBN,EAAnB,EAAuBrI,CAAC,CAACwE,gBAAF,CAAmB0C,SAAS,CAAC3F,IAAV,CAAekH,MAAlC,EAA0CzI,CAAC,CAACsE,UAAF,CAAa4C,SAAS,CAAC3F,IAAV,CAAeC,QAAf,CAAwBO,IAArC,CAA1C,CAAvB,EAA8GrC,KAA9G,CAAxC;AACD;;AAED,WAAO,CAAC0I,cAAc,CAACxH,GAAf,CAAmB,MAAnB,CAAD,EAA6BwH,cAAc,CAACxH,GAAf,CAAmB,OAAnB,EAA4BA,GAA5B,CAAgC,MAAhC,CAA7B,CAAP;AACD,GAhBD,MAgBO,IAAIsG,SAAS,CAACnE,UAAV,CAAqB6F,kBAArB,EAAJ,EAA+C;AACpD,UAAMC,UAAU,GAAG3B,SAAS,CAACnE,UAA7B;AACA,UAAMwF,GAAG,GAAGrB,SAAS,CAACtD,KAAV,CAAgB4E,6BAAhB,CAA8C,KAA9C,CAAZ;AACA,UAAMM,WAAW,GAAG5B,SAAS,CAAC3F,IAAV,CAAeK,QAAf,GAA0BsF,SAAS,CAACtD,KAAV,CAAgB4E,6BAAhB,CAA8C,MAA9C,CAA1B,GAAkF,IAAtG;AACA,UAAMO,KAAK,GAAG,CAAC/I,CAAC,CAAC0I,oBAAF,CAAuB,GAAvB,EAA4BH,GAA5B,EAAiCvI,CAAC,CAACwE,gBAAF,CAAmB0C,SAAS,CAAC3F,IAAV,CAAekH,MAAlC,EAA0CK,WAAW,GAAG9I,CAAC,CAAC0I,oBAAF,CAAuB,GAAvB,EAA4BI,WAA5B,EAAyC5B,SAAS,CAAC3F,IAAV,CAAeC,QAAxD,CAAH,GAAuE0F,SAAS,CAAC3F,IAAV,CAAeC,QAA3I,EAAqJ0F,SAAS,CAAC3F,IAAV,CAAeK,QAApK,CAAjC,CAAD,EAAkN5B,CAAC,CAAC0I,oBAAF,CAAuB,GAAvB,EAA4B1I,CAAC,CAACwE,gBAAF,CAAmB0C,SAAS,CAAC3F,IAAV,CAAekH,MAAlC,EAA0CK,WAAW,GAAG9I,CAAC,CAACsE,UAAF,CAAawE,WAAW,CAAC/G,IAAzB,CAAH,GAAoCmF,SAAS,CAAC3F,IAAV,CAAeC,QAAxG,EAAkH0F,SAAS,CAAC3F,IAAV,CAAeK,QAAjI,CAA5B,EAAwK5B,CAAC,CAAC2I,gBAAF,CAAmB,GAAnB,EAAwB3I,CAAC,CAACsE,UAAF,CAAaiE,GAAG,CAACxG,IAAjB,CAAxB,EAAgD/B,CAAC,CAACgJ,cAAF,CAAiB,CAAjB,CAAhD,CAAxK,CAAlN,CAAd;;AAEA,QAAI,CAAC9B,SAAS,CAACnE,UAAV,CAAqBxB,IAArB,CAA0B0H,MAA/B,EAAuC;AACrCF,MAAAA,KAAK,CAACrG,IAAN,CAAW1C,CAAC,CAACsE,UAAF,CAAaiE,GAAG,CAACxG,IAAjB,CAAX;AACD;;AAED8G,IAAAA,UAAU,CAACtE,WAAX,CAAuBvE,CAAC,CAACkJ,kBAAF,CAAqBH,KAArB,CAAvB;AACA,UAAMxB,IAAI,GAAGsB,UAAU,CAACjI,GAAX,CAAe,qBAAf,CAAb;AACA,UAAMgH,KAAK,GAAGiB,UAAU,CAACjI,GAAX,CAAe,oBAAf,CAAd;AACA,WAAO,CAAC2G,IAAD,EAAOK,KAAP,CAAP;AACD;;AAED,SAAO,CAACV,SAAD,CAAP;AACD;;AAED,SAASY,aAAT,CAAuBpD,SAAvB,EAAkC;AAChC,SAAOA,SAAS,CAACyE,aAAV,MAA6B,CAAC,CAACzE,SAAS,CAAC3B,UAAV,CAAqBA,UAArB,CAAgCxB,IAAhC,CAAqC6H,UAA3E;AACD;;AAED,SAASvB,cAAT,CAAwBnD,SAAxB,EAAmCM,aAAnC,EAAkD;AAChD,SAAOwB,UAAU,CAAC9B,SAAD,EAAY,MAAZ,EAAoBjB,WAAW,IAAI;AAClD,QAAI,CAACuB,aAAD,IAAkB,CAAC8C,aAAa,CAACpD,SAAD,CAApC,EAAiD,OAAO1E,CAAC,CAACqE,cAAF,EAAP;AACjD,UAAMgF,MAAM,GAAG,IAAIC,OAAJ,EAAf;AACA5E,IAAAA,SAAS,CAACgB,QAAV,CAAmB;AACjBC,MAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,YAAIA,KAAK,CAAC3C,yBAAN,EAAJ,EAAuC;AACvC2C,QAAAA,KAAK,CAACC,IAAN;AACD,OAJgB;;AAMjBC,MAAAA,aAAa,CAACF,KAAD,EAAQ;AACnBA,QAAAA,KAAK,CAACC,IAAN;AACD,OARgB;;AAUjBE,MAAAA,cAAc,CAACH,KAAD,EAAQ;AACpB,YAAI,CAACA,KAAK,CAAChF,GAAN,CAAU,QAAV,EAAoBoF,OAApB,EAAL,EAAoC;AACpC,YAAIqD,MAAM,CAAC1I,GAAP,CAAWiF,KAAK,CAACrE,IAAjB,CAAJ,EAA4B;AAC5B8H,QAAAA,MAAM,CAACE,GAAP,CAAW3D,KAAK,CAACrE,IAAjB;AACAqE,QAAAA,KAAK,CAAC4D,mBAAN,CAA0B,CAAC5D,KAAK,CAACrE,IAAP,EAAavB,CAAC,CAAC0I,oBAAF,CAAuB,GAAvB,EAA4B1I,CAAC,CAACsE,UAAF,CAAab,WAAb,CAA5B,EAAuDzD,CAAC,CAACsE,UAAF,CAAa,MAAb,CAAvD,CAAb,CAA1B;AACD;;AAfgB,KAAnB;AAkBD,GArBgB,CAAjB;AAsBD;;AAED,SAAS4B,eAAT,CAAyBxB,SAAzB,EAAoC;AAClC,SAAO8B,UAAU,CAAC9B,SAAD,EAAY,WAAZ,EAAyB,MAAM;AAC9C,UAAM+E,WAAW,GAAG/E,SAAS,CAACd,KAAV,CAAgBC,qBAAhB,CAAsC,MAAtC,CAApB;AACA,WAAO7D,CAAC,CAAC0J,uBAAF,CAA0B,CAAC1J,CAAC,CAAC2J,WAAF,CAAcF,WAAd,CAAD,CAA1B,EAAwDzJ,CAAC,CAACkE,cAAF,CAAiBlE,CAAC,CAAC4J,KAAF,EAAjB,EAA4B,CAAC5J,CAAC,CAAC6J,aAAF,CAAgB7J,CAAC,CAACsE,UAAF,CAAamF,WAAW,CAAC1H,IAAzB,CAAhB,CAAD,CAA5B,CAAxD,CAAP;AACD,GAHgB,CAAjB;AAID;;AAED,SAAS2F,mBAAT,CAA6BhD,SAA7B,EAAwC2C,YAAxC,EAAsDyC,QAAtD,EAAgE;AAC9D,QAAMzB,EAAE,GAAGhB,YAAY,GAAG,KAAH,GAAW,KAAlC;AACA,SAAOb,UAAU,CAAC9B,SAAD,EAAa,aAAY2D,EAAG,IAAGyB,QAAQ,IAAI,EAAG,EAA9C,EAAiD,MAAM;AACtE,UAAMC,QAAQ,GAAG,EAAjB;AACA,QAAIC,MAAJ;;AAEA,QAAIF,QAAJ,EAAc;AACZE,MAAAA,MAAM,GAAGhK,CAAC,CAACwE,gBAAF,CAAmBxE,CAAC,CAAC4J,KAAF,EAAnB,EAA8B5J,CAAC,CAACsE,UAAF,CAAawF,QAAb,CAA9B,CAAT;AACD,KAFD,MAEO;AACL,YAAMG,MAAM,GAAGvF,SAAS,CAACd,KAAV,CAAgBC,qBAAhB,CAAsC,MAAtC,CAAf;AACAkG,MAAAA,QAAQ,CAACG,OAAT,CAAiBD,MAAjB;AACAD,MAAAA,MAAM,GAAGhK,CAAC,CAACwE,gBAAF,CAAmBxE,CAAC,CAAC4J,KAAF,EAAnB,EAA8B5J,CAAC,CAACsE,UAAF,CAAa2F,MAAM,CAAClI,IAApB,CAA9B,EAAyD,IAAzD,CAAT;AACD;;AAED,QAAIsF,YAAJ,EAAkB;AAChB,YAAM8C,UAAU,GAAGzF,SAAS,CAACd,KAAV,CAAgBC,qBAAhB,CAAsC,OAAtC,CAAnB;AACAkG,MAAAA,QAAQ,CAACrH,IAAT,CAAcyH,UAAd;AACAH,MAAAA,MAAM,GAAGhK,CAAC,CAAC0I,oBAAF,CAAuB,GAAvB,EAA4BsB,MAA5B,EAAoChK,CAAC,CAACsE,UAAF,CAAa6F,UAAU,CAACpI,IAAxB,CAApC,CAAT;AACD;;AAED,WAAO/B,CAAC,CAAC0J,uBAAF,CAA0BK,QAA1B,EAAoCC,MAApC,CAAP;AACD,GAnBgB,CAAjB;AAoBD;;AAED,SAASxD,UAAT,CAAoB9B,SAApB,EAA+B1D,GAA/B,EAAoC+C,IAApC,EAA0C;AACxC,QAAMqG,QAAQ,GAAG,aAAapJ,GAA9B;AACA,MAAIqJ,IAAI,GAAG3F,SAAS,CAAC4F,OAAV,CAAkBF,QAAlB,CAAX;;AAEA,MAAI,CAACC,IAAL,EAAW;AACT,UAAMvG,EAAE,GAAGY,SAAS,CAACd,KAAV,CAAgBC,qBAAhB,CAAsC7C,GAAtC,CAAX;AACAqJ,IAAAA,IAAI,GAAGvG,EAAE,CAAC/B,IAAV;AACA2C,IAAAA,SAAS,CAAC6F,OAAV,CAAkBH,QAAlB,EAA4BC,IAA5B;AACA3F,IAAAA,SAAS,CAACd,KAAV,CAAgBlB,IAAhB,CAAqB;AACnBoB,MAAAA,EAAE,EAAEA,EADe;AAEnBC,MAAAA,IAAI,EAAEA,IAAI,CAACsG,IAAD;AAFS,KAArB;AAID;;AAED,SAAOA,IAAP;AACD;;AAED,SAAS9E,mBAAT,CAA6Bd,MAA7B,EAAqC;AACnC,QAAMS,SAAS,GAAG,EAAlB;AACA,QAAMC,cAAc,GAAG,EAAvB;AACA,QAAMC,cAAc,GAAG,EAAvB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACAb,EAAAA,MAAM,CAACiB,QAAP,CAAgB;AACdI,IAAAA,aAAa,CAACF,KAAD,EAAQ;AACnBA,MAAAA,KAAK,CAACC,IAAN;AACD,KAHa;;AAKdF,IAAAA,QAAQ,CAACC,KAAD,EAAQ;AACd,UAAIA,KAAK,CAAC3C,yBAAN,EAAJ,EAAuC;AACvC2C,MAAAA,KAAK,CAACC,IAAN;AACD,KARa;;AAUd2E,IAAAA,cAAc,CAAC5E,KAAD,EAAQ;AACpBV,MAAAA,SAAS,CAACxC,IAAV,CAAekD,KAAf;AACD,KAZa;;AAcd6E,IAAAA,aAAa,CAAC7E,KAAD,EAAQ;AACnB,UAAIA,KAAK,CAACrE,IAAN,CAAWQ,IAAX,KAAoB,MAAxB,EAAgC;;AAEhC,UAAI,CAAC6D,KAAK,CAAC7C,UAAN,CAAiB2H,qBAAjB,CAAuC;AAC1CjC,QAAAA,MAAM,EAAE7C,KAAK,CAACrE;AAD4B,OAAvC,CAAD,IAEE,CAACqE,KAAK,CAAC7C,UAAN,CAAiB4H,mBAAjB,CAAqC;AAC1C5I,QAAAA,IAAI,EAAE6D,KAAK,CAACrE;AAD8B,OAArC,CAFP,EAII;AACF;AACD;;AAED2D,MAAAA,SAAS,CAACxC,IAAV,CAAekD,KAAf;AACD,KA1Ba;;AA4BdG,IAAAA,cAAc,CAACH,KAAD,EAAQ;AACpB,UAAIA,KAAK,CAAChF,GAAN,CAAU,QAAV,EAAoBoF,OAApB,EAAJ,EAAmCV,UAAU,CAAC5C,IAAX,CAAgBkD,KAAhB;AACpC,KA9Ba;;AAgCdgF,IAAAA,gBAAgB,CAAChF,KAAD,EAAQ;AACtB,UAAIA,KAAK,CAAChF,GAAN,CAAU,QAAV,EAAoBoF,OAApB,EAAJ,EAAmCX,UAAU,CAAC3C,IAAX,CAAgBkD,KAAhB;AACpC,KAlCa;;AAoCdiF,IAAAA,oBAAoB,CAACjF,KAAD,EAAQ;AAC1B,UAAIA,KAAK,CAACrE,IAAN,CAAWQ,IAAX,KAAoB,WAAxB,EAAqC;AACrCoD,MAAAA,cAAc,CAACzC,IAAf,CAAoBkD,KAApB;AACD,KAvCa;;AAyCdkF,IAAAA,YAAY,CAAClF,KAAD,EAAQ;AAClB,UAAI,CAACA,KAAK,CAAChF,GAAN,CAAU,MAAV,EAAkBiB,YAAlB,CAA+B;AAClCE,QAAAA,IAAI,EAAE;AAD4B,OAA/B,CAAL,EAEI;AACJ,UAAI,CAAC6D,KAAK,CAAChF,GAAN,CAAU,UAAV,EAAsBiB,YAAtB,CAAmC;AACtCE,QAAAA,IAAI,EAAE;AADgC,OAAnC,CAAL,EAEI;AACJqD,MAAAA,cAAc,CAAC1C,IAAf,CAAoBkD,KAApB;AACD;;AAjDa,GAAhB;AAoDA,SAAO;AACLV,IAAAA,SADK;AAELC,IAAAA,cAFK;AAGLC,IAAAA,cAHK;AAILC,IAAAA,UAJK;AAKLC,IAAAA;AALK,GAAP;AAOD","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toComputedKey = toComputedKey;\nexports.ensureBlock = ensureBlock;\nexports.arrowFunctionToShadowed = arrowFunctionToShadowed;\nexports.unwrapFunctionEnvironment = unwrapFunctionEnvironment;\nexports.arrowFunctionToExpression = arrowFunctionToExpression;\n\nvar t = _interopRequireWildcard(require(\"@babel/types\"));\n\nvar _helperFunctionName = _interopRequireDefault(require(\"@babel/helper-function-name\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache() { if (typeof WeakMap !== \"function\") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nfunction toComputedKey() {\n  let key;\n\n  if (this.isMemberExpression()) {\n    key = this.node.property;\n  } else if (this.isProperty() || this.isMethod()) {\n    key = this.node.key;\n  } else {\n    throw new ReferenceError(\"todo\");\n  }\n\n  if (!this.node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n\n  return key;\n}\n\nfunction ensureBlock() {\n  const body = this.get(\"body\");\n  const bodyNode = body.node;\n\n  if (Array.isArray(body)) {\n    throw new Error(\"Can't convert array path to a block statement\");\n  }\n\n  if (!bodyNode) {\n    throw new Error(\"Can't convert node without a body\");\n  }\n\n  if (body.isBlockStatement()) {\n    return bodyNode;\n  }\n\n  const statements = [];\n  let stringPath = \"body\";\n  let key;\n  let listKey;\n\n  if (body.isStatement()) {\n    listKey = \"body\";\n    key = 0;\n    statements.push(body.node);\n  } else {\n    stringPath += \".body.0\";\n\n    if (this.isFunction()) {\n      key = \"argument\";\n      statements.push(t.returnStatement(body.node));\n    } else {\n      key = \"expression\";\n      statements.push(t.expressionStatement(body.node));\n    }\n  }\n\n  this.node.body = t.blockStatement(statements);\n  const parentPath = this.get(stringPath);\n  body.setup(parentPath, listKey ? parentPath.node[listKey] : parentPath.node, listKey, key);\n  return this.node;\n}\n\nfunction arrowFunctionToShadowed() {\n  if (!this.isArrowFunctionExpression()) return;\n  this.arrowFunctionToExpression();\n}\n\nfunction unwrapFunctionEnvironment() {\n  if (!this.isArrowFunctionExpression() && !this.isFunctionExpression() && !this.isFunctionDeclaration()) {\n    throw this.buildCodeFrameError(\"Can only unwrap the environment of a function.\");\n  }\n\n  hoistFunctionEnvironment(this);\n}\n\nfunction arrowFunctionToExpression({\n  allowInsertArrow = true,\n  specCompliant = false,\n  noNewArrows = !specCompliant\n} = {}) {\n  if (!this.isArrowFunctionExpression()) {\n    throw this.buildCodeFrameError(\"Cannot convert non-arrow function to a function expression.\");\n  }\n\n  const thisBinding = hoistFunctionEnvironment(this, noNewArrows, allowInsertArrow);\n  this.ensureBlock();\n  this.node.type = \"FunctionExpression\";\n\n  if (!noNewArrows) {\n    const checkBinding = thisBinding ? null : this.parentPath.scope.generateUidIdentifier(\"arrowCheckId\");\n\n    if (checkBinding) {\n      this.parentPath.scope.push({\n        id: checkBinding,\n        init: t.objectExpression([])\n      });\n    }\n\n    this.get(\"body\").unshiftContainer(\"body\", t.expressionStatement(t.callExpression(this.hub.addHelper(\"newArrowCheck\"), [t.thisExpression(), checkBinding ? t.identifier(checkBinding.name) : t.identifier(thisBinding)])));\n    this.replaceWith(t.callExpression(t.memberExpression((0, _helperFunctionName.default)(this, true) || this.node, t.identifier(\"bind\")), [checkBinding ? t.identifier(checkBinding.name) : t.thisExpression()]));\n  }\n}\n\nfunction hoistFunctionEnvironment(fnPath, noNewArrows = true, allowInsertArrow = true) {\n  const thisEnvFn = fnPath.findParent(p => {\n    return p.isFunction() && !p.isArrowFunctionExpression() || p.isProgram() || p.isClassProperty({\n      static: false\n    });\n  });\n  const inConstructor = (thisEnvFn == null ? void 0 : thisEnvFn.node.kind) === \"constructor\";\n\n  if (thisEnvFn.isClassProperty()) {\n    throw fnPath.buildCodeFrameError(\"Unable to transform arrow inside class property\");\n  }\n\n  const {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  } = getScopeInformation(fnPath);\n\n  if (inConstructor && superCalls.length > 0) {\n    if (!allowInsertArrow) {\n      throw superCalls[0].buildCodeFrameError(\"Unable to handle nested super() usage in arrow\");\n    }\n\n    const allSuperCalls = [];\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        allSuperCalls.push(child);\n      }\n\n    });\n    const superBinding = getSuperBinding(thisEnvFn);\n    allSuperCalls.forEach(superCall => {\n      const callee = t.identifier(superBinding);\n      callee.loc = superCall.node.callee.loc;\n      superCall.get(\"callee\").replaceWith(callee);\n    });\n  }\n\n  if (argumentsPaths.length > 0) {\n    const argumentsBinding = getBinding(thisEnvFn, \"arguments\", () => t.identifier(\"arguments\"));\n    argumentsPaths.forEach(argumentsChild => {\n      const argsRef = t.identifier(argumentsBinding);\n      argsRef.loc = argumentsChild.node.loc;\n      argumentsChild.replaceWith(argsRef);\n    });\n  }\n\n  if (newTargetPaths.length > 0) {\n    const newTargetBinding = getBinding(thisEnvFn, \"newtarget\", () => t.metaProperty(t.identifier(\"new\"), t.identifier(\"target\")));\n    newTargetPaths.forEach(targetChild => {\n      const targetRef = t.identifier(newTargetBinding);\n      targetRef.loc = targetChild.node.loc;\n      targetChild.replaceWith(targetRef);\n    });\n  }\n\n  if (superProps.length > 0) {\n    if (!allowInsertArrow) {\n      throw superProps[0].buildCodeFrameError(\"Unable to handle nested super.prop usage\");\n    }\n\n    const flatSuperProps = superProps.reduce((acc, superProp) => acc.concat(standardizeSuperProperty(superProp)), []);\n    flatSuperProps.forEach(superProp => {\n      const key = superProp.node.computed ? \"\" : superProp.get(\"property\").node.name;\n      const isAssignment = superProp.parentPath.isAssignmentExpression({\n        left: superProp.node\n      });\n      const isCall = superProp.parentPath.isCallExpression({\n        callee: superProp.node\n      });\n      const superBinding = getSuperPropBinding(thisEnvFn, isAssignment, key);\n      const args = [];\n\n      if (superProp.node.computed) {\n        args.push(superProp.get(\"property\").node);\n      }\n\n      if (isAssignment) {\n        const value = superProp.parentPath.node.right;\n        args.push(value);\n      }\n\n      const call = t.callExpression(t.identifier(superBinding), args);\n\n      if (isCall) {\n        superProp.parentPath.unshiftContainer(\"arguments\", t.thisExpression());\n        superProp.replaceWith(t.memberExpression(call, t.identifier(\"call\")));\n        thisPaths.push(superProp.parentPath.get(\"arguments.0\"));\n      } else if (isAssignment) {\n        superProp.parentPath.replaceWith(call);\n      } else {\n        superProp.replaceWith(call);\n      }\n    });\n  }\n\n  let thisBinding;\n\n  if (thisPaths.length > 0 || !noNewArrows) {\n    thisBinding = getThisBinding(thisEnvFn, inConstructor);\n\n    if (noNewArrows || inConstructor && hasSuperClass(thisEnvFn)) {\n      thisPaths.forEach(thisChild => {\n        const thisRef = thisChild.isJSX() ? t.jsxIdentifier(thisBinding) : t.identifier(thisBinding);\n        thisRef.loc = thisChild.node.loc;\n        thisChild.replaceWith(thisRef);\n      });\n      if (!noNewArrows) thisBinding = null;\n    }\n  }\n\n  return thisBinding;\n}\n\nfunction standardizeSuperProperty(superProp) {\n  if (superProp.parentPath.isAssignmentExpression() && superProp.parentPath.node.operator !== \"=\") {\n    const assignmentPath = superProp.parentPath;\n    const op = assignmentPath.node.operator.slice(0, -1);\n    const value = assignmentPath.node.right;\n    assignmentPath.node.operator = \"=\";\n\n    if (superProp.node.computed) {\n      const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, t.assignmentExpression(\"=\", tmp, superProp.node.property), true));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(tmp.name), true), value));\n    } else {\n      assignmentPath.get(\"left\").replaceWith(t.memberExpression(superProp.node.object, superProp.node.property));\n      assignmentPath.get(\"right\").replaceWith(t.binaryExpression(op, t.memberExpression(superProp.node.object, t.identifier(superProp.node.property.name)), value));\n    }\n\n    return [assignmentPath.get(\"left\"), assignmentPath.get(\"right\").get(\"left\")];\n  } else if (superProp.parentPath.isUpdateExpression()) {\n    const updateExpr = superProp.parentPath;\n    const tmp = superProp.scope.generateDeclaredUidIdentifier(\"tmp\");\n    const computedKey = superProp.node.computed ? superProp.scope.generateDeclaredUidIdentifier(\"prop\") : null;\n    const parts = [t.assignmentExpression(\"=\", tmp, t.memberExpression(superProp.node.object, computedKey ? t.assignmentExpression(\"=\", computedKey, superProp.node.property) : superProp.node.property, superProp.node.computed)), t.assignmentExpression(\"=\", t.memberExpression(superProp.node.object, computedKey ? t.identifier(computedKey.name) : superProp.node.property, superProp.node.computed), t.binaryExpression(\"+\", t.identifier(tmp.name), t.numericLiteral(1)))];\n\n    if (!superProp.parentPath.node.prefix) {\n      parts.push(t.identifier(tmp.name));\n    }\n\n    updateExpr.replaceWith(t.sequenceExpression(parts));\n    const left = updateExpr.get(\"expressions.0.right\");\n    const right = updateExpr.get(\"expressions.1.left\");\n    return [left, right];\n  }\n\n  return [superProp];\n}\n\nfunction hasSuperClass(thisEnvFn) {\n  return thisEnvFn.isClassMethod() && !!thisEnvFn.parentPath.parentPath.node.superClass;\n}\n\nfunction getThisBinding(thisEnvFn, inConstructor) {\n  return getBinding(thisEnvFn, \"this\", thisBinding => {\n    if (!inConstructor || !hasSuperClass(thisEnvFn)) return t.thisExpression();\n    const supers = new WeakSet();\n    thisEnvFn.traverse({\n      Function(child) {\n        if (child.isArrowFunctionExpression()) return;\n        child.skip();\n      },\n\n      ClassProperty(child) {\n        child.skip();\n      },\n\n      CallExpression(child) {\n        if (!child.get(\"callee\").isSuper()) return;\n        if (supers.has(child.node)) return;\n        supers.add(child.node);\n        child.replaceWithMultiple([child.node, t.assignmentExpression(\"=\", t.identifier(thisBinding), t.identifier(\"this\"))]);\n      }\n\n    });\n  });\n}\n\nfunction getSuperBinding(thisEnvFn) {\n  return getBinding(thisEnvFn, \"supercall\", () => {\n    const argsBinding = thisEnvFn.scope.generateUidIdentifier(\"args\");\n    return t.arrowFunctionExpression([t.restElement(argsBinding)], t.callExpression(t.super(), [t.spreadElement(t.identifier(argsBinding.name))]));\n  });\n}\n\nfunction getSuperPropBinding(thisEnvFn, isAssignment, propName) {\n  const op = isAssignment ? \"set\" : \"get\";\n  return getBinding(thisEnvFn, `superprop_${op}:${propName || \"\"}`, () => {\n    const argsList = [];\n    let fnBody;\n\n    if (propName) {\n      fnBody = t.memberExpression(t.super(), t.identifier(propName));\n    } else {\n      const method = thisEnvFn.scope.generateUidIdentifier(\"prop\");\n      argsList.unshift(method);\n      fnBody = t.memberExpression(t.super(), t.identifier(method.name), true);\n    }\n\n    if (isAssignment) {\n      const valueIdent = thisEnvFn.scope.generateUidIdentifier(\"value\");\n      argsList.push(valueIdent);\n      fnBody = t.assignmentExpression(\"=\", fnBody, t.identifier(valueIdent.name));\n    }\n\n    return t.arrowFunctionExpression(argsList, fnBody);\n  });\n}\n\nfunction getBinding(thisEnvFn, key, init) {\n  const cacheKey = \"binding:\" + key;\n  let data = thisEnvFn.getData(cacheKey);\n\n  if (!data) {\n    const id = thisEnvFn.scope.generateUidIdentifier(key);\n    data = id.name;\n    thisEnvFn.setData(cacheKey, data);\n    thisEnvFn.scope.push({\n      id: id,\n      init: init(data)\n    });\n  }\n\n  return data;\n}\n\nfunction getScopeInformation(fnPath) {\n  const thisPaths = [];\n  const argumentsPaths = [];\n  const newTargetPaths = [];\n  const superProps = [];\n  const superCalls = [];\n  fnPath.traverse({\n    ClassProperty(child) {\n      child.skip();\n    },\n\n    Function(child) {\n      if (child.isArrowFunctionExpression()) return;\n      child.skip();\n    },\n\n    ThisExpression(child) {\n      thisPaths.push(child);\n    },\n\n    JSXIdentifier(child) {\n      if (child.node.name !== \"this\") return;\n\n      if (!child.parentPath.isJSXMemberExpression({\n        object: child.node\n      }) && !child.parentPath.isJSXOpeningElement({\n        name: child.node\n      })) {\n        return;\n      }\n\n      thisPaths.push(child);\n    },\n\n    CallExpression(child) {\n      if (child.get(\"callee\").isSuper()) superCalls.push(child);\n    },\n\n    MemberExpression(child) {\n      if (child.get(\"object\").isSuper()) superProps.push(child);\n    },\n\n    ReferencedIdentifier(child) {\n      if (child.node.name !== \"arguments\") return;\n      argumentsPaths.push(child);\n    },\n\n    MetaProperty(child) {\n      if (!child.get(\"meta\").isIdentifier({\n        name: \"new\"\n      })) return;\n      if (!child.get(\"property\").isIdentifier({\n        name: \"target\"\n      })) return;\n      newTargetPaths.push(child);\n    }\n\n  });\n  return {\n    thisPaths,\n    argumentsPaths,\n    newTargetPaths,\n    superProps,\n    superCalls\n  };\n}"]},"metadata":{},"sourceType":"script"}