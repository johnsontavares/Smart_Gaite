{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\REINALDO\\\\Desktop\\\\ls-gait-web\\\\dashboard\\\\src\\\\pages\\\\register\\\\confirmEmail\\\\component\\\\clocker.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Clock extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentTime: 0\n    };\n  }\n\n  pause() {}\n\n  stop() {}\n\n  start() {\n    this.setState((prevState, props) => ({\n      currentTime: prevState.currentTime + 1\n    }));\n  }\n\n  timer() {}\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"O tempo que se passou em segundos \\xE9 \", this.state.currentTime, \".\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/REINALDO/Desktop/ls-gait-web/dashboard/src/pages/register/confirmEmail/component/clocker.js"],"names":["Clock","React","Component","constructor","props","state","currentTime","pause","stop","start","setState","prevState","timer","render"],"mappings":";;;AAAA,MAAMA,KAAN,SAAoBC,KAAK,CAACC,SAA1B,CAAoC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAEd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,WAAW,EAAE;AADF,KAAb;AAGD;;AAEJC,EAAAA,KAAK,GAAG,CAEV;;AAEGC,EAAAA,IAAI,GAAG,CAEV;;AAECC,EAAAA,KAAK,GAAG;AACF,SAAKC,QAAL,CAAc,CAACC,SAAD,EAAYP,KAAZ,MAAuB;AACjCE,MAAAA,WAAW,EAAEK,SAAS,CAACL,WAAV,GAAwB;AADJ,KAAvB,CAAd;AAGH;;AACAM,EAAAA,KAAK,GAAG,CAGR;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACE;AAAA,6BACE;AAAA,8DAAyC,KAAKR,KAAL,CAAWC,WAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAnC6B","sourcesContent":["class Clock extends React.Component {\r\n\r\n    constructor(props){\r\n        \r\n        super(props);\r\n    \r\n        this.state = {\r\n          currentTime: 0\r\n        }\r\n      }\r\n\r\n   pause() {\r\n    \r\n}\r\n    \r\n    stop() {\r\n    \r\n}\r\n    \r\n  start() {\r\n        this.setState((prevState, props) => ({\r\n            currentTime: prevState.currentTime + 1\r\n          }));\r\n    }\r\n     timer() {\r\n        \r\n       \r\n    }\r\n  \r\n    render() {\r\n        return (\r\n          <div>\r\n            <h1>O tempo que se passou em segundos Ã© {this.state.currentTime}.</h1>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n    "]},"metadata":{},"sourceType":"module"}